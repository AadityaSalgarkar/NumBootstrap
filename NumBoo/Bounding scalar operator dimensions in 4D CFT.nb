(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    808756,      15354]
NotebookOptionsPosition[    804395,      15219]
NotebookOutlinePosition[    804936,      15240]
CellTagsIndexPosition[    804893,      15237]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bounding scalar operator dimensions in 4D CFT", "Title",
 CellChangeTimes->{3.6654615566161532`*^9}],

Cell["\<\
Defining the functions as defined in the references by Dolan Osborn.\
\>", "Text",
 CellChangeTimes->{{3.6654615711473355`*^9, 3.665461633176194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"k", "[", 
    RowBox[{"\[Beta]_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "*", 
    RowBox[{"Hypergeometric2F1", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "/", "2"}], ",", 
      RowBox[{"\[Beta]", "/", "2"}], ",", "\[Beta]", ",", "x"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.665390359783131*^9, 3.6653904713835707`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"\[CapitalDelta]_", ",", "l_", ",", "z_", ",", "zb_"}], "]"}], 
    "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "0.5"}], ")"}], "^", "l"}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"z", "*", 
       RowBox[{"zb", "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "zb"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"\[CapitalDelta]", "+", "l"}], ",", "z"}], "]"}], "*", 
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"\[CapitalDelta]", "-", "l", "-", "2"}], ",", "zb"}], 
         "]"}]}], "-", 
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"\[CapitalDelta]", "+", "l"}], ",", "zb"}], "]"}], "*", 
        RowBox[{"k", "[", 
         RowBox[{
          RowBox[{"\[CapitalDelta]", "-", "l", "-", "2"}], ",", "z"}], 
         "]"}]}]}], ")"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6653900813374553`*^9, 3.6653900939168453`*^9}, {
   3.6653901472113094`*^9, 3.6653903536260114`*^9}, {3.6653905103916073`*^9, 
   3.6653905369733286`*^9}, {3.6653910041368904`*^9, 3.6653911045318623`*^9}, 
   3.6654036724474792`*^9, {3.6654037574517317`*^9, 3.6654037701594925`*^9}, {
   3.6654046808805037`*^9, 3.6654046874869113`*^9}, {3.665455121128894*^9, 
   3.6654551235435047`*^9}, {3.6654555884785357`*^9, 3.665455640437969*^9}, {
   3.6654557805234284`*^9, 3.6654557844830666`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6653904762057886`*^9, 3.6653905089046035`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "l_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{"l", "+", "1"}], ")"}]}], "*", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Factorial", "[", "l", "]"}], ")"}], "^", "2"}], "/", 
     RowBox[{"(", 
      RowBox[{"Factorial", "[", 
       RowBox[{"2", "l"}], "]"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665390571655466*^9, 3.665390636345623*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", ":=", 
   RowBox[{"z", "*", "zb"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "z"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "zb"}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6653906554853945`*^9, 3.665390667284263*^9}, {
  3.665454989973501*^9, 3.6654550048364162`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"d_", ",", "\[CapitalDelta]_", ",", "l_", ",", "z_", ",", "zb_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "z"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "zb"}], ")"}]}], ")"}], "^", "d"}], " ", ")"}], 
      "*", 
      RowBox[{"(", 
       RowBox[{"g", "[", 
        RowBox[{"\[CapitalDelta]", ",", "l", ",", "z", ",", "zb"}], "]"}], 
       ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "*", "zb"}], ")"}], "^", "d"}], " ", ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"g", "[", 
        RowBox[{"\[CapitalDelta]", ",", "l", ",", 
         RowBox[{"1", "-", "z"}], ",", 
         RowBox[{"1", "-", "zb"}]}], "]"}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", "*", "zb"}], ")"}], "^", "d"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "z"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "zb"}], ")"}]}], ")"}], "^", "d"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6653906806481824`*^9, 3.665390681355667*^9}, {
   3.6653907465500455`*^9, 3.6653909741859045`*^9}, {3.665391119319729*^9, 
   3.6653911508407574`*^9}, {3.665391200648857*^9, 3.665391223446066*^9}, 
   3.66540285634369*^9, 3.66540321766265*^9, {3.6654032877546644`*^9, 
   3.665403293135118*^9}, 3.665403684499157*^9, {3.6654550086009274`*^9, 
   3.6654550198504295`*^9}, {3.6654551347379723`*^9, 3.665455162518506*^9}, {
   3.6654552710929394`*^9, 3.665455286021899*^9}, {3.66545537173308*^9, 
   3.665455408423047*^9}, {3.665455881901211*^9, 3.6654558962842245`*^9}}],

Cell["Taking the limit where z and zb are identical.", "Text",
 CellChangeTimes->{{3.6654616386038885`*^9, 3.6654616514188633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"1", ",", 
     RowBox[{"l", "+", "2"}], ",", "l", ",", "z", ",", "zb"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "\[Rule]", "zb"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665391173920025*^9, 3.6653911762896185`*^9}, {
   3.6653912708070602`*^9, 3.6653912830063868`*^9}, {3.6653913148931475`*^9, 
   3.665391358410572*^9}, {3.6653914713602266`*^9, 3.665391559465867*^9}, {
   3.665391597629349*^9, 3.6653916482166033`*^9}, {3.665402796580821*^9, 
   3.665402829995115*^9}, {3.665402934161578*^9, 3.6654029819346333`*^9}, 
   3.6654030224603434`*^9, {3.6654030980786114`*^9, 3.665403181044947*^9}, {
   3.6654039864578557`*^9, 3.665404010532939*^9}, {3.665404043840514*^9, 
   3.6654040987291317`*^9}, {3.665404997851966*^9, 3.665405006842967*^9}, {
   3.6654541536492634`*^9, 3.6654541546999626`*^9}, {3.6654542064314756`*^9, 
   3.665454256829097*^9}, {3.6654542969738784`*^9, 3.665454354844043*^9}, {
   3.6654550278717856`*^9, 3.665455035110611*^9}, {3.6654554143523784`*^9, 
   3.665455460543749*^9}, {3.6654554916214066`*^9, 3.6654555617118707`*^9}, {
   3.665455599344633*^9, 3.6654556047372303`*^9}, {3.665455937792684*^9, 
   3.665455975167258*^9}, {3.6654560165078363`*^9, 3.665456018395097*^9}, {
   3.6654560932140102`*^9, 3.665456146892823*^9}, {3.665456362812872*^9, 
   3.6654564682341986`*^9}, {3.6654565016868067`*^9, 3.6654565220999203`*^9}, 
   3.6654565753174624`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"-", "2.`"}], "+", 
     RowBox[{"4.`", " ", "zb"}]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "0.5`"}], ")"}], "l"], " ", 
   RowBox[{"(", 
    RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.`"}], "+", "zb"}], ")"}], "2"], " ", 
   SuperscriptBox["zb", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2.`"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "zb"}]}], ")"}], "l"], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"2.`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.`", " ", "l"}]}], ",", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
     RowBox[{"2.`", " ", 
      SuperscriptBox["zb", "l"], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"2.`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.`", " ", "l"}]}], ",", "zb"}], "]"}]}], "-", 
     RowBox[{"1.`", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "zb"}]}], ")"}], "l"], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"3.`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.`", " ", "l"}]}], ",", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "zb"}]}], ")"}], "l"], " ", "zb", " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"3.`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.`", " ", "l"}]}], ",", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["zb", 
       RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}]], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
        RowBox[{"3.`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.`", " ", "l"}]}], ",", "zb"}], "]"}]}]}], ")"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6654565842542553`*^9, 3.6654653964547215`*^9, 
  3.6710670243847723`*^9, 3.671067266484969*^9, 3.671083192551874*^9, 
  3.6710833020377626`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotFunct", "[", 
   RowBox[{"zb_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"-", "2.`"}], "+", 
      RowBox[{"4.`", " ", "zb"}]}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "0.5`"}], ")"}], "l"], " ", 
    RowBox[{"(", 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", "zb"}], ")"}], "2"], " ", 
    SuperscriptBox["zb", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2.`"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "zb"}]}], ")"}], "l"], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"2.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", "l"}]}], ",", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
      RowBox[{"2.`", " ", 
       SuperscriptBox["zb", "l"], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"2.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", "l"}]}], ",", "zb"}], "]"}]}], "-", 
      RowBox[{"1.`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "zb"}]}], ")"}], "l"], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"3.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", "l"}]}], ",", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "zb"}]}], ")"}], "l"], " ", "zb", " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"3.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", "l"}]}], ",", 
         RowBox[{"1.`", "\[VeryThinSpace]", "-", 
          RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["zb", 
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "l"}]], " ", 
       RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
         RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"2.`", "\[VeryThinSpace]", "+", "l"}], ",", 
         RowBox[{"3.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", "l"}]}], ",", "zb"}], "]"}]}]}], ")"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{3.6654565927997465`*^9}],

Cell["\<\
Plot the function which shows all the F for various values of l and twist 2.\
\>", "Text",
 CellChangeTimes->{{3.665461663802758*^9, 3.6654616806222353`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotFunct", "[", 
      RowBox[{"x", ",", "0"}], "]"}], ",", 
     RowBox[{"PlotFunct", "[", 
      RowBox[{"x", ",", "2"}], "]"}], ",", 
     RowBox[{"PlotFunct", "[", 
      RowBox[{"x", ",", "4"}], "]"}], ",", 
     RowBox[{"PlotFunct", "[", 
      RowBox[{"x", ",", "6"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Plot showing all the F as mentioned in (4.5)\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6654040567381325`*^9, 3.665404064095026*^9}, {
  3.6654565261032143`*^9, 3.665456542713915*^9}, {3.6654566029582243`*^9, 
  3.665456651777207*^9}, {3.6654572847707386`*^9, 3.665457323180798*^9}},
 NumberMarks->False],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd2Hc8le8bB3DSN6UUKhLJSlJGNH3Lp6KkIqOdaKA0EBpGRUiljNAwkhEl
GUmDCpkZ5zHDcZzzHDujI5uM3/39/fW83q/zeu7Xfd/XfV3XfR650/am1jP4
+PjE+Pn4/nvuse6szPl1UGfPfOOS/54dyYdOcyTXQb6n8sDeJesgPrfWP11S
D936AZ5+4npQ27zoZaTkAVy22PfUcOEBaFdopT6StMJA1tm4/nlWyAnPW/9Q
0hla83irDfmc4eXpd/2+pDeqxl46CnV4wcqZJ3lPMgSu4x1S994HY3aIQXTf
nzjUtm/wfCIeh48Vmvr6MinQtlZvXKr9Fke8WMw8v/dY98Cq/0XbO9inOak+
HfyMLVNy3ztNP6I/8GcxP382JmeqH81DFopzC7OpLd8hkefVqKGfDVsXA+Gj
PfmYH+hVUeyRi9w5mtNJl4qgGclraFXIQ3xs/tTSFSWYKIjdOVmej23iX2PM
kssQqvcnSm57IVSLWJ8KVSg08r1fzRdShJptZr9f/67A2sKF3RkdxbgodKGq
VqMKNq9FgxyESlBaf/jrfP9qOKjwHR5SLoXZriPc1tYaOI2JWu9aUYYNL/wO
v1D8idAmxp7M4TLQU8E1527V4dwNxeSUr+WY11Phd827Du12L5stcsqxqUFY
9869Olwzab8xL68cgem+abHBdaj5ldB5urgc2865+bMT6qBwViVgoqoc0ZWn
dx+oqEN0yBrZlo5ynI5b+wVy9TifucL0hggDbQZUrHhePcQ0u4fazBlQ9FsZ
EFRcj+v/ery2tGTAquyW6zxGPeY1BrnXnWKg2UjDZEZDPfSaVDxzbRhgmwVN
9f6ux7VerZm3HBioP2F2tGBpA7K3xPyJ8mKg5HLdfGfHBkg94dm6vGJgTrr6
+O9rDbA/LyH8MZGB3YO+bbY3GvC3OovqT2Kg6OqmL5Z3GyB+3jXdKo2BfLdn
tnufN2BRDGNwbSYDX32O58uXNIBve7WFYykDqc84LpVyTLzWNqy438PAxVXS
TM2VTJyXuiPs9ZsB5c9HtEPWMHFo/SM3lz4Gouorxw9tZGJ0oWLXyUEG/CXy
3Vj7mMi8oSa6dIKBS6GvbnRcY2L2DPad9XMpqARd9pwsZyKYkSAiqkyhXTaZ
a1HNRD+lf45aRSEmtWt7Tj2TxD2rz281haUVZ2Z4tTDhqiIVMq1GYc6CQ16z
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PhNfmFQ0eSTExO4twr+7iPd1rZteLMrEmRz63i/E/MVcIZ7iTEyITcywiAdj
x7ZxrGNCjst13xjxc/s807kNTDxUiZCbI76i93rGTZqJ6L8KgwvJeqsq+jyZ
lGGiVGjzWl7i3wsMqsZlmShevZh9LXEtC+YOckz8bBl4J038um7j3Kg8E89e
rW6TI9Z+9mvH4F4mFnDue32UePPNjmrL/UwMfNmsqkvMZlp84ZsSExwWmhYm
xCkyAc+ZKkwE5+8QcSPmyd/C1nqCPO/HxAvpxCMaEhnemkwc/LFJrZS4vmPV
JSUdJtLo9bl04sdTcw1v9JkYuX7ddPrf/t3dGOVkzgRXjsrjY+R8jpeU6khf
JPPVKMhtQkzT/sjZeYkJU+n6Nc7ET+xjrqjYMZGflzL0ilgwyQn8rkyo8wk7
LSbxZErRarzsBhP33ud7ShC3VxnFud5m4noua9M+4vB+Vb4eDybWOYRtcCQW
Xy/ESPFnoqqSY66PWCos7/aJ10z0CF7jGybxbtHmNDn2OCb2bv5xkI/Ez76s
2L6MBCZ+u3It3kUcR398UjSFSfJT6aGbxDIrzMSHPpL5u/rAV4DE3x0PF+c/
bGBij/ywpjmJ3yvWzDjsb2bixAv/kMfEP9+MbfhOY+I8LfxSLnF6SZvfmXYm
xFnRRWtI/Ff4m2i08RsTG0pG5OnEB5xPzZVMM5Ghas1jc5bkT2vWDfU5JjQu
zWdHEKeevztd/5eJjU4reuuJJdXT/3xe2IPxAyYJ8ufo4BJd83NsWQ+OWRzl
XmxE5reou09kfQ/GuBvYC0n+usxr13j1eA+OT3+TCCD5cCMH56mpEz3wjovY
0UTMmIiqu63ZgzvdVR/5zcn+YTZVP9Lrge1NwT3PiPek7y6LOt+Dleftet6Q
fLvQYO5jzdUelMZ71X0m+Tnite+r9RE9mPRWkA8n+f68yq79jMgeuHt++/mD
WLL3My3sZQ/OHk/cp07qhfi1mxbzx/XA+UGJ9RRxRljRJba0HlQ4qSma2JH9
HTCxrauiBypa0s5qpP6Yu2mS/XS8B4r7X/LeIPVNoQinlvZED7gdxNJ7iT1z
3g3wTvVg1wXvzmPX6eCenBb2mu+BK/NcjqgrHauvPrl1dUkvuLq7w8vd6Nhu
VX1Ic20vzNdLlMndpsNYT75uyfFeXGmfFbDxIvlM5ER09oleZNU9CmUSm/ZY
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
f/7//8b/A6miwow=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwdmnc41f/7x0VFuzSMpIyEMpLqk+RJS8OIVFSkoQilISlJhZCkEJXskb1H
cjh22XtzzttOzjkVmcnv9f39w/W4vK/3db/u+3nf9+t5DrFLN/XNuLm4uLTI
j//9PmY2VEf/fkotRtqkxG88Vm0w8fQlhpAyjnFyjKtmnmPdkiavNKGDGLeY
NNts4w/5PWsiPwoZ4GpPaXrHiyio1O5IfiN0Bb1NBZ2xkhmQ2BcUXRR4Fcq/
FwmK3M7C0li+4LGNFlh9SetRZvJndD3renla6gaWrbXhezQ/D/QPRTtfCt3F
h1TLGx1LiqBcfz9l8zlbxFTPe67NVYwYPnm5vMB7OJ23+nwApxhvbAMkORvt
8Yg96nA3vxSXda1X60k5YkGVv32pdDmePXlx30PIGdVjZ66c31iLPJGrmadz
nFG7v0Ft+H4tJrPUx8TPuaCk++BmqrYWVuw/N78EuoK3Vypqu0MdDM6ZXhvZ
6I6PpxprzhfUw2tcJTKb7g5nreWvdq5owNfXa3udL3qgqHaPCO1cA/Z9LTfZ
EP4CtxrNY//8bIDUzp2ndaS8sMFnUK98aRNMa1f4Cpd54clTIfm2E034YDlc
N3DtFTLqL/0t92kCX11NVL6BN/iHUjKs1zXDgddF3PDta1zfknd1/4oWXLnL
EXIX8oXAm81Fmg2t2MHz5kGqjS+q+WgBO5e2gfuNckdHmS8eX/tnI3uwDcFJ
9oHy9/yw5Pd8nb0pbWgf5tnYWP8WK5oPb73t1I5P9lGPZ2X8IXlV32ZVajvs
+I4ypZ7444zo3nVtPe1YI+UVaq8QgI8/4g791OiA7kVByY2e7zAT7e0fMt4B
0Z85zkd63yHhLs9Yv1gnRhyN+2+pvMf7fZHzb2p1wiMwLKp46D3CIqfvGQZ3
orhlm8z1Q4G4FfZQr121Cyo6GvIZ/4JwduXU0zHDbvB19Xp1nwrGK91ig0L7
brRYunJ4E4LBdbUob/ZdN3KKzQwT5EKw6YfUktLWbhj2xApxdYYgeKHYbLMu
A/kyf7/58oYi4vt3Qy0rBqRuaT+Q2REKUe+sILgx8GeO067vEYp42Uij6DwG
3mzYGRj5Xxjm+Ykxm/mZmL7iqqVyJQxNbuY24huZuBjf8rf6VRiC3G9O7djK
hOLeB8aTA2GI2ZG1LX4/E1WG+aLH/cJBLUuuW3iTCT7fo6E/f0Ugr8F7EV8e
EzP/UTOhwpH44k1fY1vKBLvr/umTByLhMcq+/rmaiYYtn5Zk+kbiNy1y4ls3
E0FfFt57uDsK1uwFkoKzTLw2DardZhoF9+BcKe35FJwX7Nra7RaF1wNLDhgv
oWCha8ZUb49CWc9Fr5VCFJR7i44tfBSNDYeyHWuUKGxxOxeZFRkNu8ZJ8+//
URCWG50zr46Gg829GkqNwtw98YyKjZ/ws6858uYxCuWLn2x8XfgJh6/UqSw2
pUBLEnyw/8cn7PEfahA3o5BskNw4ujoGW7NWcUSuU/ALYrifNouBz9XStVl3
KJgqqY2t54tF4Hr1r54uFE62NOlUKcbCiPek6Bd3CocdrGMcjWKxfoIrvuol
ha2lgSZUbCx8e2+nhfhRELVU/vymIRYK1xWrLr6jsHJl5eqDf2OxT9zFhO8j
hXGjma9R2nHYoOwrwhtB4fu/NxKG9+LgUi5GXYim0Bku67goOA7S1/5oBcdS
KGAZ7bD6GYeytw5oSKbg+ST743afePicLbggkEvhsdSJyZ4v8XguNK2ckEfh
dsWgvm9fPJwKePu2FlA4s1aAb2JnAjrkrVv7Sigcy0m89MkkAStVREM2fqWg
euEwzeh5Amr2Gx8+WE5BPMb2dm5rAtI0HshqVVNYo7OsynpeIlxXXu1TqKXA
OxqxZaNsImL959n+q6MwotrY+eRhIs45bFts3ESBQVnu3hGRiOlf3c6sZgr1
rjxv+ioTMTfgWWjRSiGrVklTUzQJ82evWkp1UPD6PnJk2+EkJH/N3nqxk8JV
7uhjq24koToyTte9i4La+ota435J2JVOWxzcTWGd8nqdDloSth9rfBXGoMDW
atKl9ydBYYvaKl8mhd7Usk/1C5MhFZhBv0NR0M2PkCkRTsaj2Es1Gj0UvlQ8
ic2ST4aQUJf1P8JbWk22xu5PRtpj+cqYXgo+fXvjA08n4/jRRqGDfURfPwXl
Xl1PxpqEApcqwpazfxKeOCajI+ii2uF+Ci2LGuTvvklGUWbArUTCB9YlJ12N
SobCyjKthQMUksRfKhrlJENpU/lfbcLrFa6nHK9OxkGXfwkuhF33aiqp9SRD
o1LDM4Hwb03JNMXxZPBsHyssIWxiME9ZYnEKBk5OO1QTLjftTl8rmgLmcF5f
GeFd1l928imlYJmFsmQq4TD7gMzpQynYENJ85SXh5a62u1lGKbA9G19jRPjB
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
ezT5utAD/huX/Jmb40AbAf///0r/B3QDyA4=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmnk0lN8fx0VfVKRQ2SKFpKQsLSrvVkVIlqKyRIqyb9lK1hKJkDJj35cs
KSRKCNl3ss3Y9xnMhJT85vfPzHmde557P8v7ufe+z3lETWy0zJiZmJjeMX7+
/69qNtFSNqmrtDljeEfllmal8exrJiR+eXgLuQT5DWRi+6aO4Hz+86ipkWYJ
rSzGweO8ydH8OtDyPmjvufEHmHgmw9ZE9DHrrGvIZNaIlplS79sShhB4dLTe
orQFis1yua/470D1DnP1L5dO7DkVk1pBvIvb1oSL4dnd4Mhgj6WLWODA2z8K
wvU96Pfpf3FNwho8D2Lcbb8PoIxQofCC3xG+9I89ZlNDkG91yRO/6YR9UiOn
kgqHkc5+UPoL0RlCMy+SnB6N4JXTGzGqiCtsHpxeOkEfBWuWetzT225w8d9O
b08eg9sQs9CuRHd8sEiJUb06DtMrVjxXJR7jz+uJga7XE+j22/1y8p4nJIQU
He8fnoTEwIP/vuk8gd1O3cDmqklE8Yp66b/2guDrI56jQ1Pw8Qp0ec7vi6cr
ZrJHR2fwRehuwbViXxTv+W+bz81ZLBeepu++6Ye3EWw+fxpmYUn5ZfOZ6I+x
UNe0xVQKUgKa3z099RSFsvOlhVxUkMUyp7UHnmKcyHN1tyMVOjeN782IBGDI
ZLAwl38OwYuKyUVlAWj5Ftgjf3EONaHbhn1vP8evtfJnZxzmcKqm1nBnYiAq
1/iMdlfPQUJB4ZqGRDB2ZFef2Wc0D+NmrnCB6mAIlHFUC3nPg/BgqmXs3kso
dXEaTSbOg72lKeWrTghqHAyZZUbmkSxc+l08OQSXWD0nCpkXcNYyYyTwVwgy
y9Jiju9agAeb326916EoL13be15vAfy69me+jIWiSnsxr8d+AQUJRsZiR18h
+5Kjp1/QAuZOKcbMdb3C3N8NrYdKF3DHkcofwB8OS3GivxcvDXIsr9ze24bD
yI9rYZ0UDcyv5Ht7q8PhdI3NJ0GJhtgcV+JB5wgUjHDev2VGg7WS0Or1hgh8
suqy8HpIw8mGLwZeYq8R48s83v+Mhp4pFpH21tfQ/URM1kqnIc01xXN1XyRs
qMu7nIpoeMiuQpbwioTgBF/ocBUNvBLB8a4yb+CV2cpROEjD8IdDzIn+byBj
oS4oTqHh/bk2k/r+N7gxKrV3/jcNV27ziYkEvcV/opbV+Vx0CM8V+14afgu1
98m67/npmHlsMGqnGIWcvcpdwnvo+MzJpEwIjcK5OE6m1f10PCcmpFRORIHr
6B1zTXk69PZfYKOAAJul68FCJ+nYWzx+b0ckAecvvey8c46Oyq4D++5fIIKe
8WXMWZOOsLtNAWFEIvraZpkuXqPD5JfdVAmNiE8mlsOxN+k45Mt7eUw1GuPM
yU98jelY4y7M5EqIRkbFw4KlO3Q0xutzHP8dDYrdtMZfczqIh/5ammjGwNC3
iynCko4HX2MaAlNjQFvyt620oUNR48zBj/9icNBJ59ALezrY+4eDB3RjESd4
+tu8Ix1dD/ypbO9i8VvRM4zuTIf2I940PuY4+Gqwsr1xoaO40kzvnXQcjN05
LQdc6djNUch+Vj8OAr0vWWrd6AjQZv/U6RsHn/rva7fc6ZiL0rd4kBuHh0FR
vm8ZrDeUwc/UF4cYlZ1pXgz+uu/vj3C2eFRQZu13MFjCTt1tn1w8spqSybcY
8wUXxUh9MWSMW58kazPW+7VG7dF6Ho8oX3Odfw/puHXxTOD4x3hMOa7yGDLi
rQx+dcJjMB6ZNy9MOTLy2d85PL2FMwHFHdcjzzPyfbVTgZh8LAHmWVbNjYx6
rNzxV1O8k4BRn8Ont1nRcTur62/jywTY5XA+5b9PRw1N8p3p5wSMqTw80X+X
0Y8TbgbLYwnIyD4ydduUjkjvOs4X3InwtX+3Pd2Ijn8/hL6IKiXCZoH/xAdG
/xr0vgpfjkhEHylBUkibDvm4LU2kskQkXq0vdtdg9Gv8tqfjTCLcbzzqSlKh
477zenL0uSScVgyf1AOjP+Eq8XPzSfA3n7/xQJKOP8cG/8QLJGO3v09r0m46
KP0u17TPJYMrYUy+UIiOtr1pmwrCk7EaFqN8fwsdMZ9Znd2PpgCBLHaiizTI
D1eosj5KxcYXdnq+n2nY++xmcmFyKkxcsnrf5dMgIE1bM29MRYjM1uCSTBrW
nHd/rBNJg2DMGmcQgYbajV4ioeVpuGrOnbrejQZjWSW6IHsG8gb3DvTK0qDd
1aHRcCgD9ENtKTH7aFD2sEp/rJ+Be3HDnld20bC/img4mJGBdscePOKkYVH/
T02Keib6Hr3w2ja+gCCvoujDYVkI2nDZ6XXkAgqbZS9eFM7Bt9jn303n5hE8
OXPpgHIONuyemiaNzuMuc6rqVuscJJUfzNPtncd2eUGN3tIcVA4ZccpUzeNz
nVdG4cFciJmTvGIJ8xCUuZ93uTEXMdaPk1IvzKPnl+JXB873cL3tnJYSOQc9
n76eisAPePPoR+RvZwps8hyk39A/4bblO/GOyQlQTg62/WAvRn1cO69z5wQs
azTc/ggVQ+3HSendFRMwJ+2rNrxQDEOa8xKBOAFjTrKx+OtivHnsk79dcwKa
Fmrh749+RmWa+Y6Dn8ZxSFT8T71bCcLTj6yyhI9hIaSzZt26rxhb3XW80HIE
JZZ5GNn+FQMfbGv6bozg6aWggqoDX/GLtXmJS2UEQkxnkwL1voJF3l4qVnwE
F2zeeW7L/QrZ9DZvY9Iw6iXOEsJlylAu8aj8ge4wdv3Hr5U2UIar0x/C/C4P
oeZb1demk+WgBwvmhBiSkVL/d+TFxXJIRW5Yf1KTDL8u2Y1qWuXgy44So50h
4+xsjE7NvXIIDzq+8xUno4Tv4WTZq3IofMs9ad5DQq7NXp73E+VIlln56bE6
gDc7n90ND6+A0Ra76Bidfli4qnDqz1RiffjAu6hzPcgQ3GpguFiJcZby97+k
ezBT2p1lyvQdy8qjO034emDNbK5mzfsdU6IBS9azP+EY6B/oc/I7BE/+sbz+
5ic8oys2ZAd9x8TsCof+fDcivp1iZZGuwmRg9aaGnC582yC7lmVVjd6pVv+F
mx2Q1DlU+NylGvV3vHmbLnUgJOagjblPNZRMg4tKFDpgLLeftOdtNbR1ZDjq
uDrw75bY16jKasZ+fs3wfWU7FHO3ez4TrEHY09Ks2MPt+HDtzz/THzXYdpbL
5fWONqQkVv4TEK/F83UBewW3tsDWT2cQMrX4lMer0M3cghP3RiruHK9FZkXx
tXh6M5ql1gdkq9ci/VNezvXuZvzOO8dz1rkWdw/LZWrHNUOtrHyvRXUtMuyq
HZ/INoPWV6ZZaFEHgSc5bN1fGnF6e2mCdnY9shzqB6Xy67A+YpvNhaJ6GLyN
KH9FrEMNj/WJo+X1aM9qjuD0r8OVrSLtAp31CDwc13lCvw6GHF7/Da3WI9/y
IL8rUx3cmS+Y26o3IErgq7eFVi0KKPXSL2YaUJBBlf7M8gPS1X1FVVJNOMyb
cYXrbRW2Ux7Mhig0ITyzn0PBrwpM2/6I3jzdhKrjp1Yt7arQbsIfSNVtwtY9
fEd5VKvg8U/XgM+rCZVihleO/v2OeoWmdfe7mrC+zhnNpt+h0GqczHq2Geen
z575iUq0n9ampFOakTcTt5lHshwrscPR72nNsFD1TbjFXw7RNQf1z8vNCDqu
PvZ+YzmsS8Oz6hl1rnY31/ab/QY2xc771O0tuOoXEVOW/w2Kcvrj8mhBWrHN
9NOz3xAnbkT++rIFXfLB2dwWZbDc+KC141Ar/rRs4/qbU4qU0u0Fqkda4XlK
/daV16Ug2Za//XqiFQvXAvuLPUqh1cV/O125FRuX/or1qJTiWFIN1eNWK5Qz
jt4/OlqC9UoSnGLPWuFyLnL3jV0lINoNXrQntcKAuDyUnVqMuu7rpZuD2/CE
HLf74mIhvHvGt90PawNrmZX93aFCHOt7aP39TRuO6a43fdNYiCRSpIhHYhv4
hSRH5VIL4THW5TVZ1AbXxvKUi/qFkKZfV64cbkPJxVTB9rICvOTSa3I93o7T
b8LTeaI/QltZb3BkpB2k8VLWBf98FPMcbhqebEfevl0LV1zysXtwQ+kQpR3T
F64MF1vkY8H98xvycjt0G1jeFarlIyRPWLOPowMTStc/XebJR73Q6Jc2+Q6M
fdqa257wHudpdsRy3w48PnXpy566PGSVqT7/FtCBrH1l7zZ/yQNP8B6XsuAO
ePu+NP0vLw9Dkh3aX950QGsu4O+2yDw8MTy2qTirA4uJ2wfKTfNQ+uOfa157
B5wKFy6fW8vFkbjA63FinaCwOJFilXKR+83TdZNUJ2wfcz/6dTgX+4cdCM4y
nYiYeZ54XTwXuyRukdQUO8GeK2B8hiMXm7IO3Pt9pROS9MoerY85IBc2OGu5
d8KbSr3iR8tGYBPX6/WtnYha3nwzyesdWOdZimy6OrHJamuByoN3eMK9/LOn
rxPWOQ+i/tN9B2dd8s688U74JyO/TPIdjHtzkw1WO6EScXD72ZYsHBm/+rFA
sgshW8vu3JbIAvlfWLu5ZxeubudiCSdngGOmOfChbxcuNbrwHmnMwLGfnOf8
A7qQGeLSOfk5AyH5T/MSw7rg8bJBwT8yA6fN3YMHUrtwjpw+HnIlA/EtJpd0
mruQF7fHbqg8HSZJh0sg2o3jF7e6CBakITjU2kFDohs2WrEyPclpKH6cKWWw
vxtV1WZ/0yLSwK0v/tZNoRsf15kmOzuloYKT3/mjSjfEPoqNNSukQewh06H9
9t34oHClxflTKkZVmhK3V3Qjd/bRzmP1KRAL3PsytKYb5Qbn1uWVpOBOvacb
R2M3+LmnBE68S8GQxqGrzD+7oSFQ8sk7OAUD2qH/ZindONHUJT1wNQXdBtr6
3wV+opB2zbS4Nxm1dl2bHe1/YiEyMzz7TxI25MusUB7+xLxp+hYFShIu0Z+O
Wjz6iTu5AtJ15CRUOx8rMXr2E9cu6vBJVCWh0v2txeWYn3APWrOLCE1Cqd/N
yt21P5ExxSqtuT8JuW9Jri2iPXDVELk8YZEIy31CPbJ7e+DLzsfiY5gIyU96
iuEHelBosM51v3YiYrtbVq4d7cFjVhWX5JOJCN5R6d6n1gPxlOTik1sSYRWR
9mj8YQ/MeEr2zH1KgFSonddqQw8E1Xo99u9g3Bt3ZQ8atvWgOfiCnCXjHpqQ
O3WmrLsHkscFnn9iSYBAsymzz3AP+FcOLLvOxWMD1zUf9t89MGa3XQipjcdE
kKIfj1gvqKUEsy1e8Uh+xhKwz60XOuEDr0WW4sA98uzxQc9eKK+FHLSnxuEJ
NjvK+fbiZJ3lXON4HG4s8hmdCu4F5RZ/X0p3HLjuHFS4mtCLrb7yhU3FcXCF
/qBLbS9CJ3d+YPKKg/pi9vEagT4Eb+1c/5k3DsVX5WUaRPpQeqDJ+9LmOEi+
+yTWKtaHN8/ifElscWC+U8nVd7APJu/L1uksxqKw5eco9Wwf4oitecaVsRB9
t/7Vjgd9KAvi4lw1jcUv0xtTdz/3wVxJ1nl9Xgycef7wdJf1IUKLXBGYHIPF
csIplao+HK42lJKMYrBof8j+lj7QX5wXiPOJwTLJ6OjcWB9OVv9yDLweg5Wb
Zr6u3P3gCLStu8gSA7dNrNlTO/px/HTxPiGGL/pTnNJ1c2c/qg3GNv5HjcZf
/gkpJcl+/F7ql+XtjcZq1/0WZqV+GCXT9+79EA0mHVvhIIt+/GdC0+W7H40n
LFsvrVr3o3liw8yh29FYl59nZ+3YD+MN5CcGetFg5qZVanr2I/KCxLMF5Wiw
NDs92BbRj8StJoqbxKPBquZeFFPG4Gn95rkRIvz/CA5xVfVjwaFx4EI/EayZ
JZu86vrRseeka3YHEWwb/xmadvZDwzP1aHEVEew1T/6TnOlHl/KC+Od0Ijad
99fK2zGAQ546+gYORJz8arO1SmgAdZ9MLuhaEWGtqN/cIzoAA+/YMYN7RLQe
OqCx/sAAJhojjsTfJCJqZ6vK9dMDCDRrDqGeJ0JyaeeZVfMBbPbOcEsVIOKG
PRsTt/UAZF6sfEzbRkTQ7NwXCYcB2BfMmxZvIYI6XHFS89EAeiiT7FxsRBQ0
WxxLDB2AINPlrY/oDJ+b8VFGpXgASymd2y1aCXAWj6UYfB2A25PiTptGAtLi
nr2zrxzAuPXRNv9aAjZF3txPbBxAfvo+59FyAlp91u2lDg3ATrmPx+wDAevX
pkZZJgZwWkbEfDaXgCNu7Ul8swNo/xs+5PeOgLe2qbvPLg2ApNGE8RQCjA3U
hSM2kXDXVOLagygCXnUf6U/fQoLWUa3XjgwfXqm9i/hlGwmkfzcmX4QTsFeV
xj8hQsJ7l9Nf54IJoBx5u+2EPAmnp3Opzr4E7Hrv3X7lOAnnKyoDmbwJ0JK2
DLujREK+jqVUlCcBH/dga/AlEgJFj5uvuhHgsWWUY/AWCa9Kyz/62BMg1fP+
dN9tEvoezM68tiXgZ+ITx667JBgfCHP7ZM3I56hQX4MtCbYhk2EHHhAwwjTF
9cOJBMV1LDsfWRAQVlt4rtKNhF+CFkt99wiYM9DOLPYlQXXgHqH2DgExe0VJ
HwMY9+7ichM9UwLU5yncecEk2KRTnH/dJiDD97lb6hsS1JaLvAyMCNDT0MtO
iCbBus/eWdKQAFY+iaHoBBJGuuU/MBsQYJr5TSU8i7F+hzfb6A0CuJ1ePnqZ
R0LyKx/BWX0CypQM8p4XkNA26OS0nsHW7PtH/T6TMP4vh3e/HgFCrct8XmUk
OKuGLRtfJ6CWUKXm8Z0EU5WgXSnXCHA1C3/ysJZRvyTuoBVdAiRlTD7YN5FQ
IZGuaMjgzmWZCat2EjjK+ve36BDgW74qaPGThJUnKkbaDJYLqrtyZ4AEcnRI
+4g2AUO6b32MhknQtTIJ9GNwiMi9whsTJESaufooMFhpUn5ad5aENVFCCV2L
gNn3zCJXF0g4Z/jmSAWDiR7NWmpLJHyZV5uPY7Cqcoz/xb8k1A7Hzrxg8F+2
IwbxTGTIXPKRfM7g9hmhJWEWMh7dpydFMDizhSWU+B8Z6sl/bucy2LtgSkqA
nYzIx1lGPQzWJ7RURm4ko/KteAwPI55DT4oMt3GS4fE5ZOctBrOZxS6/4iJj
S/3ugXwGD6j4v9rCTYZIuyBZgJHvx4NWB4J5yVherdoTyuAgHp2qTTvI2PTa
LX07o153lhWNA/gZ45ve2GUy+ES/6AqrEBmqc4EeVxj15i5nD/cVJqN5qaGW
mdGPqRSqNLMoGad+k299Z/Ab29LbqwwfF7xSouHC6KeNbtIfN0kylG5V5Jgz
+q+sGBixLEVGnMe26+Y3CfjFov+DJkNGgM4r9wiGXuonYGonS8Z4pPZKOUNP
SQ0SqxR5MrTzX5SvMfSmFUk/NHWcsf4xXrlUEwL2efTW3jtJBt8Dzf6tDP0y
3S6/M6pEBoV1tD3QjIAcqZA35HNkLHba5b4zJ4Djy36mLnUy9KdZFNNtGP1T
2/XhOcOXssft1iyyI6Cxl9dcSZuMZJWrjj8dCHj5e7UpWY+MxmdKlKsujPwV
mmMdTclwHjQgCTLeX1pFpbbkXTLy5sKJnxnvd7vWJ7Y+c0Z8cTIuVk8JiLBN
sDlnTUbbH3IY2wsC+LIcwe1KhptCW/y2twT8VrSgfXdn1HvLjdfKRAJ6fhik
uj4mg97oXhoQSwBhXJlr0IcMM+b2bGXGfiS8h5+UE8zot5uILYGxn4lFlT5W
TyJjP71RNr+dgP/2vZddl0pGNtuDCvafBIwVpox9SCfjU2V9sW0/AakdLzWE
cshoiOaefTjG2E+2mghPfyJjjPVhg+lvhp6esX551kTGNb/duz7uJmLrjj92
J1v/r4/c/+QkiVhIporPtTOe51yJqJAmIr+i+8X1HjLEnKZ+CB0n4shahoHE
KBknJRfYczWJOOV8ZbVihYzrz+bNDH2IWLw/4a6yytAz9/mi1wFE5Bp5rTSu
kXE8fTGc9JKI3Sr5Sz/XD4I0epUpkcg4r4R2LFA3DyKo3Vp8voCI9m8DY4J7
BuEjbMeaQyEiuOChWbz4IBJe+qov/CLiYuaWEQnJQexcnrNRXiWiOPzs4GHp
QVg41twS5YhG3L2U3otHB7GiOmCfIBUNS07rZofLg7iSGBTdyTifJZjZrvxW
H0TvzlllKYdokBZjGx5rDsKpVnbfS/doaJFbagN0B2Gz92VeUFA0juUrfI81
GsSmQmXf6znRWK+/+qnOYRDFP2jzh5ejQUwKStxDHITndpVoqcgYGJ2TO0mK
GcRnNia1iIQY7B762R4VP4gz1QzPnx2DNJG9rNypgwjetCys+z0GH6K+mTO9
H0TjZElPBz0G9SGL0v3Vg9gSPOsxcj0Wqx7GRa9pgwx/G/z3zI44lAmyXdVa
HISwU+qua8Jx8C1+N8n5m1GvmXUEJ/E4bFxeEfD7N4hdax6ZnXJx2O4Q8chh
wxDSLhXPiF6Nw0GL2rOaIkNI2hgeNfQiDoa68g0bLg9BgN604eSWeBgLqscV
qQ+BaLShMpYvHrcHzRzuaQ6Bk7dKiUs0HnesIvm/6w6hzFv11VbZeFj4rZg9
MR6CqKqse5JOPBw/lv1bdBqCP72lfAMxHs+3qR8aiRuCt2RoDpt8AoJ6zVjC
EofgZF7CunAqAS/iH3eeSRmCyX9l2yYvJiBEOtcjNnMIg50LHqs3ExBxgefH
jYIhtEY0GZT5JiDO6eftlrohNNK3/PnYnYCPHWZhXxaH8DnliW3s80SErNtz
GL+HwHHo+s77EYm4L01u/PpnCDkONzpPxyVC2O/Gxm9Mw2ixyg3iLkiEv/wV
r4qNw2CuY5u+OJSIa2HHbGqEh9ETOBO87lQSljQ3XW5VHkb+12XNaYa/aPWo
mdBSGYarKin0InsystL8/NsuD+Ma1ZySy5sMYyam8nbNYTR+KxPOlE5GTQ79
WNeNYQTr8RkoGSfjzeYBiT7rYWgEFDhOVCfjeH0u89jrYWy/mycfHJ8CoQT3
YuLbYQxvPMTfkpsCJhdle23iMN6Dp0OsLAU1e/oGy+KHET5WybY2kIJr7mzf
CFnDGMnZ3+C5MxX2UoaeV8uHEQmfjC/Rqch6tulvyeww2FTlNMIy0xBi2Jnv
MDeMBp7xsk2laXCQj38gRRvGjT+HGl43pkGRfKQ3cnkYn0qbKCPzafhx1KTY
nmUEik9z1kyOp2NsrMhFkn8EqUdudtPq0rHrwt1fYedHIDZEqehay0Dfk46H
QhdHQBsQ47XmzsSbkvMrSSojmPdfr7ddPBNb5fesfdQYgcvbgAWiaiaY95DZ
u/VGMDvP/dfndSZGmW4ICVmNQIP7Vff3w1nIKFE/lxQxgqx7fWc9nd9BQV4h
9MPYCI7Fn/u9TTgXhyK3axyaHIHmgqFN7L5cSK0sbcyaHoG5Xtg9OQWGny8r
9k2cGwHBzWHNTS0XG9VOu7xaGcHf2fGCAPdckE0vG9luHkXgju1ZWb25eB52
W/rAkVEs6j95fCEpD76LZ6dSj43iqSetWyYvD576Yql7ToyCz8OnQfxLHhxF
xncJnh7F8HvODPnuPBhlWvJuVB0FLUn0CInjPeQrHv4ZNxhFZo0i2cblPUgL
L34k+o2ifWDtXoVePkbWPOJ0n43CzYj5i7V5PiY4LB+yBY4iz8zy4D6XfMxJ
qIo/CBkFNetmWF1kPphusnrJEkZx6lPqUHVXPnZXPD72LXcUY3Lp5hk3PuBu
mE3qQO8o45xPveRi+REzclf9+GXHYF0gbWxVUYgfKSMS0fJj2D/+dv9KRyFS
+F1qdh0dQ/rnseuRE4UwXovZJHlyDFlqphtYNhehrXYm9IjyGGxKT2vE6xeh
+PazGO0bYxhJOeX6H70IAS+/Fr7wHsNynBGxSaEYEtPSU+vaxjCcg4DsuRJw
sDclf+4Ywxtu8bHCDaWgidneduoeQ2Rx90L37lKUGb7vnugfw4uVC3YmuqW4
0XqkumliDEvilQYRn0sR/AlJ0f/GsMlomjs46At+Pb1qeFxqHE6Txes+7CpD
pZhTq63XODZTbOd+rX6DT2qx3l+fcUymbbD9wlGOs1JMpKf+4+DfsZkUJliO
bzKB0zGB42j1/K/Q7Hg5vijGr2+IGIfiXgPvFKdyFGo2HNmXMY5TjVpnU+bK
keEhThhsHUc13shQ5irwsr3DVEtsApuZCr+e2lmFoMcvxFokJkCw3JxxRqYK
zyUvjF7ZN4EXw6QpnTNV8PP4cFf94ASat1ompJtVwV0szOLSMQbv+6DGmVOF
e46aNkpqE2ALOFpXc74a4K1zk3KcwJQsh42lRw2o2mWhzJUTuPywKsBcpA6L
qX6WhVUT2P/k7ZOXR+vw74/qRcsfExgxeh5Vf6UOHEkdfzsaJ6CkXOsX8KQO
kvSpe+k/J4C/V4y2DNfBOHybkiZ1Ar1lfo9Ns+rR3H5/KlpgEiziA7nvNBvx
XnfbueN2k1hj1vM7udCMV1yeE18dJpGuMzVuwtQC+x8TL5SdJ0HycjgfsbkF
h0+VdGu7T+I/1s9bhfe3IFfM1NrabxKrUfkbv91pQTYt923i20nwKbxd0ulp
QUao2hxn+STUenm3rjS2IrHBJ3qIewo7JGrlXcjtCDr851bstimo5f6bNqG1
wznCXugW3xQ2sBmXGrJ24JLBbULHzimMmoiNBxzoAGVG6W2N5BRcGoqHc1w7
cIxjJTxbaQrvjhWsu7ijEw2qtkFu96ewe/2By2zGXViqvuXOXT6FY2bKsVv2
90BYW9mpvHIKElK3mpXP9kB5QMbGvnoKF+U28Ybq9+A1ndm0tX4KP92qOE2e
9UBeNF31VdcUTFw5zJbGemDv9oufe5Yx/q/B9W9qL2YOBBdt5ZvGmuG/dV3H
+0EO/fpri/U0tH247/67QgbZW734le00FFIiLxsakDHo0PuY12EaTItej2ru
kxn+ZImNz2Uad5Js+z77kTHMLyMg4j2NW9I0YZESxj0uPkZJ+vU0Hj5XN+uT
GsR03qOnKl+mIdkWw3ZtyxAWW07we2+ewcrz8rOX/g6Dyapr6fjWGWSXC1iV
co5gI7tD5zzPDK66+61CZATCShlht/ln8CBgwsDq7AguZPBtPiM2g4dbuB0t
AkYQ7v2LmUlxBid2VqhN8o9CTi5n5pHZDEo/Exx5LozBNnx3mWvJDFx+RjYO
VUxgR8PuLSOGsyi+wGp2eW4Wx36104xvz2J0NeR72n8U6O182tVvOotnHd5K
HIIURFlNx3SZz4LcRZ0ZuUCB8OYP0nX2sxha6Tnxk0CBxJULl9/7zyJabp9s
5iUqFFru+T/JnsWnwzt6b2jN4dpv/vurubMwcCkNPWMwB2fRenW3/FkQnQz1
JM3nUGR3aJtj0Sz6vcjhvx7N4ST378R75bN4lXBELDB9Due1n3/T6JxFVpSs
ug/TPLQ7sv4K/ZtF5Q/20qdZ83icarnSxERBz5vCn5uK5pHmemDZm4WCq9rx
mQEV8/i7M4s2wU5BkEzxRbueeaTczZz6wEOB2xux3+NsC1hZSu9W28d4/jip
TOr2AsRqLTrX9lMwF/BQQ8xyAVeI+9rfH6RAho/7KPfDBSSdTm/ik6cga+M+
nx9BC4x7QlrViBIFa8NlzlGFC0gQSP3goUPBu8JT1Nsbaaifufte5joFWpnx
zFa8NCx9kcgd0qdA6ZvsFjNhGtRMUzIvGVFg6bkyzi9Lw2JmcgLvfQqe/vbw
99ejQfVUUkiWJwWv950cJMfR4Mh1J9jIm4IBVzZFh3QaYgf3BHH7MeIJ/nJ5
Io8Gul/iU5fnFNTvdXr2sJyGmMaEx+cjKOiTfLLCM0RDTZyJx1IkBTfGxWuT
J2mg2e92y4hi5LuHo4RnnoZLOxKctsRRsHlq1PjJGg0LRvGWfRkUeISUrHkJ
0PEr8j+F2+8oeKRC3myzi47lJovV0RwK9opfEj4iQccaZIOpHyhI3OJQoHGY
DmaX19ccCynIFHO2iTlCB2vuivDvTxQMcTMFVJ6gg2NXRQ7zV8Z8IVGsIRfo
4NLb6/L0GwXB0312cqp0cIcEnuaoZOgwrPJyugYdfEw6Ldt+UGA/5CPEfp0O
wWNFb6PqKBg8v3+WcoMOYVshE5FGCmSP/iAlGtIhTh5ZkGyjgF8xKMrBjA5J
PpXP7zoo2NZxfGOQOR0HNN/5yHZTwHT99ZTVAzpknm1VK+xhjCdo/dthTYds
mRPvyX4KDNZ+MQXY0qGw/LOvjESBr1VWyld7Oo4dUkq+METBgYs8xGJHOk6Y
J1jVjlBgdmC9v4szHUpxrEeujFMwsctw3fJDOs503//XNknB2R/1CUdd6Ti/
palKb4aCM/kvFhXc6Lh0Se5lP4UClgi5J/MMvvwk8rrJPAV0y3vF5u50aBT9
ERmnUZBjkbo9isFac0YTDxYZ8fiwrPowWFeyMndumdGPrK46sf9/n2Es6er0
h4ImV58uN8Z8N98EnVlZZej9sMh9X8b6hs1zGzyZqNjOe7ACLnSYsOu2srBQ
oVStviOTEb/Z6U9Rz/6j4ljV0MtKRn7mLjtNOdmp2Jz2TfU5I3/LXK/9rzZS
MSfaob9iQ4fNxChtOycV91+XlXNb0WG/S7WEwEXFD07Pxy0WdDjpZfvu4qZC
3vyfi/xdOlxCuNWTeal4RigIOW5Ch0eN8zapHVRQGk6+HjCgw5Optz+bnwq5
Ha2XRfXp8D6GFDkhKh6/n72zpk2Hv22idZEwFT53y/2cGfoIIj9Y+7aHivUj
7LskztLxkq+5WlmCilsJCyH6DL290pQPqZOkwjLq/pKgPB1vy/7u6pCmYp6u
1HpWjA7isvGk/iEq1tkLZMcL0hF36HvegCwVpgQ5dV9uOlLiXpydOErFmuSN
qpp/NKR3z2+0UqSiQn3BRIxOQ9aWa23zJ6n4FqqhvDRBw/snwnf+nKEyfJLS
vV/NNHws8j7w5DwVVy+ZpvNX0lA0N0Zff5GKErmQ46kFNHw1zvHbrEaFYeiI
OPUtDcVNlpcHNKj4IKqv2/SMhgIlqa3ZV6koXpN9RXJmrCeUTFS/TgXLErOR
iyYNaYEmJjtvUNHaE+lJP0FD4oqI5OwtKsbbJn88laAhqjsqP8iEimHu+Ufd
ywt4fVHP9ZYZoz8yePuUvIDQgm04YE5Fy8D5E4erF/AsPKS2zooKkw5fB53Q
BThp+g9udKVihKDTP71jAbZfz6X2uFNxIKh8v/fiPCwPrrPKeEzF6Jzprrq2
eZhweCyr+FKR5/Lnu8rzeRi6H//C/5SKSfeVfHPTeehPLfpMBlBxMF/mA8eJ
eWjW2HEFvKTisJBVXu7oHNSOynTovaJi8RQ3IaJoDhdTZqIkI6g4fYF060fA
HJR870nURFFx3ejNMkliDvtPG5xiS6HipJJe9kAY43zKEWDpSmPo4UKP2JQA
BbuFu2tSMqlYWrdt0DZ6Fnx/tXSU86hQFP0ndTR8BrwPtghs/0CF+4UQCx72
GXD1NJBGC6iwOevakeg8DdaiSw/8Sqjgqd28Z+nsFJj3sh7W/UpF+EiZ7ok4
xr0qomJRrJyK3A96oQpLE6A7KHlXVlNxiF9SQzB0HIMy8m9Z2qi4rEO5+uf+
CPpi5g3bOhh6aNz7VD9oGN2cOWKJ3VRUl6h2aSYxfPT0vtyzA1T8Xbli+ekj
GbU3xp24B6kIYt4jl3eThO8/kk4MDVPh7NtXUi/Xj5JUkWqvSSpUo+T9L4Z3
o2h7f9DVGSrUp48rqPB1It8vSkuUSkWNTfHW8+5tyKZf55ufp2KXtVDexKdm
ZJhuGyijU1FUKW1xLq4Oya2tiSFLVDS84vlw1+474s6EWBivMOoRwk5hfl8K
Yq66zKFVKjjqC9StWXMQKbLp19oaFVbKrHz//371f7i4rQM=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"Plot showing all the F as mentioned in (4.5)\"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {2.0408162843694624`*^-8, 1.2801762471122904`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"PlotFunct", "(", 
         RowBox[{"x", ",", "0"}], ")"}], 
       RowBox[{"PlotFunct", "(", 
         RowBox[{"x", ",", "2"}], ")"}], 
       RowBox[{"PlotFunct", "(", 
         RowBox[{"x", ",", "4"}], ")"}], 
       RowBox[{"PlotFunct", "(", 
         RowBox[{"x", ",", "6"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.66545657730295*^9, 3.6654566549511123`*^9}, 
   3.665457326091583*^9, 3.665465398404215*^9, 3.6710670311014967`*^9, 
   3.671067270796584*^9, 3.671083196608577*^9, 3.671083307493396*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SumFunct", "[", 
   RowBox[{"x_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", "l", "]"}], "*", 
     RowBox[{"PlotFunct", "[", 
      RowBox[{"x", ",", "l"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "0", ",", "L", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66540299296027*^9, 3.665403014798509*^9}, {
   3.6654046624271927`*^9, 3.6654046693077908`*^9}, {3.6654051772726636`*^9, 
   3.665405182694282*^9}, 3.66545413848814*^9, {3.6654567859251013`*^9, 
   3.665456804087154*^9}, {3.6654568523105927`*^9, 3.665456909721001*^9}, {
   3.66545695266681*^9, 3.665456954748167*^9}, {3.6654586457458434`*^9, 
   3.6654586604523907`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SumFunct", "[", 
      RowBox[{"x", ",", "L"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "0", ",", "8", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6654586635931587`*^9, 3.6654587345394125`*^9}, {
  3.6710832601288643`*^9, 3.671083283767599*^9}}],

Cell["\<\
Plot the cumulative addition of the RHS of sum rule. This includes the p \
factor corresponding the primary.\
\>", "Text",
 CellChangeTimes->{{3.6654617240886345`*^9, 3.6654617671964374`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"t", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654030305707006`*^9, 3.6654030306019354`*^9}, {
   3.665456920818471*^9, 3.665456938423167*^9}, {3.665456971051897*^9, 
   3.665457003315899*^9}, {3.665457127924719*^9, 3.665457166790134*^9}, {
   3.665457215149331*^9, 3.6654572364663877`*^9}, {3.6654575843277082`*^9, 
   3.665457588464142*^9}, 3.6654587409484344`*^9, 3.665459679646637*^9, 
   3.671083168615943*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
j5Dq2P//P/E/DgR/rA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
GvRjpjo5npm31ew1Fx3/Fl3p4riOKfZHgoeOxD+8/3/9bTWPfxgvHU4P0ts5
vp/OWL+Kn45Tce5NHB9/WV34QoCOq0fsqzlWufvZfPlCOiZuOJVwPO9cxETA
YjrEhJ9nc9yh/SBgiTAd4fPrkzlOU7Lf6LuMjr36KlEcP1lqXCS4kg6HH2/8
Obaa0LB4JErHfPMddzje0S49xSdGhxrFsOVYOJ8/0EOCjkPm6cYcM+IoRW5p
Or4+erWT42DH7DN/19Lx8/o3Po4vmcRM31KgY7b7zwBnv7U0vIMm1tPBa6n7
g+MxnuM/RpTpWFFxwIPj8gFYXlalY58uw5zjmAq5v2w1OtbzJGzj2PDFqApj
Ox3v1lzt5pzHdS6tpRd20pHKfzedY64z+Va9mnRYS8Q+5PjDer9g+j46qJTt
shwv+LaBq1GPjpWp7lqc+GDpSn16fISOJWoSvBz/bF1mrWlEx843N/M48fZ0
8m9lrCkd3DYXN3MsvKUq4qolHbFR22c48TtSUGikcJ7sx4rv8RzXGX6Z12ZN
R634AiOOgxyjLu1zIK/blEZy8oFI0lUIO9Nh93xMipMvJjVsRr7fJut5/vBX
Tn5p+WH2xtmNju0W/xlx/LJfa3GnOx2MMl8XTj6SWCNK++BLh9zlcx85+Uw2
NNtNL4aOaeORFE5+5F2XqjrnDR2q+ofkOe7LiOv7lEBH18UDoTLEb+qf6ot9
IOv5d7OzNCefCJ2VGPpCR3lT4SpOvlXx4vvmVUnHfdHMIVFioZXTl3fWkPNz
eeEOjn/HUmuH6+g4/HT8oQjxx4Imn/9ayHnu91i1kpN/ZhPN5HrpCE6wk1lG
vOu6wd+CKTrizZSyFhKP2w7c1v5LR1Lfl98LiJNP35v6OUvH1PaV8hzLaH/8
0zy3E30iex8JcOqV2Mrf1KJOVNE3b57HWd+8jr7VazpRssJEjIvYN/3Guddr
O1Gud1J5ltTHg2+X9MgpdOKdsPjuf5x+I3Bv5ybFTnhtqzgxQxx5Ia714LZO
/Ev7dHWC2G6hQ5XTYXJ9F43tnPosxz3PYFKvE5kiO+UpYtp4RIXbEfJ5RjRh
NrEhvbr0kQlxLE/3ELH6xy3fI053wqLB/3w/8dzjf7+UOXWCbakwyekXwmKe
RK8J68QvWW/NH8Sn923eSQvvhJ+AYQ6nP5Hpaq4Lfd2Ja2G8u4qI4yXl+YTf
dKJ/h7xyAfGn0DxrrtROzD/Ozc4iLvcbV2wv7sTKUKfaD5x+w8Xi8/ORTqzz
b5Tj9Fe5q+cdNRzvxFn1dfAn9sh8N7hwshMTZ2eNnhILTEyt8vzXiUKv9U7e
xCucglyd5nch0GPpQ3diJZvSvUcku1DXWDfHidjcRK1i/uEu7FycL2dAbLFa
L/KzXheuFonW6hKf6TzndOFIF1wSXtzWIbayfyH63aQLld6juQeIbTynzt21
6MJZowyxncRX03L/jV/rQmer3TIF4sfL9VR6IrtgEXWme4b0u09az/E8i+7C
6Zm7glPEPq/dGvbEdeGZ/0blP8R+iskuEW+74Lpoqc0v4qADS3+cSO9CUr1n
XC9x5LXmM9VlXfBgrdtXQZxWf+7Zt/Eu/Aktawnm/P2cNZsw2YVird6YIGJb
RfrPnOkuqPK62AYQS3ieEMjj6oZWhOCAN/EDNYN7BQLdyGoXT3IjPvZM/VKJ
RDf8nmobWRL/OSJ4uEarG+oW1JgCcY1LyYChdjcULrbJriVOivd8UHu4Gzkn
fPWliS24uPLrjnTjYYJ8gChxyYdR9cYT3ZA67to8nzh4UYdcm0M3bvrPsRwk
88v28mTuvufdYGV2boohFou6nRkW0o1f4bd1Ioi5bmpdMQrrRvCeoZOhxCVr
2jpzX3dj/bG1Nn7Ex27Py3uZ1I1PT0Y3uBBfWW9+52h+N7680tUxJE7yEpzJ
YnXDykj69QRnPjRv+Og03I2Lzum5v4md1F5fXD/SjZCrVY1MYg361tYXE924
dceKSSf+se1s5hWeHkRIFb4rIe7r+3xTQbQH18/SHzwnljpwfuzZfmKjjxob
iNvu1t8QO9iDNVuE3soSB2ftn4rR7gHbJUFYglhIbc1smn4PHD6dLF5CzL2G
zt9k2gORmx7fx8i828t1QkzMvgdrT0QIfCNOzNLbFxPUAwHmnrMHic9PZH3f
GNyDY9zRUSBeo7bxUFoouT6V0rSNOOytgF5RRA/UF0avVSD2CS0+NpDQg2wY
7uEndry5x3bjtx70S8Y4FZH5fYvaFv9PfT04kcgy0yBWebFCX2WwB5l/Pc5v
Il4/9UcgaagHBcYXLRU4zwdyMz2ih3tQLTWwfQWxgO7umwFTPchbMfLfrz9k
Xrc8fNpxUS9UBnx1YokfPzujuHFrL4LXGLzgIfYY38t4o94Lq/exApznGXeO
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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd23c8Ve8fAHCjIdKggWQlSdZXqFQ+IjMkGhpWVMjKymjYqSSzMrJHVhkZ
ITske8/rXute1733FKIIv+f8/vJ6v3TPPed5Ps9nHK+Ebzsa3mFhYmKSZWVi
wn/q3KF01cxeUc5tNXyR0FmlTP549fY4rzycS/g85PE1FvZx9IUW8Z6HHssL
TiUlWSB9ak/6e97L0CllPBAgVAZM3LORG4LXwZl+JePtla/QRfvqZyFmCk75
dpPlYrWg1Hk8P4LXCrzvc5o3tn+DQ2cTMuvj70I2ZB99vtEE27PZEhcFbSBp
/fImzQMtMOY/9uqqmAPM17H0ZPC2Q01cvcIrXlcoYblJUszqBvluj4LDN92g
ijo58+5JD2SxSUtVxbtDopViW7peL0S4vRPFBD0hiZ/ezjTcB5YX7bkviT0B
+YZ4v+NFgzAYKPJ69t5TEPz7iCvOZAjECPc31172gd2HzaUyWIchdo+w7/U3
vhAmdSXaWG0E/H1ferzgDQDR6S2CXtFjUMV/t+RqeQCY8VlJmAsT4E+pyqLI
zUD4vCprtSubAHaM344V8UGgusNXEQrH4fJN83s0wefQ1XN0p14nEUKXlNLL
ap6DFnn5Yic7CZrD904GWLwAa5Hi6zznSXC2ucX0YOpLGPy71MhfRAIxBYWr
+mKhkGw2QKP6T4B5584ovqZQYI49GvmyeALi7lO7Zu69Br+Aa3eOz0wAW1dH
RvXlMCh9QSorOj8Jj7YGihi/CQengHNqR5YnwcoV433OGwXBSg+cMxWn4Thr
hFehUxRceGGkGWA6DSwR8iMjTVFQNDYtkRQ4DYmfPOOl3aPBt2Ih4UPXNAxT
WQV7u9/AsMjPUm+LGfjgmfF07ehbkN7H39jlPwMP2bSJYr5vQfXMefLz9BnY
Ixaa7CnzDqQDd+jJkGfgogWPqGBIDCjnn8zPtySDwM/yAK3JGBBb4Tnv5UsG
2hOT6QdKsfBmmwCtJoEML+JTMhooscDuzCLQNUCGhgHJo7bq8XD7kDlN+zwF
lPTPSRevJ0CS9S/XRrZZYBubDCVcSYRe5XO2bwRnYeB+ELY1LxF2pJelbFOc
hfKGO8Z5Ukng8UrOgGQxC8YT2bxMo0lgv3Ja5FnxLFQf/fc9amsydN79vjv1
+yyIPdDzOno8GUQ+JKw5js3C7w1s2PBFMlyXmx4V2USFiIMK8eknU2CTcbv8
Xn0qrFgF6SpZpUBvpl0zyYwKFrkD/9pfp4Do5IMo2wdUkD3tZfJnJgUOjPj0
F0dSoc24WuBCdCoQTAodL/dRgS1KO/nnrzT4fLTXL1NvDlZPklaT+dKhREFg
V/eNOWCMeVw1UkuHW4vphp335qDnyAeOkqh0cG9L6tDxnYOEii3u3icyoO4o
qUWncA7kJ+t1tjzOBIJuxPomThocCb6ZXpqeCUMHK8582U8DPqmFDev2TNie
WLLvgggNNtxFin8IfoDBK0ZF207QoIXdVzC87gMQdy7FMpnRwFxOefEAWza4
b/XerZxFA6OBPv022WzgSfpVvbmQBhqP7LOeXM8GOUf6jcJyGhxrjDclZWeD
5tDMVMUPGixdX23O0MsB51vi7bE0GoT4lr3/LzIXbm3ojvcfpcNTMYM/ExW5
cKHf7APPf3Rw/kE2jJrKBS4fbuL5k3S4tnc/27JCHlgbQ4uJBh1EstycKwfz
wEOOGhJjQYfSTjlNTYFPwLruwucWRYfQWZqWpMYnUOvnLDGPpcNdlkyd3Q6f
QME5MuV0Eh32yR/QH/n6CU5rJerU5NCh4odvdql0PuzPSstjr6PDARnbggvt
+ZB7YJbYMUeHoNOacsoT+dCWnFPY/JMO85qiRbJL+TBDb58r+k2HFnPC570C
BaAtveXc7Q06eEUYlo3bF4CGfDPnIS4GDP9WqnbhLIR4Y7mFawoM0GDhUbkr
XAgnXN+feXGKAYU7ftcYKxRCHyHgVsFZBrw48qnurEkhuHe3fiCoM0Dp+qHG
rXmFsJ73cf+XKwyIqeRoi9MtgtvUq0vBLgww9h8drn/5GR5sw9xufWDALqKY
5L3kz1AU/FgsPYcB3888eMxe+hmufnHsmfqIrre0WejSxGdw/308UruYAQds
ZO4QThZD4TaerJxaBhD0/bA/08XwXL6HShlkwJucVpX41WLo8eluyxthwEW2
/RGwuwRMJVjV7xMYUFObIx90pgTEd2/W6ZxkQLJ8nyd3ZAmIhY9wqzMYYMUn
vklapRQqHzgS5pgx4H/ofKXrSimIbjQuqW3CoK+nMsP1finEXj9Hjd6Cgcar
S9oVb0ohr1Qw5wgHBkeYvEO16KUgptzst2kPBtTpNh7L2DKQemKqXCiKgWOB
i9S7xS/g4z5VoaWKAeMMqec7WzmEsPjfJahhYNes77XKXw52Jt7XnNQxsB4/
2mSqXg47jgcef66FgTkn0fzwm3IINN48/lofAwMb3ajCExUQ6/+M+e91DNoX
vyhNXagAPi6P+9duYqDrc4S017wCBOZf5hTewkDrLYu0Z3AFFFpEtpuZYaDy
rawJhirAQ03lSbQVBrLCh1dbvSphU9OHY24OGHzMjUheD62E8vXuN2mOGEie
ZNKSTa2EU+Pki11OGIhfHImK/FEJkV70RhEXDIQeh0vf4P8Ke7RZ/TIeYrB7
aM2C/PUrCA/rfFX0wWA+rL+ZmbkaGjZbX0t9jUGlXQFM7asGTfeztnFhGDzT
CilplKyGic25x8LD0fozqaa9NK4GMZUP3W6RGKg75j3dm18Nn769uCb6FoNW
MdW4KJka8F74cfJAAgYFUZ/6A5VqIEMkcu4n8huWg1wP1WuAKJ2a0ZCIgQVh
Ofj6zRo4NjqpfTcZg6XoPHeBZzXg/C6nIyIN3f9mXsMPhBr4ILyPOTobg80u
Qa9iZmtgVrvYWy8H7SdxofnFYg3Qyh5pb8rFoLiyHezZayEr0wuzy8NAxzVA
Sk6xFvoEbgxJ5GPgOomxVb6qhRDh3KRbxRg01zZWd5ypA7nz7MUFVRhktP6b
eqVZB3liFV6nqjEIHJBj1zWsg5KBW1w1yKr0hMvN9+qgqL+97nsNWi+eh7M1
EXWQ2Gzg3lGHQb7jEe5CSh0UD+s9zWjEINTL5KTTQh3sEurO4m/CwD4w0kR6
vQ4OsXp3hiNLxG1kZnPXg4TK6AHPZgzSGgfOpCrXQ23fHO10CwbvDgbfjYqq
hyA6h1tUGwbu4lUvDRPrgWNCzX0V+crxxfxd2fUg3Ojy1qIdAy5t89WQ6np4
Uzl37lgHBiGuJ8MCqfUAq/cdP3di4POD8sVdpQEavhSNJfZgYOOpzXmd1gAf
81RiyIMYZB/YbWK61AAv25nmZYcwoH0dzLVk+gY0kbkyT2QHFmtdhz3foP/l
/jfbhtF6vgx66X/mG7Q7HfokMoLB0/f12z6GfAN5lnaT02MY1MDL60VvvkFQ
JsvhR8gsE4ZZZUnfoA8LtatEDhCb0Kr//A2uFhB9ThMwePGJKXhw9BuQ6Goj
x8cxiK49u4VVqhF02wwUd5Aw6LfcfJXtRCOYvtn7SBOZZ0tbOue5Rvhs8uuS
D3Kszi11niuNcOJteMFP5KQerwCpx41Q+/rR9dYJDHKmS1mM2xphh38tp9MU
BrXb5DZy7ZugssfjswMZnZ/LsqUvPJqgnsRyOxE5LEHa0dq/CdKnubM7kM2P
Hxs/FNME6iy6nDIUDNZviVbHNjRB1ar4yVlkpfx9T4MPNMOPzrShC1QMUlb2
nLgr1gyHaRFR7sjb1Lkxtf+aYSb48HIS8uDQTrMNjWaYf362ZBH5Ies2cHdu
hoKWFdl3cxh8vrq6bvm9GfaQhL500ND5S/5bcq63GRzarNR/I/vPLTsIjjdD
iPH7AD46BoY+i4ThxWYwXH4mYIX8M4tedUnoOzwckO1eQJZaG38CD7+D6Lhr
/WYMxXtqwzrf4RYQ0ukdXv6JgVPgZRLItED0yxhm7l8YnL43VW91qgXMBPf/
lkLulNj0/KNeC+yr7VazRP5boMat6t4CPi/PvfyBrFtTd8SmqQVa8tb2Rc5j
sDBaY1Bq8wPqjB4kMy1iUFVlcHzU5QfM22bv3YccnETcy/zkB/RuJVgcQ+a3
YhrRifgBByfs/a8ga8zBHUL5D0g5HL+QiRz7t8pz8/ZWSFd+/V39N8qX+76m
GH1shYlQgZP3ljDYFL3XUb2sFV4R8yceIjdzO5w+UdcKECzkGIx8cbdgL19/
KzxP8pbOQjbd7rt5Yq0VzONU9WaRvVnUrZ302iD6V4mS1TIGJYxWqVe0NsC0
e89o/MHAy/7wypOlNvCZd39uhKxMe9zoxNQOt4t1q8yRv81Km13e0w53udRI
Xsi9U2FhB860A/+4yO6PyPPDlxeyXrbDl4b+s7v+ov1oGi1rlOiAtOT2yQbk
fYz79DCFDih8Y2Tficy0d1X4pkoH0LdlE0eQe2/zvsSudMBQ1qPAeeRH61dM
eHw7AIPHrQIrKP8qdDDbDnSA4TjZ1QW55JapovxEBxD0Qj89Rk7yp9uu0zrg
fVxK/zPkcspmW23mTkg/nU+NQw5VFO0Z29cJa7WvpOuRFbrN07eodsJzuzr1
HasoP9z5UH1fsxNEIoeM9yML/MWGOnU7IWHiww0hZDahpzvirqHrWfyRkEMe
tX//UMa+ExgaW1iuIAdsG9Y2ftcJVgzjjLfIvSpGjCxGJ7jn2Sbs/ofBSuLk
+8KFTjT/hF/gQRbecNGr+NMJuku/aQLIDl+jcltZusB/rGW7JPJWpX5bbF8X
3OBdqlNHVjp+nSwPXfAkSPPAQ+Skw2bE6tddoP+ogbUbuTEAe90c1QXCbHJm
A8j0yafQFdMFIZRzBaP451OSEiZSu6BCIeQUGblHYOLW5rIueMr6fnQVeQvP
nSEdYhc06gx7HVpD/QH7/e4+2W6o/87lb4ec8XVfiY5iN8QF+0g9QB53qoup
Pt0NFMsjHW7IhgO8Flka3VByz+rPE+STac3Yo1vdkP3HcSoMeZOyGKdocDeI
72H9rwg5/gFJ03m8G0jsl7bOI/eLvjpGnuoGwdH7pb+Rdw6e3HmL2g2J51LN
/yL7KYf1q//uhh2p8QlM66hf4YA7vBw9MLJyuGUHsnx6vF+NYg9syCVTjyL/
GLz2dUdoD0R0FqTdRPYbJu+1jewBlegAP1Pkk6MPHb696wETB4GbFshp428F
H6X2QIJZ+7+7yI9mBnxny3pA/ZAkqzOy1OI1jYbJHqg0Zhd9hvx6p3GH56le
KL+zfzEPWWM35Uifci8MhJidyUf+x+XhI3u+F767BvoU4ve7791/ZP1eEBV7
/q8EWeXgYORlq144cUatoRr5l4SxsczrXtg9Q3vXiWykYUyamuqFkt8pzzDk
cu7/OiZne8FNRVzpF7IIadvXCUYv3NbsmZ1HnveueEf80wvi/B9VlpDDCgQM
Rrf3QffPtdZ/yK3801U98n3w4/Ahq20bGJxfeBBfF9AHr2l1OULIuTU6L2qf
98G+HQQOEWTu0EMeNaF94Lwp1+YQ8oR4n1HVuz6I53cSEEP2MT3JUZ7bB5Ny
m+2PIX/9vu5Z0NsHfvkfkxWQFZNeXksS7QdDdw4/LeT82qeeHBL9cJwlv1Qb
+dikS5y7TD8whkXndJCFxG6N6yr1g4v36wt6yBy5kvf+XuyH8c0D85eQiaVt
7obe/aDk8pJwA/llx843m7r7Qe/JX7X7yFt+sZY5DvTDQZlJJTv8/rj+DA2P
9kPb/E5Ze2T3K8SDBeR+0LoKex2RzUfy003W+mG6SveHM36/5EvFJeIDsDOj
meKJf996ZK/10wH4+vPqWhDydlrny4cBA9CUo1r8DPnkEKda0PMBqH/+934w
cljRs4LUyAGoa+/se46sYu0dSsgcgJEIk7gQ5OSu21qXOwfgiVE6Fo58O+2/
ShAehJTvs9/jkEPDHVz0xQZhcO+saTxy+ZMcCZNjgyB3hDGPm+v64RgvhUFg
FdnFk4Bcz8nrXqw9COsPiVeTkEUfMskecx6E+2m7P6QhT2t3pO6rH4SZmyKp
ufjvXx55Hd48CBP7Rw/nIVu1PvXa3j4IQ/czM3FP6MteYhkahAY/zw8fkQlG
4et0xiBY6Z1KzEceNDG6/o1vCMIvhNz+jNzyYGCHq/MQ3C3hvFCBvK1IZoXx
cAi68lcKcWstPpu2eTwE54jifJXITe4nK82Ch2ALv/4M7gbvGJsLCUOwcpTo
VoXHT+DNBpGWIYivOe1Si8dLzLhnl/AwZC4KYo3Idkf5h+WODINgwm6VJmTx
L8ZKUZLDEOntGIY7cbBr5eqJYYgvc5Fpxtdzf4P3qO4wkEW+3P2ObB/94TH5
4TCocWyr+IEsEf7Ad61tGMCdztSJPCP0kWTaMwyq+8XP4U7Jp56rGRyG7/1U
H9x8nZYs/pPDoFTPsYF7286r/mx/h0HvUefvLmRKiFIgt+gIuG5nb+9BTg9m
fX7UawREp3ilB/D9mwp+Iv10BKgd10xw+8AO1+MBI3DKSSUE940lHrOzoSOw
WMs9i3unlbTCpZQRiBbsTBhE9oTrJI+WEeB4zbY6hN9vLKH/cccIRLlJHB5G
vrxk2erXOwK2Huv6uKXzHEpDCCPA/LoqGfckX8CrpPkR2LGUrTaCrLf08VQz
3yj4lYZ7juLxdklepk1wFAyrtibiFs/7ItotOgrnXRUbcLNYNewclR4FtYfV
nGPIpV1D05jqKCw+ePEet3Depoj990fhU9TVfALyb8sb1LsVo0A/oJBOxM8f
9yr3YM0oDPpNN+Beqos7q904Cm//6E/938JjYce6RmE+Sl+EhPxn3OzEz5lR
SNlgj8O9cvNOgCfXGDBrfn86gezFseUjdf8Y/HdTMQ73annGwM2DY+AjdbsE
9z9eioSy+Bi031yew702YNvFojwGjSNClyeRmS47CYTYjMHfmmKeKXw/WHdr
rTmMgdEteVnczEUFDxxcx2DnO3dN3CxcCw0GT8eggVPTDTdrp9v9vdFjsBIv
2I57i653WULNGFw4SXWdRg5aPTCxs3EMJkbrgnFvyank8P0xBtkalvG4t7Kv
m1r2j8HTG//qcLM1+2wWp43Bmflozhk8/50PMizYTwApyXfvcJ+pdtzdyE8A
isd8Jm4Hpeudw8IEcK8TKMXdLSupv0mSgPosei/u2IPd2tdUCJD513YHGd/P
5YPn1qwJcGyGyRP3DeetTFwOBOBcCwnEHUL/WSXmQgA1C3o4bmyy/ozBYwIw
oo9l4y7ptDmZGk6ADNnkQdzns4tltMsJsFz2UoqC7+/hRIZJNQF+id8/gftD
UnCecwMBZGqFzuHmeHvzWHw7AahdOy7j7vZnPoJNEMBB+u9D3Js2qNOsFAKc
Sgjxwa3o1ZvGQyeA5d+lYNwxTpkiqssEuPXDIAa3uYmeQDTHOOSdOFCGO2JQ
cSxr1zi4m1lX424wEoqv2jsOEXyvGnEf0VngpQiOg1a0SS9uhmLM3tPy49D8
jp+BW6jQr/fiqXEgXBVfxG0oZRdppTwOIfLbV3AXH4LdoVrjsBpya/Ms8qNd
09tJt8ZBwkCYD7fEcKHKqMU43J0cEMA9lOrjOnB3HKhh1odwK57gH21zGgeV
ezySuKeYqDu/u43D4cwTsrgjW0rVGrzGYZ/Uf/K4f5oY5ZQHjMNb+aLTuBOO
CI8XPx+H0e+nAbfeLwZXQeg47GpNUMWdHfDCK/PdOPw7saiF21jf+GPK+3H4
UzhzAfcWHrGJ9ynj0F9RpI/bMqdWOyp3HKpejxnh5nJ7/fh1wTjY2ShdxV2j
bFLwomQchqkPjHE7sB2bDqwYByfegBu4+bv/8PjWjMOzVadbuD3vRPk8bBmH
49RhM9z9f2Qo9r3jsD746TbuMMF7pTco46B6JO4ubh2NhCDNf2h9g49b4/Yr
oUrwsRHB95znPdwE7aCIXVxEaJW0s8Idwn25kWM/EZLctvz/eqfHhFe28BPh
fQ/H/7+PmoFJsQgTwULi0U3c75y+WqwdJsLeq9eu4Xa8krbqJU6E64ztV3Br
KL2M/iNBBK1j7w1x/2a9/n1BhghqXnp6uFspYPlAjgjw1F4Hd1qb2BpDngh3
t1tr4jZ8uyhLPUWE9TSaCu6jj0Za7p0hgk+i+1ncTBZ1VtPKRHjAMnIK9yeJ
sHdENSIUjsjJ4d5edYxpQI8IxLqDwrjpukKfXxgQ4aspNz/u9pE91spG6PrX
Rvfhfv13rSPdmAgvDlE4/r9fCp2JrpZEOKA6vYDH50J9g5H4XSIszrvQcfca
ftk6ak2EW659M7ijnVIc1RyIsPBu1xBunlxX4PIkAivfnQrcf5VsFr55E+Ef
a3AR7uHvJpmeT9Dndz3OwR1H1thJ8ifCG6mxWNwCh3jHP4US4VSh8//Pr2js
1yd6aUTwbxk+gnvz0UI55kwiVKlzH8Q9U5ox8zmLCBg/PxfuzL7X+vyfiDB/
I2EVzycSu28LzH0hgp6hRStu2eAtVcEdRDBQrLXCvXv/6oMz3Wg9PjKu4p5P
xw7/7CXCaSmqFu6i+sFX14aJcDVMRxK34ka2idg02n/x3J94PjzrfnGtfgXt
v2mLI+4lW4q39hoR3hHIZrjzzXxX2jeIUKI3cBG3iHbR8tAmEozrH5PBzca/
fx7bQQIp/tQ5PF/31hJmDhwiQbJK9k3coSUP7yQfJkFNXZcWbs2cXVNi4iRg
N2pWwF0epUr6T4oEib3CO3En3csY0TxBgjflPtV4/bDjdOh0uUCC/YbV+3CL
sWy9+FePBE82qphwjy8ltj0xIMHday+oeP0yJHa1PL9Cgno+/6+4TxYpfEs0
I8EX0yVz3Juur3354UKC8w/z3uP1Lz4tJPVQPAmGLofQ8Hprpnb8zHgCCRzT
uNpwi0wM9cYmk6DryaU83B8Ej2zhyiSBgMayHe7PsbXWTIUk4OcYpIzj5yNs
SWqsiQS+bRHdeL1/LfO+8V0LCcrOP/iI27BdzexyGwmM0phf4B7kCA/70U2C
l4aKKringo4tfBkjAd+niQ94/7D2yLzszQIJiuQItni/UXNg6yXDJRKIOaee
wx1QnjfL+ZcEg/+4eHCz/1nhC1wnwW8yox7vZ/a5RD922TYBG/4v9+OWtmlR
NRCcgE8p43l4v2R6Rb5t24UJWGH+HdGP148DekllehOwxjFrituCdMflnsEE
CEZ5SOC2sn/L++3KBBx6f6+mD9kmcOWOj/kERNa5kHuRXYtr1pfcJiAhs0AY
7/de7NWTnUqaQPmTcq4Dz1cjd1gjUyfg3uC/jXbkV8lP+s9lTECP7JuvuMOk
8h8l5kxA+v3LJ3BHq3N/v1EyAVaGFNE2PD7chiy6fkxA/FohuQWvP313IquW
JiCtN30z3g+HMR/6D/5OgIqRRtk3ZFspYnv16gTkdNy2xS0QeIO9lmkSEjy2
tzUgB8lf9K1nn4QBBY6QeuSrkScdmwUmwaNrCatBXjbguNCtMQmK6Se18f69
+1EzxVB7Egqd0mbLkXM/BAb1XJiExWWH57jNmZjqeg0mYVyYv+kLcvOnxZMD
NyYhceCLUhmef3cQxEYdJkHAcg9LMfKp1nyWmTeT0Lpsvw2fL/hTvMvjYyah
iin6OT5/MHloOBvFT0KWcw8b7uZDo6Sa5EmQ4grbhM8vV7231sblTkLf/uGf
WcjOEqZPL9VNgmSMQlw6fn/BHP8q6ZPwVOWpBD4vhZn2F7n8nAQbV9kX+Hzl
Ip98X2JhEqCxihKLrERUHHn7ZxKevbBNiUH+fuJ2uTPrFJyRaNj6Fs9XM2Ue
4rxTcFci8R0+rwmp3/0deX4KVji56wORR336HvJrTsG+mGdbcb+rPL+Spj0F
qv5VOgF4vpI/tFGsPwXOa7Ztfsgsh4hsg8ZTcM7Nr/4p8jTTDX5++yl4crbK
CZ83syv11NKip2D3AclqfJ69+6fym+S7Kah3CR6wRT4kL6lVHDsF21tuMmzw
85zDrteYOAVfibf2W+PxFdt0lZI1BbvqH1+1QnbyOGcrWTUF1Tt7gm4hK8gr
hH+emQKCTHDcBTy/vt2nLzs7BdJ+v/zw+VtiZZk9d24KetuCrPH5XKimPCD1
5xQ8mxGX1sTPm66KR8TKFLCzLqSoIhMtL5g57ZgGUvoPmVN4/EdaSEkqTgNv
TW2VKH5el1SpmSenIdhe6Q7+/uDpddHMQ6enIe290zb8/YKrIFnogMo0HN+1
5YIgno9y7Paw60xDTui9Ql5k+fqHq2STaSBb++zYgee/+VffUwOn4V+RFWFx
HeWPjUdJV4KnQfanxK4FZMp2u4dbX05D8rN0Zfz9yE8xncP3w6YhUTQxnI7M
dHOLr1zcNFxZXtwxg78/qX9ysjZ/GkxJzy36ke9GOmYSRtD1fHMVPyPbJpk+
CSNMg92o0HwBskOe3hVV0jSk0+9nfUJ+2HSMNWNmGoZ673LkIAevkk3tf02D
Qveu+GTkLEvzff+2zEDXN/bZV8i045cCeeVmIOP96OJt5O8ZU2Lv5Wdg1+GB
C+bIGbwezUInZuDqnrMJJsjmGwkc4mdmQLBIQsEYuaeFFq6oMQNrLhkSevj7
IIvgBKMbMzDb9kVSEfn56+rSV34zUH+gV38T/jwsRtd3B87Ag6nrLMzIqm4z
K1HPZmD/gHj+2hqaj25wKseHzID5Xc+VJWQnsZsN2W9moE21XmsW2fjrUmdT
9gx4fcuua0UWm5OiMveg668KjYUib2frSK/om4Gmmb12L5AXRJ0s3AZnYII5
fT4Quca0cJAyNgOrRwxmHiHf6FZs6qDMwM2HW+/aIod+QaGwPgOh3gulasiu
/USza8xkKGuJLFNGvrnge2D3JjK4HCj7dApZXKohImAbGWzUVX1lkOuStHzv
7yFDxbLOJz7k388umZ6SIIPmtIAY9g+dz7R53gVJMjjOLwTOItfVRvblypAh
5tjukUnk0NU+XSEFMggHd1gNIos73ji9VYUM44IsizXIt65a8vRdIcOrU2P0
18gNom7dTr5k4GzPyhZF9s8sN/7nT4bvmtFM+PtbVQmm8WdBZKAKv9LZj1wr
83Iu4SUZzJe0yrchVyklb2qLJoPka48tjFU0Pxu0KR7NJoNOjPnZz/j750eH
40jdZGi8tO6hiGyzYSts30eGFcllYWlkcb/8zD8DZLi+MVxxGDnj2enPO8fI
ELf+q3YPcmrEpbazZDK06ijumV9B+eHD442YVTIEtQmXZiG/7u2zNBSlwBs2
E77tyCFPXol2iVFAMWJtiBn5hbj69MWjFHC/ovls+S8GgY8+39WTpsCDOL3s
CWRv0UgbrZMUYJ24tqMM+Z6rgaOyLgU0OffJmCHDnh9eEq4UMOEa+/7+D5pX
q/xOZ7lToEN+93IYspK10r8jnhSgXubnDEBWqMx6fPgJBbS82RZskI9ZBfsI
BVOgPv9msjzy/s/qQfviKRDBTDL7tozmUaOacJYGChBqw3f1LKH+LTPQrrSR
AsOMfYm1yOurOpp23ylA1+fiyEfentb3r6+dAtm+ul4hyOKL1HtZQxSowbry
1JDNo/YqG2AUeJwkciTnN3oeyjDP5nkKgNce27fIDmeSFr4sUsDerjjQH/nR
lETWoRUKhCtWqN9Efievsmd50yyUu+WOsyF39tpS3/PNgijNWubWIgYD4rLf
DA/OgsE1qT51ZMKj34lbhWZR3yKqL4NME/W58uDwLIDv8TJmZDa36JrzsrNw
8r3G7bQFDM7trXkzpz4LFpKnS4nzGBRe2at26sEszOmrPJL7hebdnU8p1S6z
IJjVnrsf2fk75ZWG+yyododm//uJwX9nKweNvGdhsx3n9kbkfFFLB4dA9Pnp
gptXkT8u5MekxszCpQmxTjsMnYc8PpCIn4Wh3Xop+sgO9wKm8hNm4T2FpCSL
LDVyTaYqdRZuaQV9nWegelu33jCYNwvnKr6vuiJnh+v+5Kybhb6qO7/s6Sie
LpRERzXMwq6JoV8XkG03C50+0DQLybzMBUeRj3ouBIq3zoLYlcs2UzTUb5rH
HlDrnwVOJii6ipwhQ9HwoM7C+lDXf9JzKL7b/N9PcFFh5y3sWxoFxe9/q7cS
91LhZ00ayQ3ZPdqZ/xYPFfhuaMRqIGuZWMT1HaRCzZsuwgwZzfs05ZhmcSps
nD4aL4J8cvtK1EdlKswM5fMGTWMg7PTg8v1zVHh+n/OtATJ7L4Vb/DwVAu9b
pvAhj8UNRCRrU8ER6KZ5U2hePVYcFnWZCgYZQYZtkxi06TiFeNlS4X5W/fEl
EgYlH8kXTthTYXtW4e4v+N9rucw4Fh2pABFydt7IzsN6L+zdqOBzXyJinYjm
MdtjweY+VLC9fspnfRyD289n/DXeUOGTTVXr5Bjqz5pueXPVUaFaOqdcaQj1
d0YabnUNVFjj9TxAG0TzLEHG0bmJCuJJwj3xyG8WWSy7W6mwKj2p8m8A1VPh
LJ2IASpk/XKhFvaj7/f6zctFp4K2/Cr7eg8GsZvHueswKkivP+NNQ64Na+Z0
nqdC8HC8lTbyrsw45u5lKkzxyWeFd6N5tufcbDjLHDD7z5XxdKF4lgwt280z
B25Cd7Q32jDYU/awsJZvDoSzk+Ed8mk1i9wHB+fg6EyIkSzyi+vySV0ic6B+
cUurSSuKh6DhZ+FSc3DCx6k+rwXVr3Gxa7vV5mDsS8OgYBPqN8Krf+9ymAN7
NULN6WpkP73yCKc5qDgjwf21CgOSy8iTPS5zcDB29eZZ5Ikry1t5PObgtWJJ
k9JXDCZ5ZfgE/eaAmv+rXrwC9XfJCcpSb+bg/R0zgY4S5AhJ1k/v5oDLVSpf
Gbd/eZNs3BwYKPzYmVeMAflOv4F80hzkvTWXCvqM+o2jOyxPZ8/Bt4H2iKOF
GMwVPH6mXTUHTCLX3OTy0HqkcOj+qJkD3Vq34Fe5yJExu/Tq58Dm4KdT5Bxk
t+IYg+Y5YGx2snmTjeLzFD3nWvccEHKUkyczUf9Se6vzzswc+Apm2iumoHzX
dZrXbwcN/omesUyNRv2M/cDyqd00iMfifpZFoXhlc+n/xU2DwYU2vdZIFB/K
2ZEWvDRYkgszp4VjoJ7Ns+OcKA0Cjx1S3R2KQZTfbxYmJRr0jcS8pgRikHAw
nFR6hgbcV1NUBgPQeSyTrHEEGtB8f9365o9BJcPy8fh5Grhwvq9464v6rxvd
y1UXadBofUCH/zEGx49/oj2+Q4NtT9mPJbig/N+u80PBmgbs/ttFLJxRfNrM
ZNFtabAqIc4h/AD1A4kH75k40WA572DEWwd0njhCSGe8aeBacdvP1AbNH5PW
/athNMhwrObUNUX9SZRIjWclDS5hs1Xm6mi+jL5tw1pNg7zne3xa1VA9eZPC
9aqWBmoBjEfyqhisvBW5k9RIg7tD2sx/lVE9ixNhb+pEz2+5hdvoJIr3FJHL
e6Zp8FQgbPKcBMrvqbfX3pNpIHXpnIWdOOpH01IyjlBpcPOrgm2EGAaiGSJ/
lTAa0N+s0TpFUPxniSRY/KWBCfHYtX0HUH+QL0L5yEmHyBA/1VJ2lL8Kboef
3EWHnaH8d6PYUH9WmKJUx0WHLxtdynZbMND/LPKqbz8dlmKZejlYMBgqFZH7
J0yHgA80EttfBjCqRB5pK9LhtY3Jc9o0A/a3ieyaMqVDhbVTAKGcASd/9y6Y
W9DBeHlIl6mMAcYHnw2MWdIhyNu1g6+YAbH2cwkD1nTY1+Pz8dQnBgjs+Cz1
w5kO/u1sLvypDBC7qH6hMIgOZ+Jv7L39nAGaD5elZZ7TQZHusbwpiAHWiVlc
uS/poFKyVyDRjwHZGOdwehgdFp2XO8q8GSAd1m8dE0sH7u0Xe5/YM0Ch616Q
z0c6sEwVhp65yICrf3lt1/LpoPFM64PGBQa4C7fqeRXRwY79qqKGJgPKHsju
dS2jQ2WlgNRhYMAZrr+p9+ro8Ofu5kFTaQacN3pRq99Ph26Z+v0p7Ay4430m
/ccgHSbpIYcWNjMgKJURrDVChzcrJaYnmBnQvGBooEpE6+uRU/VumQ66UQfG
Fajo3/ux+5dP0sGoL/cf/zodJoy2zxp+ocOTTLuVDiYG0P9bCddC9/XBU/KP
HysD9EvVq4/l0eHfwdwFChsDrmzWiPuSRIeMuznUz9wM6HbjbZpD67aynDWo
e5QB+fGRpjYX6SDaYtO/cYwBmXEeD/Zq0eFi/NHeQvQciuLXdbJV6JCmktXB
I8+APQHcjJD/6KD//EPjlDL+HO83SaK4SOHL/PzoMgNqNqXuetROg1ba3UKZ
awyQN9v549k3dE6qxPInrjPAQ66NxR2dA13LjBwtMwYY/TfP/ScLnfOc9JQ9
tgwwU7t4O9CfBjpn08JynzLg2O+fY5dk0bnaaRVqhvbxdEfCTe3DNEgkHQrh
CmQAx69DBD4+GiwGpj7zeIHiZlXxgTYrDRLaU56cj0brs0s3sq5nDubNku1G
sxnQKHhO/JndHPx+u1nBIo8B27kHpb+YzcGfDpu1aRRnN+3+sNUYzsEGyIVi
n9HzVFlaaZ+cg+1C9Z9YqlFcGLkfVGSeg8PEqXnxHgaYqHbc/vYc1S0e7Yq8
PgZwsyS/JntSQdIgz19ukAEbVpVmXTZUkKtx23NmjAGP+s4sLWtRQTlpi+JF
MgNOeS1zuW6igrG5uKfbKgPyzB1kJB1n4ea7kHMrawxwGtrQVb85C6adP7c9
ZUJ1ONbSmFtzFu6ofIkN3ozBE6JOYDPq05yFdCrjdqK8FX3mkn0TBdyMPwYI
caFzOlgpu6mAAh5hXHrpe1AfX6CQrBZLgadMI2MfeVHe4i9SLb5PgRDi/Y3a
QyhPL/w0kmWnwGueziYNlDd4Qk91Df4kQ4SBfNgPlFdEB7Ur+VAfH1PzT6hP
CgOd9P8u3E4hQ0bSK1XKCQwO2Ggu1RwnQ7X5p8AduigvP2iqCoYZKO+wu0DQ
x8C618GoiW8GSpQldn+8hIHiZv4Wg9/TkMufHq93DYNeTMjovw/TEDsYWxRy
G9XxG7TimE3T8EbT2PPWHQxav37QSh6agvCSvSBpjcEhvys9zXlTEBwV1vLD
HoP0yDkjU6MpcDMIIrF7YlDEHMEyETEJTtVqmcPeGHipDgwdNZ8EO2lm++wn
GMipK7lfk5yE29sf/dFGdYMS96RBpXYCDJof7Hz+GoPhRfJl5VES6J6Q6TOO
wICqxgJZiSTQzKDFiqM6dsOfk/uDBQmUA+6JNceiOaq9Kl2aRIRjKiZnt2ag
usp8aDQ7ZhzEPvGxDnzA4Gm38bvCLeMgIjDYnIHq6KhE7dafjgTg+Wd4WaMA
7a88114nxTHYUqZ1P7ASzaHLIsuFocPAcmTLf1dQ3zC4vD6fMjgEa9H1S6J1
qI5aV9VpHByCRRdlvwbUZ2R3D9WkRA8ASUY+hhX1PWE7bmiBUi+MJvwy7elD
33dWV9/jUg8Mcn4STUV91qku7rEc825onzuar0pAc2aTEOu8VSe03CC7caE+
jz/cUzmnoB2+fU87PYH6xKKmb26JAa1QmSnY5DuLQVPfL9c7001Qtm8s5BLq
e7/rOuWecPwGRYGxhsKo726wz9/YOVoHHxev8fxCfb7D64sxQ+I1kG25l1Cz
iP8dfGntaWo5pHd3p4ahOSll6oVSUupnSDoXZmOO5rpSQZkv68G5EJ+vJyOL
5uTPvc/2R317D28FOX5vbGAQIxP9///v8j++JIi5
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {4.081632568738924*^-8, 0.9999892268354116}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox[
        RowBox[{"2.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "2.`"}], " ", 
                TemplateBox[{"1.`", "1.`", "2.`", 
                  RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
              RowBox[{"2.`", " ", 
                
                TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                 "Hypergeometric2F1"]}], "-", 
              RowBox[{"1.`", " ", 
                TemplateBox[{"2.`", "2.`", "3.`", 
                  RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
              RowBox[{"x", " ", 
                TemplateBox[{"2.`", "2.`", "3.`", 
                  RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
              RowBox[{
                SuperscriptBox["x", "1.`"], " ", 
                
                TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                 "Hypergeometric2F1"]}]}], ")"}]}], 
        RowBox[{
          RowBox[{"-", "2.`"}], "+", 
          RowBox[{"4.`", " ", "x"}]}]], 
       RowBox[{
         FractionBox[
          RowBox[{"2.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  TemplateBox[{"1.`", "1.`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  
                  TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"x", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "1.`"], " ", 
                  
                  TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"3.`", "3.`", "6.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  
                  TemplateBox[{"3.`", "3.`", "6.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", "x", " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "3.`"], " ", 
                  
                  TemplateBox[{"4.`", "4.`", "7.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]]}], 
       RowBox[{
         FractionBox[
          RowBox[{"2.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  TemplateBox[{"1.`", "1.`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  
                  TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"x", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "1.`"], " ", 
                  
                  TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"3.`", "3.`", "6.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  
                  TemplateBox[{"3.`", "3.`", "6.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", "x", " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "3.`"], " ", 
                  
                  TemplateBox[{"4.`", "4.`", "7.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"0.14285714285714285`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                  TemplateBox[{"5.`", "5.`", "10.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "4"], " ", 
                  
                  TemplateBox[{"5.`", "5.`", "10.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                  TemplateBox[{"6.`", "6.`", "11.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", "x", " ", 
                  TemplateBox[{"6.`", "6.`", "11.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "5.`"], " ", 
                  
                  TemplateBox[{"6.`", "6.`", "11.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]]}], 
       RowBox[{
         FractionBox[
          RowBox[{"2.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  TemplateBox[{"1.`", "1.`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  
                  TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"x", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "1.`"], " ", 
                  
                  TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"3.`", "3.`", "6.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  
                  TemplateBox[{"3.`", "3.`", "6.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", "x", " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "3.`"], " ", 
                  
                  TemplateBox[{"4.`", "4.`", "7.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"0.14285714285714285`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                  TemplateBox[{"5.`", "5.`", "10.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "4"], " ", 
                  
                  TemplateBox[{"5.`", "5.`", "10.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                  TemplateBox[{"6.`", "6.`", "11.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", "x", " ", 
                  TemplateBox[{"6.`", "6.`", "11.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "5.`"], " ", 
                  
                  TemplateBox[{"6.`", "6.`", "11.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"0.015151515151515152`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "6"], " ", 
                  TemplateBox[{"7.`", "7.`", "14.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "6"], " ", 
                  
                  TemplateBox[{"7.`", "7.`", "14.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "6"], " ", 
                  TemplateBox[{"8.`", "8.`", "15.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "6"], " ", "x", " ", 
                  TemplateBox[{"8.`", "8.`", "15.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "7.`"], " ", 
                  
                  TemplateBox[{"8.`", "8.`", "15.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]]}], 
       RowBox[{
         FractionBox[
          RowBox[{"2.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  TemplateBox[{"1.`", "1.`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  
                  TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"x", " ", 
                  TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "1.`"], " ", 
                  
                  TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"3.`", "3.`", "6.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  
                  TemplateBox[{"3.`", "3.`", "6.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", "x", " ", 
                  TemplateBox[{"4.`", "4.`", "7.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "3.`"], " ", 
                  
                  TemplateBox[{"4.`", "4.`", "7.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"0.14285714285714285`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                  TemplateBox[{"5.`", "5.`", "10.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "4"], " ", 
                  
                  TemplateBox[{"5.`", "5.`", "10.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                  TemplateBox[{"6.`", "6.`", "11.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", "x", " ", 
                  TemplateBox[{"6.`", "6.`", "11.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "5.`"], " ", 
                  
                  TemplateBox[{"6.`", "6.`", "11.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"0.015151515151515152`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "6"], " ", 
                  TemplateBox[{"7.`", "7.`", "14.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "6"], " ", 
                  
                  TemplateBox[{"7.`", "7.`", "14.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "6"], " ", 
                  TemplateBox[{"8.`", "8.`", "15.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "6"], " ", "x", " ", 
                  TemplateBox[{"8.`", "8.`", "15.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "7.`"], " ", 
                  
                  TemplateBox[{"8.`", "8.`", "15.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]], "+", 
         FractionBox[
          RowBox[{"0.0013986013986013986`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "2.`"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "8"], " ", 
                  TemplateBox[{"9.`", "9.`", "18.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{"2.`", " ", 
                  SuperscriptBox["x", "8"], " ", 
                  
                  TemplateBox[{"9.`", "9.`", "18.`", "x"}, 
                   "Hypergeometric2F1"]}], "-", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "8"], " ", 
                  TemplateBox[{"10.`", "10.`", "19.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "8"], " ", "x", " ", 
                  TemplateBox[{"10.`", "10.`", "19.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                RowBox[{
                  SuperscriptBox["x", "9.`"], " ", 
                  
                  TemplateBox[{"10.`", "10.`", "19.`", "x"}, 
                   "Hypergeometric2F1"]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"-", "2.`"}], "+", 
            RowBox[{"4.`", " ", "x"}]}]]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6654569432283115`*^9, 3.665456963655682*^9}, {
   3.665457005339047*^9, 3.6654570316864386`*^9}, 3.665457192391181*^9, 
   3.6654573028723474`*^9, 3.665457611181542*^9, 3.665458787745502*^9, 
   3.665459730721903*^9, 3.665465459686948*^9, 3.6710671232078686`*^9, 
   3.6710674069988823`*^9, 3.6710831750222054`*^9, {3.6710832572109194`*^9, 
   3.671083286686545*^9}, 3.671083330277564*^9}]
}, Open  ]],

Cell["\<\
This is the explicit form of the limit z=zb. Uncomment to get the said \
function.\
\>", "Text",
 CellChangeTimes->{{3.6654617778918915`*^9, 3.665461798232801*^9}, {
  3.6654637491272025`*^9, 3.665463758340063*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"%", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"d", ",", "\[CapitalDelta]", ",", "0", ",", "z", ",", "zb"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", "\[Rule]", "zb"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScalarPlot", "[", 
   RowBox[{"d_", ",", "\[CapitalDelta]_", ",", "zb_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1.`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", "zb"}]}], ")"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["zb", "2"], ")"}], "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "zb"}], ")"}], "2"]}], ")"}], 
              "0.25`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}], ")"}], "\[CapitalDelta]"], " ",
               "\[CapitalDelta]", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                ",", 
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1.`"}], " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", "\[CapitalDelta]"}]}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", "\[CapitalDelta]"}]}], ",", 
                   RowBox[{
                   "1.`", "\[VeryThinSpace]", "+", "\[CapitalDelta]"}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
                RowBox[{"zb", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", "\[CapitalDelta]"}]}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", "\[CapitalDelta]"}]}], ",", 
                   RowBox[{
                   "1.`", "\[VeryThinSpace]", "+", "\[CapitalDelta]"}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "-", 
                RowBox[{"2.`", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                   RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                   "\[CapitalDelta]", ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "zb"}], ")"}], "2"]}], ")"}], 
              "0.25`", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}], ")"}], "\[CapitalDelta]"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1.`"}], " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}]}],
                    ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}]}],
                    ",", 
                   RowBox[{
                    RowBox[{"-", "1.`"}], "+", "\[CapitalDelta]"}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
                RowBox[{"zb", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}]}],
                    ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}]}],
                    ",", 
                   RowBox[{
                    RowBox[{"-", "1.`"}], "+", "\[CapitalDelta]"}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "-", 
                RowBox[{"2.`", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                   ",", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                   ",", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                "\[CapitalDelta]", ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["zb", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"2.`", " ", "zb"}], "+", 
              SuperscriptBox["zb", "2"]}], ")"}], "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "0.25`"}], " ", 
              SuperscriptBox["zb", 
               RowBox[{
                RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"zb", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}]}],
                    ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}]}],
                    ",", 
                   RowBox[{
                    RowBox[{"-", "1.`"}], "+", "\[CapitalDelta]"}], ",", 
                   "zb"}], "]"}]}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                   ",", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                   ",", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ",", 
                   "zb"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                "\[CapitalDelta]", ",", "zb"}], "]"}]}], "+", 
             RowBox[{"0.25`", " ", 
              SuperscriptBox["zb", 
               RowBox[{
                RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}]], " ", 
              "\[CapitalDelta]", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                ",", 
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ")"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}], ",", "zb"}], 
               "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"zb", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", "\[CapitalDelta]"}]}], ",", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.5`", " ", "\[CapitalDelta]"}]}], ",", 
                   RowBox[{
                   "1.`", "\[VeryThinSpace]", "+", "\[CapitalDelta]"}], ",", 
                   "zb"}], "]"}]}], "+", 
                RowBox[{"2.`", " ", 
                 RowBox[{"Hypergeometric2F1", "[", 
                  RowBox[{
                   RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                   RowBox[{"0.5`", " ", "\[CapitalDelta]"}], ",", 
                   "\[CapitalDelta]", ",", "zb"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.`"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["zb", "2"], ")"}], "d"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.`", "\[VeryThinSpace]", "-", 
           RowBox[{"2.`", " ", "zb"}], "+", 
           SuperscriptBox["zb", "2"]}], ")"}], "d"]}], ")"}]}], ")"}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.66545689616251*^9, 3.665456912692971*^9}, {
   3.6654589746115165`*^9, 3.665458993665864*^9}, 3.66545904369407*^9, {
   3.665459086166853*^9, 3.6654591160873976`*^9}, {3.6654592648189955`*^9, 
   3.665459360036597*^9}, 3.6654637471599236`*^9}],

Cell["\<\
For scalar field, we plot all the functions F while \[CapitalDelta] increases.\
\>", "Text",
 CellChangeTimes->{{3.665461805827404*^9, 3.6654618665071*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ScalarTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ScalarPlot", "[", 
      RowBox[{"1", ",", "\[CapitalDelta]", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]", ",", "2", ",", "5", ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665459133273565*^9, 3.6654592173440847`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"ScalarTable", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\nl=0 plot for F \>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654592195004234`*^9, 3.6654592441782703`*^9}, {
   3.6654593950724134`*^9, 3.6654594155619946`*^9}, {3.6654594713251934`*^9, 
   3.6654594845977936`*^9}, {3.6654597843145323`*^9, 3.665459834915113*^9}, 
   3.6654634285555*^9, 3.6710669437876973`*^9, {3.671084255985718*^9, 
   3.6710842562513375`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mZri4a918NL93731/gMKtQMm
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PA0h3KvW408P8u3D/lKIHdSYtfnTPagL2i71VIEGOd+TwoVcvfjicql3pSIN
flqH7xYL90Kq8NunHWtoOPZU51KFXC8se0bYUWo0/DYWOdBo2AtXMaWjWSQ/
b6Gk8gyE94L5Wu+k6TEaVu62+/l0Vx8+bxQ0aX1Gg7aW9uP0gT5cXXWXotpJ
ctL3h5XvfPvR3vpiY7wsHSMbj/hKbRiA+6RC/wU7OpSG1Ya4mwagrqQVJh9L
x3zBupivLQPYyWF3KcWRnKPoYu3RPgBhykvftR/oKLBMa2fRyPVuXH83JNBx
snFTeR1rAPnt3ft1k+kI/oL3r2YHEBDyXFYlk46f949YblEdhG/h4i83S8k8
9f671I91g/CZqbK9WEZHUeHTlo8ag+jfeHvniXJy/XSL0UrtQUQZbg7cUEmH
8qWTWwUMBsF1/JZsF4WO08dsJFuODiLuiGQLTzMdJYoejS53B5Gcp3gvupsO
n7gc878+g7i3i3fdOZKDdqhyMe77DeLIBjmOEpnHCjUCh6MCyf0+LC2M7yM5
SvcNX03YIK7oiDm8HyS5yLhmk0rCIBY+ZN50JDkp4ebql92Ng5A7x6jSI/Og
/ZyDvFPLIMJzN3UziZW9U+Mm2wZxe1M704fMj7H3t6Yvog3CWP98WBmZL989
OVKzbXAQeyUcY/Rn6Ij8cGvuxfQgHk9dHPrNzcCj5hYbE0UWBv+bFPERZiDo
9kPFBiUWuMUuB88SByjv7j+swoJs8vz6qySX+d5MtzuozoKuZ+0DezIP31B8
ar9Xh4WNrcZxWxcycN7d+JK+EQtqM5p8b8h8fU5OUPPbIRYcfV59ECDz99mK
/PGtR1h42b123JHYYrnG5S3HWPj856b1RjKvm5Ys8NCyYkE7cE9ECpnvsbT6
uqo7C1QPhyobCQb08ry3xnuycFZOrewzse4F3b9rrrEQIfBuD48kmbdz42+t
vs1CY5xkcwTx2nP+d1b6s3AtuJ/2RYrksoUG218HsMC/T6Bxhlgp+ze33EMW
4g+F6hlIMyA//7yPzBMWlFLUnQqIJdJ3+y2LZOHkmUL+ZBkGllrOGIZFsaA4
996zn1hMMENg6RsWBu7tOSSznIEFpxUfiMaycOpxs4o3sfA86r6QDywIJBeo
fCYWTH0qvCiRheAOZ/8eYl4+3qD5qSyUevGc1JNlgCs5xygwjQUjB2qFHfHs
8csLhDNY8IV18CPiP4ndwQI5LCRs3iFOJf519MVhv1wWZpx9G+eIJ+aMF/Pn
s4DM7XR5OQY4pgWPeUpYWMHd3W5F/CvO1zGrjPy+10mFO8Sz0/v3OFaS9ydS
bvOKmN94sYI8CQU/eq5HZBPPf9/yt6WWhbU95cUNxEsmI9oCGliovjFDZRFL
G1mloZmFL1kXemeI5aNXP5xoZaFX06z533mZ8sTQ+fgO8n5EBZPk/50P7k3d
YUllgS1a5aBJvCnSQ3YJg4UxN5rwNuJt47qT5d0sFHP7BOwh3rWLq+lmHwv3
hf8MHCY+8Lw0af0gC1FnbsgeIzYZCfAfYJP1dGTn2pPEJwyMbV6OsDCXdH/B
v/NDq1BxfWMOCzq5Nwv/nR+eZ3VK8n9n4aKu2a4TxM560T++TLCgd2rb03/n
hx4htrXOv1kkt55L/Hd+eLNPNX7VFAvu3hMPdhH76Iz7tP8l36fU0nVbiAOC
MiwfzpH15sgK/nc++ph5fcsOHjaaK5+myBA/1zJY+puPjX0M7UAh4tf+/JxE
ATZGvg7L/fx3PkutqrQSZuN0dd15OnGSZsh78QVs7G/6c7aUOP3eUa+qRWx8
59xekED8tV36pJcYG96PXc8FERetY2ppibMxfbX7nCNxfbPD0CtpNtyjHI6t
Jm5T1iw1kWUjpjVs+yxZH/SbP18LrGTDbsfZqmbiEcU7R11Xs2Eb1Pfh+r/z
7Ku7NZWU2Qh1Dp/cRzxFERbpUmWj0re7YxmxoEdYwS5NNqo+L98dT9bvosqT
L/9sIH/v8vcKZ+Jlsis9k7XZeJqyrnE9sWJpwlrJrWxw51+/kEr2y3bxgvDh
3WwkiD0++Ijsr732vq7Re9mYupYW82//GX/bb3T0ABu3fXY7cMj+tLRt4c43
ZkPIf9G63f/ODzOGHJ+cYqO0NUOngez/u0Kpe/ZYsrHtzHSEE7G/hYfCXys2
8kt4jAWIw/m52m3t2OiP3x2zYRkDaUfFd25xJddbukdfIPXlySIvVr4bG8Xd
Jy/+JvXnciXroaEnGzXivlU+xOu35bab3mBjyaN03TBSr1IVbZydfdkIDzof
FkHm0hA6ZcnP+2woqpzLECd2eb7py40ANjYO3DMNXkTW+3xhvgeP2JD8+2P2
CqmPyT9SX7x7wYaB+K7idaR+BidJQzWSDdFX6r5PSX11Pn+vLzWKjV89t5J/
k/qr1nVcI+8dG657ctZmCzHwsWi2pD2JDZGI1V5SAgwkPDYaX1DEhvBizsRJ
Us8DDmSGhZawcV+nmBLOxYAD/8qtMuVsUG77Uevm6FC59sNXmULeR+GrZ1tm
6fhgFSGzs5WNR5crVw+TfhGrwTK8OsSGx+CjgeIfdPixj4zMjrCxy+FkRcN3
OuzefX3sy2FDVqY1hfofHaslHlGfTLChuXDYm82h4/2s9uWkWTZom5Xp9GHS
f2p8XvWIDUHOocxHm/S/oPXTp1+LD+GK//5Pf0i/9Ay7vPy0JPn5qoKVOUw6
9lpYv2yRHYJjJ1e6Bp2OsRH9FxXKQ5B+aaM52k6Hzvyp0GT9Ifgp8oUn1dAh
7+JqdnH7ELQPHKZsJP1ZuJm1RHnXEGxsbvzNqKKD9rLtyZt9Q9CYoGxOJv3d
e21GSKjZEL5teRPuVEhHzX6XoOsOQ/D0WlK+Kp2OzOTBA5udhiDcY2R9Po2O
aLEzIhOXhpDy9NaH2FQ6LnceDHDyGMJex1YVySQ6JB3W+lvdGcLFvIyLZTF0
nH0w4GMYPgT5phb3A+F0/C4/fUOsaAg67mk5jW50yJkaehSVDGHj4t3fglzp
MKRrXLpcPgSJYsb49kt0hE/w2DRShhDc+qTllQMdWvLx+5+0DUEP9n+lrcn9
r/+UEhsdAvdczeDqgyRPrQvOFpUchqv2tnXH5OlYmn0lrVB6GEf7As9dlKNj
607rj66ywyjSkBO/IUNHwAmt6AaFYfT7byp7IE7Wg1/n/cdqw8gTLcm2ESLv
l6F0XHTnMN5Q6w/wjdPAfJz/c7HzMPQGCucqs4m9D+Y8cRmGwaZdRVYZNHS7
dd1e6jYMZe3i6f8+0cg8/1tA8uow9npb5/Im0tArpSG9wnsY5VFH63ojaRh4
E6WvFj6M6Yc5cyFeNAx/unV/X94wxIvDddwNaBh5K2JUXTCMvlceIof0iJ++
WHyweBhhtqYP5XWIPTJeGFcMY7WlpE+GBg1jW0YTjzcOw3af5dUQORrGC0/X
2w4MY53imxvzp8n807BVynvhCJ4KlKUNkXmLy6nt9xbREaQ7lHy4Q+ZBYUG3
1v+WjKDtkt7Khe/JvKef8NRaagQhziEXF72gYneC5MLtiiNYd97fPMGbilDv
nzxcuiMwyw/x0TGjYuPGlJFbtiOQjYxtdRjvgl7t/mrtCyOIa/zuR2V3wdB+
IH7UYQRvIs1P7+rtwsnXsuctXEZQpZph+KulC94iQd16N8j1p7PLu3O60Nh7
oXU6ZAQxxhMpFO8uuIQqFFzLHcFlgSraM+EumISdtefNHwFld4eYHm8XtMPf
ij0sHMEY3Xl363Qnpp4p2EaXjUC8xdB9ZKQTvi8VhMvryefnffQxqrYTEW8V
zJb2jyAnSmBkUUgnSlIVWMkLRqGV6jhGEe5E7Kezj3UWj6L6vlehJE8nHqS9
1S0SG0V/Nv9v8z8dOJSu8LBFYhQZKe+NMwc70JGlsOGv/Ci8m7PW9hZ3YCxP
4ea+TaNIGd4bPXmtAxI1Cov7LEcRFxVrGUtth87P5h9W1qOIFh7jD2tsh7ns
/TaazSgkxe+/8axoR4TTcFTbhVFI7Kx1E0tvh9zCdLXqy6OYzTL7lBDQDqXD
uw+k+Y0i4kBe6CHtdmg3nPe7kzyKnsnetH6vNhz7I+UwkzqKxcusche7t8FT
nnLw+udRPGp1uLTuQhuyXTXF3bPJ/eoTvbSN26An9ufd+aJR7D+TOBu4og27
TAMKD7WO4mrenqjNX1th2vLx7/LZUSxNqwpj97fgdpzjVB3XGIpZO7TrWlvw
4dq6SW/eMTyTMDV/Xd6Cv7Iff7AExzB4MPTN7IcWxNolDqUvGUPrmN+1DIcW
TP2ObzdSGYMUU36ij92Mt9Jx6TfNxtCUdndmW2sTKCN2aRrHx+A834WxtqQJ
v/OUUntOjMH1ot6JuU9NMLKJTdx7Zgxy9O8njz1swq/EmLdLHcagMs/uQv6O
Juzf9j7ko9cYlJOe3zT50IjvZ944UhPG4KARup3PogE/n/FrWyeNQdiZ90jm
3gZM1tnP9KeMIetbxZkDWg2Yw4ZgTvoYOuZ438iKNGD+yuIUnvwxHJl9GHo6
qx6rmX3flZvGIFFlP7NYuB7mVsrXPKbHUFCxe1ZOrQanngdtn5oZg6ZT3BuT
vxRY1o8LeXFxMMeT67+1mgJbgy8RJAKhQFPCR/UCBZdX7s99uYiDL4dfbXOI
qkYQ8+Jc4SoOXrrZKdZPVyLfKsV3oREHoXI8nXfcy5BT53iAfogDB4p5ysD6
MmTqq4omH+Fgj1fn/JqxUnxcHhN58DgHX50d2UvPlyKiPeJz0FkOdi5MiLc+
UgIPY79u4Wsc1PvnjxiJFMElf2dc5w0ODDrjC7rzC+Gozu2UcJsDmsSGoja3
Qpydf3Ny3z0OFqyptaR1FMC4wnXRg0ccbFiqUySkl4+1BhbbBGI5kBJ/r71L
MIfMDdK8bR84WMuV5dR18gsU5NorYhM54H+u9LQmMZvkABMzw08cFPEFfIna
m4V52Xsv+uZyULjVupXhmI5uDa0XvE0cfJLa9eVOwkdQo/6zbGrhoGZ1n8r2
xYloX5Ci+K6dAzv/sKppl3jUDquk7qBzIDfySC5SIRa5cSvK77I50PX2Exz3
ikL2MlrQkREObm3yvCA0FoHPvhEm8hwOTuQ7xgUdfIYEG3F6wQR53prx8N7s
R4hpbHwX8pvcT5bFahX1R/T2EHurKQ64O3y6t2+/g8jUgxqaMxw8NK5e5HXH
Bc9WiPycm+PAezJaaaHfY/3/ATzV6x0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
iDyZfZKbKAqS519+bt9WiLYfr2XVeWR9mgQqPgcKgfWSeXP5FHzUN16U9yiE
vvDA+AAxd+CT7LGoQtRMd2CcFFKI3yp7clpmIZIMPubJjZL1iXMqeV1TiBNv
Yp6VEEv9TptlTiuEXlRChtUXCg12P4+MjhZCcsWVqd3Et/K2ZDyaVgTq+/1C
268UNkuFiGyQL0JsxWzOO+KxMx3WPWuL0Nr8LUr1G4W0BsWEKzuLYPRw5u/L
xMfVTo0pHinCUTlqaR3x0oC8HdWeRTBJ/i47dYxCB/vfY9egIihrHZ66gTjU
0Gx4RmwR1ncunTxMbBwdvvFNThGafSSlvIn//mTcsX5fBD+VIscA4nzbVfQx
RhH8w2OmBBF7ZJ3XeDpWBIccoeRVYsFm9uf3ksU4lt6z8zTx6XoL30n5Yizo
YD2yJObuKVXUWFsMGQPvf2rEJ5ir6o7uKAb3tzBmnIx38OQT97ADxQhJ8/Uv
+/98fogvrHIvhuJDlXxfYs51z+Jv14vhLtq9V4PYYTbLYcXjYsi+cfToIOvD
eGousT+lGIFCl4UXiQ+rlKQHlRXDT+7svlnEPRlqtsWtxdj9rs84kqy33abH
E9RgMXZIS/6UJ+6oFXuxdLIYTQvELj0h+2Vrc26n5dwSVIz09EgSW7ntDs/e
UAIFw5jgZgGFxrEig/5dJVA/9v2HKvHuayvZ0g4lMNk0M9iLxIfJE1FNn6AS
zPCZPPydxFet8tm2lJgSUDzrcjXi7W96femZJTAoOnJ7D4lHo5rCOnSXwPac
SdB9Er9lVqpnzvFLYHWkkPV8iMQD/dHChCmlkFERYbwepKD/7YzjtNWlyLv7
TzyB5IO20orJj76l2L/xX8Y6kj9v0h6++BtaivtPNtDEmBTU9UVMtBNKUTB/
l8pHkn9qlrTwRw2lMO2/ZbaDRkHxygPNg/JvITdLwY/WTiFW8l/bXe23MP1a
s+pMG8nX8NN+b7e/hUNN+olfJL9lU3fWK7q/haZyROOvJgrzu/84Dr19i/D0
msKE9xTCjp+SlGt9ixNrVpz4XUdhzmjXG7PBt/i0++8CC1JvZkjkTqbPKYO1
jl8EvYqCqN7JCC970jfa6r9OLqHwNayjfsqUclhFTMpMSaNQejoL/YvKcdud
21/1msJtk5D8WvVyON2863AlmYxPZOvLu3blcGUkxtHjKezwSL8qnVmOxVRg
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
4WiR3/AbYsN7sq6cNzwoKYy7zPtGwUQtd0dUFg+5mrpsF2Kbd5YqNrk8VByZ
tiWb+PBRSnRGAQ8+IrJnvxK7/ApkVxbxIOjs379yjMLZcOUKn1IevsQUs62I
bSKc3MTKyX6IFdi4E+s9jpe6V8mDV25q7v/fH8s+4ZQsquah6FvW2G3iiSfK
zs9redidVvbv/++fe586zVn9ngd5ufgqH+KKyPiCnAayn6ckVh8jjo/iOPzX
yEPgOS/lrcQB0coz6pp5yDEwfbro/++bY5xyrD6T/Xtb7s0i4zV7Fn+4p52s
jzeVFkesEcuZeryLfH9B0XJb4nlxyhn8Hh46xQV1f8j6fI1zsvPuJfm2Wi0g
hrj9efyUKSwebrn3GmsTF77gpNzh8PD80KHxQrLeUfHKtgsHSD7V1N5aT3w5
wenPsyEeBvYv6XxF9sf+ZXzSSi4Pl9av6ZlLvDWRY5nF4yHvUeylU2R/VZKU
fxkIeSje8S2mhOy/RLJTfPUXHjbaX14rQsxNjt9lMcZDc4Wj4kYSPxmvlWMd
f/HgdnRa3m2KwsMUp53UJA/1dzdqPiPx55UaP+r1lwcD8cxXSSQ+DdKVtwWJ
8eFUcNQ4gsSz/Bsn3vxpfATT4jb5krrz7018RLQkH6Naeh02JP6rM5WH38zm
o2f2yWcMki9JWU4P9OfxsT7tadQDkk/B2fEGVVLk+2n6jA0k3yxyle+1y/AR
8bil8wjJx7V5TuvtF/PxXLv5cC+NwsL8eOawPB/7gsxqLUk+dxco6/xW4oOS
CuXM6iT1o9CJFqDCxzStd077//8+uij+1tyVfJyqN3MK/0zyuUS5U1mdD/VJ
tvdAE6knZcqXTdeTfz9Pfymb1JvmcqcVn/X5OKPlW1RaQyGnIr7x8CY+FnhH
iNwh9elSlbLSWSM+jK71K/4idVu0Vrn2sRkfb8Jrn6jmkXpV6+ShaM7H8sId
viHZFOrq4mVTLPnob4lV6SP1M+S98qm3tnw00esPOqVQkPmkPK//KB9X3f4T
T4yloP+97ZuDIx/mH4cePYsm9XXp7c7eY3zs8LONCnxK4sOdiu08wYeprFP4
qoekXs/J1Wjw5GOmXxA/4xYFrHeZb3KB/L5H+gNq1yk4HJX9Xu3Nh35A89EH
V0i8v7lcWnaZj9bP/9lpX6SgarljV3YgH24nFbviXcg54v1TUyuYj7lWYnvD
yXlyIu61VNpdPnSsb5l7HSX1Szi7JzGMD6mFeWr/9pJzMazjRGQUHzaOs4o3
byf52eIaeO0NH3nzPJo3kHN33y+5k38y+dC8WHhYhJzTF5U+mvvm8BGZyJXP
kyLxf05b2quQj9PfdKM5Ev///6tfCa5VfDS6U6tMv3Cxfc+dSosOPpgX+pUU
K7hw9tuc2NDFx9MP1i+fFnERmCAIMqGR57HP5U9kc1H/zcZqK4uPyxyjVt9E
0meEL2HqcfnYLCv7wTmYiz3tab/l//IhsuwhSndz4Z98eqJJRICnS7jZEtu5
eOWjPn5DTIAk8a2L9DZx8Xtp2rdhSQHObayJ1CX9RpJLKjd3gQAFQldOmRgX
Ez9fd+1eJYChcSkqskeg8sGt498aAVLsguslX43AMmZVW7amAGZTZ0RoPhvB
S6PXTbK6Avz2L3kz7/YILIJf1fYbCpAVoPlyxYERxC9Ozr1sK4Ais0thx49h
fOS5ZGvtFyD7vf/UjSOknypTzeQcIOM9KwgWpw9j97GkVBN7AQz8tvQqVg7j
R2pi/MKTAgT7m7geCx6G2X8vw9KuClCjUbs7a/4wvOYeD7W/QT7PrtXhTxlG
HHt5iFSAAPtCbn/69WUIYwEJty/dEUB7TrH2zZYhxDbG+2+PEEBcrb3AJHQI
X+1fnKanCNBo7zau9ncQ359M1XNMF2AazSb0Em8Q401ufwYyBKj7uM//Sc8g
/kEnVJgrwO31nue25A9iluK7DNFyAaiE3KMbTg1iBav/q9pn8nzTpeU6DQNQ
kzUtSW8XwHrO/tv6+QNQt0q/qdMlwFCreof4iwHoVFxYuLmXrN8E95bgwgAM
n09bbzkkgNo3C7Ex+QHYOaj5XJgUYNHTRisN+34cehqyZeKPAMty1e6aGffj
aPPo9KsiQnyoEf5S1uiHs1FRVNBUIcZjFmiLTvTBU9GsNHquEA+27DNzCutD
COvUv8rlQvh/firNeMPBfdnmOmNVIQTSRzW3P+DgoZVuWIOaEAr3aq/vO89B
ZMVvxXYNIfqoRg+/9RwkPb+3dXiDEE0XHLYmFbJR7pARMGe3ELZr721wS2Wh
uOn0LoaFEDcclifTyb0833D1/DfWQlwT9yr5RPr3NPnEGPP9QhxS3COtOIOF
qK6onBAnIQ6YmnKDKxi4YBXInuFDPg9MF49j0XC2fFtyj58QIS+3pw74k/uo
5hT3FH8hPGcFlzYvocFp1uVx01tCmKb3dHtb98Cq/tzc4PtCbH9SHa2X2oU1
Rkf+k0gSovH05uyaee1QzVgs1vlKCHm9sHnHItqgvKyrPilViP5Rn32zZdsg
+9vG1jiL2NJqr43MZ0wrNDkVUCqE364lieOTzRBdOW3t3nIhQrUSgw95NONP
xLsfKlVCvEpNj3tY0YSx84Y3quuEeOTPLWR5fQJbSzdS7LMQYtVhef5R9aDH
fjn6uV2I56/+tSXa1qFrdoZKQpcQU8YN6zQka9FIrcrcyhCioFtlVPHgO5Qm
K9RdHxEieuS2p/t/JShc1BtizRPCe9N8bV2dQuQERNkoCYWY+rKkQlEqDynH
pBkVY0JcphWI5cukI7G1NSHspxDn9+S3KW5JwvMtYW4OE0LsiYtu0t0Xi5hM
cy3tP0LoRvofeqVyH08UZn7/94+sv3CwKqY90/B/+BhN+Q==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"\\nl=0 plot for F \"", TraditionalForm], 
     PlotRange -> {{0, 1}, {2.0408162843694627`*^-8, 0.8736000091054306}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"-", 
         FractionBox[
          RowBox[{"1.`", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    FractionBox[
                    RowBox[{"0.5`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"1.`", "1.`", "2", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], ")"}]}],
                 "+", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"2.`", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"0.`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"1.`", "1.`", "2", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"2.`", " ", "x"}]}]]}], 
       RowBox[{"-", 
         FractionBox[
          RowBox[{"1.`", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"0.25`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"0.5`", "0.5`", "1.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"1.5`", "1.5`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"1.5`", "1.5`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}], " ", 
                    TemplateBox[{"1.5`", "1.5`", "3", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], "+", 
                    FractionBox[
                    RowBox[{"0.75`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "3"], " ", 
                    TemplateBox[{"0.5`", "0.5`", "1.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"1.5`", "1.5`", "3", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"2.5`", "2.5`", "4.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"2.5`", "2.5`", "4.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], ")"}]}],
                 "+", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"2.`", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.25`"}], " ", 
                    SuperscriptBox["x", "1.`"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"0.5`", "0.5`", "1.`", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    
                    TemplateBox[{"1.5`", "1.5`", "2.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}], " ", 
                    
                    TemplateBox[{"1.5`", "1.5`", "3", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"0.75`", " ", 
                    SuperscriptBox["x", "1.`"], " ", 
                    
                    TemplateBox[{"0.5`", "0.5`", "1.`", "x"}, 
                    "Hypergeometric2F1"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"1.5`", "1.5`", "3", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    
                    TemplateBox[{"2.5`", "2.5`", "4.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"2.`", " ", "x"}]}]]}], 
       RowBox[{"-", 
         FractionBox[
          RowBox[{"1.`", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"0.5`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"1.`", "1.`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"2.`", "2.`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}], " ", 
                    TemplateBox[{"2.`", "2.`", "4", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], "+", 
                    FractionBox[
                    RowBox[{"1.`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "4"], " ", 
                    TemplateBox[{"1.`", "1.`", "2.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"2.`", "2.`", "4", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"3.`", "3.`", "5.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"3.`", "3.`", "5.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], ")"}]}],
                 "+", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"2.`", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    SuperscriptBox["x", "2.`"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    
                    TemplateBox[{"2.`", "2.`", "3.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}], " ", 
                    
                    TemplateBox[{"2.`", "2.`", "4", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"1.`", " ", 
                    SuperscriptBox["x", "2.`"], " ", 
                    
                    TemplateBox[{"1.`", "1.`", "2.`", "x"}, 
                    "Hypergeometric2F1"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"2.`", "2.`", "4", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    
                    TemplateBox[{"3.`", "3.`", "5.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"2.`", " ", "x"}]}]]}], 
       RowBox[{"-", 
         FractionBox[
          RowBox[{"1.`", " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"1.`", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "2"], " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"0.75`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "5"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"1.5`", "1.5`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"2.5`", "2.5`", "4.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"2.5`", "2.5`", "4.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}], " ", 
                    TemplateBox[{"2.5`", "2.5`", "5", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], "+", 
                    FractionBox[
                    RowBox[{"1.25`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}], ")"}], "5"], " ", 
                    TemplateBox[{"1.5`", "1.5`", "3.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2.`"}], " ", 
                    TemplateBox[{"2.5`", "2.5`", "5", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "-", 
                    RowBox[{"1.`", " ", 
                    TemplateBox[{"3.5`", "3.5`", "6.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    TemplateBox[{"3.5`", "3.5`", "6.`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"1.`", " ", "x"}]}]}, "Hypergeometric2F1"]}]}], 
                    ")"}]}], 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]]}], ")"}]}],
                 "+", 
                RowBox[{"1.`", " ", 
                  SuperscriptBox["x", "2"], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"2.`", " ", "x"}], "+", 
                    SuperscriptBox["x", "2"]}], ")"}], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.75`"}], " ", 
                    SuperscriptBox["x", "3.`"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"1.5`", "1.5`", "3.`", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    
                    TemplateBox[{"2.5`", "2.5`", "4.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}], " ", 
                    
                    TemplateBox[{"2.5`", "2.5`", "5", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"1.25`", " ", 
                    SuperscriptBox["x", "3.`"], " ", 
                    
                    TemplateBox[{"1.5`", "1.5`", "3.`", "x"}, 
                    "Hypergeometric2F1"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.`", " ", 
                    
                    TemplateBox[{"2.5`", "2.5`", "5", "x"}, 
                    "Hypergeometric2F1"]}], "+", 
                    RowBox[{"x", " ", 
                    
                    TemplateBox[{"3.5`", "3.5`", "6.`", "x"}, 
                    "Hypergeometric2F1"]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
          RowBox[{
            RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
            RowBox[{"2.`", " ", "x"}]}]]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6654592461467657`*^9, 3.665459368219685*^9, {3.6654594799371357`*^9, 
   3.665459485872205*^9}, 3.6654598380827937`*^9, 3.665463430673909*^9, 
   3.6654654940724096`*^9, 3.671067191271227*^9, 3.6710674565832024`*^9, 
   3.6710834181130395`*^9, 3.6710842607642994`*^9}]
}, Open  ]],

Cell["\<\
 The graph showing that critical value for \[CapitalDelta] is between 3.61 \
and 3.62 as the second derivative is changing sign.\
\>", "Text",
 CellChangeTimes->{
  3.665461513796451*^9, {3.665463020663475*^9, 3.6654630815090685`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ScalarPlot", "[", 
      RowBox[{"1", ",", "3.6", ",", "x"}], "]"}], ",", 
     RowBox[{"ScalarPlot", "[", 
      RowBox[{"1", ",", "3.61", ",", "x"}], "]"}], ",", 
     RowBox[{"ScalarPlot", "[", 
      RowBox[{"1", ",", "3.62", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.4", ",", "0.6"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\nl=0 plot for F as in (4.5) with increasing \[CapitalDelta] (near \
critical value)\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654626618701124`*^9, 3.6654627911483583`*^9}, {
  3.6654628334265623`*^9, 3.665462927390253*^9}, {3.6654629757284975`*^9, 
  3.6654630058375845`*^9}, {3.665463412895053*^9, 3.6654634129540877`*^9}, {
  3.6710669268113284`*^9, 3.671066929093169*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
P4b9H/G1u+4jBe3TX3LRnZ+3nvz7i4Lt6lVLfxOrZn4bkxihIO/GT3V0rO0l
f4VRCnzWipiidWoYN/NxCpyXdPuiM9OCzK9OUrBsn1452m3bLRl1QRpWri83
mSD+8ZDvkbcUDZ2JXjv+EN9Y1XvfR5qGyFilfWjr7OZ7vjI0aOm+PYy+l5xx
97AsDeH/0fFo72PaWYGLaZh89L0e3QfBSSdW0PAmepr6JHHXq29+cRo0FG/0
nfoXx4PBe594TRo8Us6KofWeVB5K0KIhZjxuPjoz/7zHBW0ajIScVNFOCcqu
lzfRMF9RbA+6Y8cBy4wtNMztaihHtzDU6gI70v5bC1z59pL1sKWhpdaehr6t
tz3R6VWPD7McaBAqnx+IPph5oVhoNw3PzJ+fQ09zMdLd60qDtMKCB2gNOt9c
6iANR1q//kUvbE79ttqThobwVTOmEAs8jUo09KKhVtxOAv02w7X9sDcNFeJ+
S9FeTv/tbjpMww/rh8boa5wQr/DjNDTtPX8OHdnkIZoSQgPrQOKFf/dX2N4r
DCXt3RSeitZIX/uTHUZDfq5S3r/3O348rh5BrnOS69HT2aYxA7E0+N//NoWf
eKBBY9XUOBqCvOuE0K3ly5ql48n3tseKoTOv/pUwTqShuY2RRWvtepB6/RIN
If0FG9DenTJ5thk07Cj44oa+E7u1xeEaDQmihl7oXt3gYadMGjQkzvuh99xs
1z9wgwZHxW/H0Tu9ElhB2TT0HJuIR2+aFJiVUkBDbo7+I3TovfWq6YUkvtI5
peiyPXvtr9+jgcqbrECr1VXdyr1Pg6dl2Au0UsJx3bJiGmpcm9+hJZcM+rAq
SXtc7v1EW7Ytukw/peHiLOVRdFykxRNeFQ3aBsm/0UL9d4QGqsn4dNrMP5V4
4oHb9YkXNDzuHxRFa7pdquOrp2HhkTFxdKBU7ZdpL2mYWTQ0Bz0YIqc1q4HE
y7ZMBt1jyH67oJmGdx8ylqFd8jQXKbyhIfZ3uRK6UzTZc3UriX9i5hp083ur
afCehk2xVRpoE+1CS+MOGhxWT2ijazNF0rexaIgv/7sJ/dijTs2FpmHNhNMW
9KvFJ02cuDQURuSZojnvNZwdeTRURlZZoL/HDfo7dNOwRPK6FZrfKC/a7hOJ
h4aZDXr5w/n3bfrJ/LvGb482W3KeZfmNhsPqHx3Rlyd9Vm8docHvgNIeNLfT
+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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt2nk8lF8XAPAWKpIWSyhbKiVRkS05CNmTpEh2RUShUIoke4jK8kNE9qyF
SiUUrSoks5h5hlSWLC3Sovee+bz/NJ+vaWbuvc+9557n3EfW1c/aY86sWbP2
k3/wdSrhd3ZGRi+E8YcJOrkxoHGodSAzsxfosg/kXIkjjBM3ZP3XCx0rjdQ9
iAV4ZO/kZPfC3VUqdt7EMqeNuvLzeiFeKSUmiNjU6xJ/RUkvKH/8fCWJOMtQ
Pqj5Ti/orJf3e0CsP2NtNdzbC0rT9drL3RlguX0BT6E0DeKi6SnNxPOWKbU/
cqaBoudHV1MPBtyw9lnxyIW8v0TK3JzYILXUt8mVBmeXL1W1JI4Qlhd56E6D
zUZKs6yJZ0RlXBs9aXBhx55YO+IfK5b9qTtGg2GrBidP4sE1P5TLw2kgPNdX
5gLxE80HaVdzyecnNy66R5w1MTupLI8G/4qNXzQS+5cYRjVdp0F87cK4B8RS
4i8DhwposE/94uxm4pM/6bt1SmhQLprEbideWz+9cLCaBq6Vok7viKNUt4Zv
baHBn6HjruPEO5XLPbs+0GDo8bN8mUMMCCzZPPBukAZav2ymZYlz5eqdej/S
QIC320KO+NfyZtu+zzQ4E9bwdQ1x+az3Bp9GSXs2SKhsIF72dq7sn+/E66vD
txL3BR7olZtHh+eFvvYm+P13+U0D1tLhvnyvrC/x+7IrXvHydKg+83iXH7F2
tkxs/jo6LCn/L/QY8dxwtfZOBTqseje/0584xdDVSFWZDnOVx/yDiKte39H/
rk4Hp5mgsHDi4UHPbUEmdDi04kDHJWLL91/tk0zpsD0mnZ5CXPP07KkiMzp8
KngzmEp8qvzynR4LOjhKa/66QrzAv0ldw5oOsj4jwpnEa/8uV522p8PHBEeJ
68SuQm2Kp33o0ENpeVVjfyvCNiUepcN/seW7a4ibjTVU83zpUDeuollLvOps
yba2Y3Qo/HeB9zYx9SneVOgEHZQUDVMbiJ0fWHmWnSHtr712/iGxoxctn55I
h58eOvdeEAvypBZ9SaLDP5Zj9EviBzlmZbMv0YExXmD9iliqq7FGPpUObk/z
BzuImTrXHgWkkfEeC+HpJHYQdmctzCXjHfhteS+x3cNRCe1qOrzvPps3gL+/
8tN17Ro6+Kzau/MD8aEQjsL2WjoE3j41gg5U6dHSuU2HtWq3VT8SJxY12eve
oYPG7snGz9jfpNRMg0dkfJZyyr8QKzhrSli8ocNbatuin8Sb7qtct3hLB4O2
umy0uoSSgmUnHab+JWycJjboWqW1q5sO1wbNzX5h/40F7Hf30iGBWh32hzh1
EytjL0WH3gUx7bMOM+DPrAvijhN0uP2rZGABsVZ3pGHgJB2mFR558xEHlUQe
j/tKB8HQ1ZPoyd2RT+u+0yHK5s0ffuJP18+HLP5Fh1/XX/MtIu42iOhtmkPG
+djzOUuJK2LCMuSEGaB5932AGPGIQ9hjTREGLNWx+YBevzlsYpcoA8R3KNiK
Exf0njUJFSPz6PLHrRLEmQpnp7tWMqChoHZ0BXH0i1C7qDUM0En+qiNN7Lzk
lPhnNQYsCljpvYb4W+G9pyPqDOhSTmhGx2z/GzKuwYD8B0Hia4mrj4TTprQY
cOJWy2P0nMdR/80DBrgVaYitw98PSZVcvZPEmZT+AgXsH6dc1mkf+d7sa07K
xKEhX9647mfAmzUqReglSzZFHLJjwEtHiy9oze21nKMHGJCssfz0JuK4tDv5
oU4MsGLwJW0mVjR/siaTvFotvZ2rQl6P3Wat7w5iwMYQv6Pq+Pfvlg86gxmQ
7uB4A7156wPrtyEMoN/jMNCTt7JOd5xmQLDcTVMN4oBbdi+fhpFxWrhbVpP4
ZG3nsQfRZF5dFrunRWz7VZ/3fgzpj835EbS6Sk3GvVgGHHSMkdxG/LMmubkh
ngG0065n0SE1FsK1SSSObnTapo39rW6rL0pjgOH5xuvbiR0m1MwL0xnw2mjs
JXr75kJ2QQYDfPke/UTPVEXyXf+PXL86fQsd4rAqvQNZ1xhwvvPJBDqi8t5M
chEZp/Fl63WJXccUUpOKyavffkv0DuVM+cQSEgcu6gWgeSqDreLLyHx5+u8e
+kLF1usXKkn/dFRN9PD63qw0PFXPgOn6Rmt94lz31WcTG8i6jeI/ga5fkVF3
/Q4DDkyOX0UPxkbIP7/HgFuLYnvROw7t5VvZROKczbjdDmy/1O8X99sZ8OLO
0E4DYtF3frxvnzKAd/6oG3rjxYHtg88YMJZ1MQzt8PtlheBLBrTyld1G3+nJ
TXZ6w4DFVc6ShsSByUY2s2kM0F3IS0cn7LyXIEIn17lCZAKdP6P8eD2DtHft
s3lGxG99xNWs+xhQOSW9Ga1sMrI8n8OAsyUx59BGs1ys6vtJ3I1/dBntWN8d
83yAAaN/c4vQCWseTn8dZIDZF5sX6KHZKXSDYRI3AzOX7sT5fmeesN0IAyx2
LV2FFj922vzoKPn+o5u3oI373O9fGWPAnme+u9GFd9WvDX4l/XT+GI9+cLy8
59c3Mk6V1Rno7nWySxb/IPvOqHwRmieN/5z6T7LPRIs/QrsEMF1j/pD14Ccx
gX49kiod95cB3+WSf6N1Dpky4mcYYD36gNeYWMKufm/SLCY0dRiLo2PeHl12
aTYTqGMFq9A/zFZ3pMxhwh+1uxvQb3UuGV/lYcIZPZHtaN2GnbzpvEyYFjhg
iK7YPPMoYx4TpAQcLNBxq723ZS9gQkVNsgNan99QqUCACZK/ngehq87/Hrqx
iAl6jZNn0FJ/q4uKBJnQ8uzdefSvMSnZsiVMuP6uJxHt6dXNLF/KBE2776no
d5z4zIplTODZ8iYdXdv9U6hGmAkFY6156FW7Kl/XijDh7X7mDXRyu8fF26JM
eC5zuwQ9o7fStH45E3JjzW+ife69nXdHjAli3flVaJpqbMtdcSYIGt6rRRtX
QHijBBOWrEitQ9fJ/9B+sIIJN9I33EGvziuffriSCdb/Iu+hL/s4s16uZkLJ
xaTHaF4N4cd0RSZ8iTrUhOYonNNhKTHhjdnzRvQDyS/1nE2k/X1GDWjFtILA
gc1M8Oi6eRudueTA5sEtTNiiTa9Bn5zbXvpZlQnpTnHl6IHQs4eHtzIhNEOA
2z/rH6qrR9WYcFHfltt/pc952eMaTAhm6majs1z3209qMmGxBYc7fvwMweXf
tJgwX978Mnrw1enkKW0mPBI+FYeOf6g+IajDBP/q55HoTVVfd68FJkQrMM+i
T13yFtqrx4QnX3T90dIR8oE++mQ+vE/1Rrf693ed38EEaVqRO3qxzYGrNYZM
uOwmbIu+ZbB86qkRE2Rijlqi7bd27qN2MqH4X4wRukDUTHyJKRNWyC5QQ2v0
amUdtWTC5lvKy9DMpz/+RO5iwrvp/AXoiLs1B7OsmKA1mzmD8//FfwrSz62Z
MBKbM4R2JmnRun1MUB07/BAd2z9d1O/EhO/Tto5opa7bC347k/Vhto27Prta
j3stcyXzZfXnHWipws8Keu5MOJp2fR26xrP3Zo4nE2RvXx7DeEAbbai1O84E
kX91AeiwvkDh4/5kft23dUOv7th0IiaACfTCVmu0b1WxWv0JJsAqAW48mhuQ
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.4, 0.44260000000000005`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"\\nl=0 plot for F as in (4.5) with increasing \[CapitalDelta] \
(near critical value)\"", TraditionalForm], 
     PlotRange -> {{0.4, 0.6}, {0.44265179743079175`, 0.4438039713535667}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"ScalarPlot", "(", 
         RowBox[{"1", ",", "3.6`", ",", "x"}], ")"}], 
       RowBox[{"ScalarPlot", "(", 
         RowBox[{"1", ",", "3.61`", ",", "x"}], ")"}], 
       RowBox[{"ScalarPlot", "(", 
         RowBox[{"1", ",", "3.62`", ",", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665462754948207*^9, 3.665462791550626*^9}, 
   3.6654628961874323`*^9, 3.6654629286821127`*^9, {3.665462978837572*^9, 
   3.6654630071614695`*^9}, 3.6654634446852565`*^9, 3.6654654970243797`*^9, 
   3.671067193949231*^9, 3.671067459441594*^9, 3.6710834227201104`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.665461926965996*^9, 3.6654619737454295`*^9}, {
   3.6654620228717203`*^9, 3.665462026235386*^9}, {3.665462057441613*^9, 
   3.665462085412196*^9}, 3.6654622542829714`*^9}],

Cell["\<\
Uncomment this to get the most general function F for any l and Delta.\
\>", "Text",
 CellChangeTimes->{{3.665463626997716*^9, 3.6654636499210415`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"d", ",", "\[CapitalDelta]", ",", "l", ",", "z", ",", "zb"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", "\[Rule]", "zb"}], "}"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.665463565872464*^9, 3.665463566138101*^9}, 
   3.6654636232092814`*^9, 3.6654924209024773`*^9, {3.671067250483737*^9, 
   3.6710672543134384`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6654924238714576`*^9, 3.665492424226695*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpinLPlot", "[", 
    RowBox[{"d_", ",", "\[CapitalDelta]_", ",", "l_", ",", "zb_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1.`"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             SuperscriptBox["zb", "2"], ")"}], "d"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.`", "\[VeryThinSpace]", "-", 
             RowBox[{"2.`", " ", "zb"}], "+", 
             SuperscriptBox["zb", "2"]}], ")"}], "d"]}], ")"}]}], ")"}]}], 
     "1.`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "0.5`"}], ")"}], "l"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.`", "\[VeryThinSpace]", "-", 
           RowBox[{"1.`", " ", "zb"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["zb", "2"], ")"}], "d"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", "zb"}], ")"}], "2"]], "0.25`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", "zb"}]}], ")"}], "\[CapitalDelta]"], " ", 
           RowBox[{"(", 
            RowBox[{"2.`", "\[VeryThinSpace]", "+", "l", "-", 
             RowBox[{"1.`", " ", "\[CapitalDelta]"}]}], ")"}], " ", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
             RowBox[{"l", "+", "\[CapitalDelta]"}], ",", 
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", "zb"}]}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2.`"}], " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "-", 
                   RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                  ")"}]}], ",", 
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "-", 
                   RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                  ")"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "2.`"}], "-", 
                 RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "-", 
                    RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                   ")"}]}]}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "-", 
                    RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                   ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
             RowBox[{"zb", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "-", 
                    RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                   ")"}]}]}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "-", 
                    RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                   ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", "zb"}], ")"}], "2"]], "0.25`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", "zb"}]}], ")"}], "\[CapitalDelta]"], " ", 
           RowBox[{"(", 
            RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2.`"}], "-", 
                RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ")"}]}], 
             ",", 
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2.`"}], "-", 
                RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ")"}]}], 
             ",", 
             RowBox[{
              RowBox[{"-", "2.`"}], "-", 
              RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
             RowBox[{"1.`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.`", " ", "zb"}]}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2.`"}], " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
                RowBox[{"l", "+", "\[CapitalDelta]"}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "-", 
             RowBox[{"1.`", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}]}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}]}], ",", 
                RowBox[{
                "1.`", "\[VeryThinSpace]", "+", "l", "+", "\[CapitalDelta]"}],
                 ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}], "+", 
             RowBox[{"zb", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}]}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}]}], ",", 
                RowBox[{
                "1.`", "\[VeryThinSpace]", "+", "l", "+", "\[CapitalDelta]"}],
                 ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 RowBox[{"1.`", " ", "zb"}]}]}], "]"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "0.5`"}], ")"}], "l"], " ", 
        SuperscriptBox["zb", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.`", "\[VeryThinSpace]", "-", 
           RowBox[{"2.`", " ", "zb"}], "+", 
           SuperscriptBox["zb", "2"]}], ")"}], "d"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.25`", " ", 
           SuperscriptBox["zb", 
            RowBox[{
             RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}]], " ", 
           RowBox[{"(", 
            RowBox[{"2.`", "\[VeryThinSpace]", "+", "l", "-", 
             RowBox[{"1.`", " ", "\[CapitalDelta]"}]}], ")"}], " ", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
             RowBox[{"l", "+", "\[CapitalDelta]"}], ",", "zb"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.`", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "-", 
                   RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                  ")"}]}], ",", 
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2.`"}], "-", 
                   RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                  ")"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "2.`"}], "-", 
                 RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
                "zb"}], "]"}]}], "+", 
             RowBox[{"zb", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "-", 
                    RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                   ")"}]}]}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2.`"}], "-", 
                    RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], 
                   ")"}]}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
                "zb"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"0.25`", " ", 
           SuperscriptBox["zb", 
            RowBox[{
             RowBox[{"-", "2.`"}], "+", "\[CapitalDelta]"}]], " ", 
           RowBox[{"(", 
            RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}], " ", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2.`"}], "-", 
                RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ")"}]}], 
             ",", 
             RowBox[{"0.5`", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2.`"}], "-", 
                RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ")"}]}], 
             ",", 
             RowBox[{
              RowBox[{"-", "2.`"}], "-", 
              RowBox[{"1.`", " ", "l"}], "+", "\[CapitalDelta]"}], ",", 
             "zb"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2.`", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
                RowBox[{"0.5`", " ", 
                 RowBox[{"(", 
                  RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}], ",", 
                RowBox[{"l", "+", "\[CapitalDelta]"}], ",", "zb"}], "]"}]}], 
             "+", 
             RowBox[{"zb", " ", 
              RowBox[{"Hypergeometric2F1", "[", 
               RowBox[{
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}]}], ",", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 RowBox[{"0.5`", " ", 
                  RowBox[{"(", 
                   RowBox[{"l", "+", "\[CapitalDelta]"}], ")"}]}]}], ",", 
                RowBox[{
                "1.`", "\[VeryThinSpace]", "+", "l", "+", "\[CapitalDelta]"}],
                 ",", "zb"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6654636734870205`*^9, 3.665463731362991*^9}}],

Cell["\<\
Plots to show the universal behaviour of the F functions for l=2,4. \
\[OpenCurlyDoubleQuote]What we see is that all these functions have a rather \
similar shape: they start off growing monotonically as z deviates from the \
symmetric point z = 1/2, and after a while decrease sharply as z \
\[RightArrow] 0, 1. These charecteristics become more pronounced as we \
increase l and/or \[Laplacian]. We invite the reader to check that, for d = \
1, these properties are in fact true for all Fd,\[Laplacian],l for even l \
\[GreaterEqual] 2 and \[Laplacian] \[GreaterEqual] l + 2.\
\[OpenCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.6654641843278317`*^9, 3.6654642610241137`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SpinLPlot", "[", 
       RowBox[{"1", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
      RowBox[{"SpinLPlot", "[", 
       RowBox[{"1", ",", "5.5", ",", "2", ",", "x"}], "]"}], ",", 
      RowBox[{"SpinLPlot", "[", 
       RowBox[{"1", ",", "6", ",", "2", ",", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<\nl=2 plot for F with increasing \[CapitalDelta] \>\""}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6654638058599052`*^9, 3.6654639585703506`*^9}, {
   3.6654640455986204`*^9, 3.665464048680041*^9}, {3.6654642791645184`*^9, 
   3.6654642965863686`*^9}, {3.6654643298632417`*^9, 3.665464394503127*^9}, 
   3.6654645766356955`*^9, 3.671066921647891*^9, 3.671084625170209*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
6+0GEm8aaXbDL4SHYDseuvcBiVetUjvLtMWGwPs14I8scff1n1HcEkNItl/a
1U7i2+gGTz2njUNgXE0Z20DM4/qk8PDOIYyk8C2NIfFzWZVh+LTsEApO/r2x
n3i1mIRbyu4hRP13bJpG4u2GsqStgvuGsNkkmYeD+KBA4dORI0PIN3NWV2qh
cNTWxyn66BB+XeVtqSTxXDPv2Am940NYWXFMT4vY2JLOWaA5BA/T/xTPkfjv
8WH4YvDZIcRdDj9kQPJHup6Ayl6nISjqmm4fJ/kneNktVsHlIajqVh82JXau
Yj1UdRtCQPOESzPJV/8dyG3TuUbe/7ahcGolyScbzB0cfIZwYR0NWuUUUibS
Ql+FDqH/fJDkHpL/At4KQzpiCM7SMx2+hWR+rL370iKHcKw36mFnAQWZjjM7
8l8NofzvVKN7PoXk4rnStrdDOKUuFB5O8mtS0ImvfMVDEF+ipenxgcTv45lP
QkqH0PUz4m5yBgW7BRL7RCqG8MmqOKjzPYUt7hM+UrVD+Hn4hph8OoUEkzAR
FYo8r7lHdX0Kmd8dLNWrw0O4zb3WOYTUD6/qvF708g+jVCBY1eQZyRf/zZyL
EhhGpVwr13+kPnF74ix6TnAYfC9j2+ZIPXPUyDScLjaMquKBkqBgCuOjSqGV
UsMYSb19IOQhiX+8v0NSlIbBLZtM8XiR+OPopHvh4DC6jeqiEm+T/U9jrZQ6
PAx7obUaaqTe6gpvDX6pPow71H1V9xsU7mz9EBiiO4xVtut1sq5QqDvm6O9h
NwwnU7285xcoZKYMHt9jP4y7kxYbFtqRfMp/fsmPS8NoM+mSd7Qh89Wu4Wvv
OoyVoWdOKVpSELTbet/Ec5jMa8VArDHJPw8GvFSfDkOwNcWyldSHvyrOXeMv
HsaiwC7v+7IkPuqouhaXDiOUO8bi4U6SH7p3XHKuGIb6GomnAdtJvv3BZd5c
O4y/5S7dPtIU5NYlHgtuHYaeX3WImiS5v8dPIf6xYahYR/KuWkHW/7aA7BWC
IyhLPjz4foSOVdlX0ouER3AzRoFr3xDpj1VMk53ERtD05dtg3gCphw3kopsk
R5BiGsWZ1UP607vt94JkRnD+otK4aysdVoxNZ1aojGDrzrxIyWI6mEEFP5c7
jOD0tssdAqR+Zt7RyAl2HIGF6uj1g0F09FzuuLnq8ghW+JaM2wT8O5/4xS14
dQTrrVNl39yn44vQDuG1d0ZwaNq59M910u+9jFSSeTqCiJoDRxtJPzPy7sY9
9fwRJHBnhAn9R8dozJITNYUj6DjAX5opQ/w4dLlGyQgmzGpkTkkTu34I1awc
wYGX0ylO6+kY3zv25kzzCDS8ihnXBej4WnSu0XJgBCEqSa/jp2iYbNondGfp
KPS5Qj5Lf6KBw771194VoxhVENFqyKRhMc9l6tvKUcwWr3C0T6dBXCnpsanQ
KBoym+89TaThSJLg0oMbRvFVWV0v/BkNIXd+cnEojkKrRWXOxpmGXbtSR29Y
juL+y2E5hiQN++uP1ey2GcVC6VbBJDEaVG0HEsfsRiHtFf7WXpAGwygxayPH
UTgUL6vs5qPhzhL/nv3XRrH7aFuz9VQLmr/YUDOBo4g2M0/iq22BY4hkoXvu
KLYqLdtoa98C7SdmtvMKRpH5MM0uxroFu5/G8D8sGkVSzBdtmmkLfj+TtIwu
H4VHluHwutMt8AmXXFzROErie/BJc6UWhMVI6q7qH4XYq10BV/haUJomyUrh
G8NLiRvuCbHNiHtnFqSwfAxTNjtN+iOb8SA9RrGYfwyVCXx1Qs+bcTJD8iF9
zRiKVJX4bX2b8TlLUvbPujGYXuOVj3Zoxni+5HV1+TFEtgYttdndjDV1ksv7
jMdgZL5feFVuExR+0iZMTMeg7x7xWC+jCfpi91q7zMegfOJ15MPkJoTZj0S2
2oxhVwf3gZ6IJogvzZCpcR7DoGyOscCNJmw6deR4+t0xJDvMCsTva8LuJuu7
nilj8Ew+qSnyrhGnp4XsZtPGMCLxZ3JNQiPc1tVqeLwfg1BI2+tFUY3Idtop
4JI9BvZ/Eowa/0bs559+ZV08hpB7kWrV1o04rONbdJIaw1PVdeYxIo3QoSf/
EZ0bg6Om58bkH/W4GX/xdwPHOJKqi2z7uuqR4L5t6s68cTwV2K01V16PP2LJ
EyyecfT7GulTz+sRZ/VmOGPlOGhXrQz499Xj96/EthNbxuGVoXIhyL0OMcLx
Gdd1x1HjLJBwqqsGtaNW6TvOjGP1vG3pxsU1+JW/Ka3XYBxUgdoC9fganDCP
e3P0/DjYStphKY41mHwTG7PKbhw5p9yGMjlrcOzA68DkW+MYi+mz8RGtxvfz
Ly92Jo3jZ8bzUeVdlfj5bMFu07fj2LdBV9JEoBJTDbaz/anj5P152878qsBf
yAawM8aRucYzsyGnArwSJalcBePoU+b69BkV2Mjs+y7VMg6bKAUpwUPl0DeR
cnedGceBQ8uPC28sxdnn/gd/z47jhhq3ThZnKYwbvy66xcEG47/gIsnuElgq
fwwjJQEo4UWq5k9L4CxxLDd8GRvpfScqb80vgT/zwt+i9Wxw7E1MqqSKUGCS
6rP0BBsSbxVLI6LzkdNw8Xj3STbKvg4eqT6Yj0wl6RUpWmyYKtmX6vbmIVk0
NkLjDBvFt7Pvua/LQ1hb2Ht/MzYMGy5F1T37BFfNuz2L3dlodSuyp8yy4Vig
Et9+jY2TsRbL+qeycHE7p33STTaOT0U93R6QBTPe61Pq3mxkRhU1WmdmkrrU
admDR2wIlhYt2zibga3KRge449hInN90ebnpO2xKFZ7XmsBGZ9HCAfOhNEiK
t1XGvWHjMn+xcp5jGgT/aOuqvmMj6BrXT8ZUChZmH73gk8tGT9JnvxdL36Bn
h1zovBY2zE7M/WmuiUFn5DfjFjob2yPOD67Ifok2vtQNr9rYWMPl+zDgZTTq
R7akHepm47OW8uu21gjkxq+tuD1ExtNY/8Zw5mNkr+7y1xplY26NZ1qZURDe
+4Rpr2OzcU7tXpvn74dIMhfoLvzBRvNJjjPdR70R29z8KvAXG3pWkuank28i
+mCgrclvNvYUyn18Eu2CiDSNHTtn2RiKNRRfSrPAs7VLfv79ywb315Vizwd9
lP4HtlHPvg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
cicEz6Tn/vn3j4e0L+Y9w6ffafwPQdrl0g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmHk4lO8XxqVNlK2EskS2pJRoUblVEtkKSfXNUpZkaaOyJYUioUIlyU72
rZTIEpFSZuzrzFgimRnrvCj5vb9/Zq7P9T7zPufc5z7Pc66ROXfJ1J6bi4tr
P/nx/++j9sOUil8ntNgTgrcPzNRoDeVYnKOJq2PEXrhpi2wS1vK1hBWK6+Dv
NuZWM78CbN2zJuWluDl4L1mIO96rBNfqX08WpE+hw3WPDuVCDSijZXdsFaww
ZpmT/l3uCzQbd+Q9FreDU/5MuIRkIzbuj0v7FOsA3/tz969/o2BlBs+rKWkn
rGlM13vo1oSeuz0PLRTc4MLf+8UgrBUVLz5pPBR3x1jGVn1b426oU2/my5/x
wPCaytW/U3vwmmfrlo+x17HuyjW+UU4vHns8k2NLe0LTRq7OtpyO8yauq48r
3IJzzx63nev70R4oG/7L0Q9LS9bP177uh0Kv89JK89tYujb9mKbGAGLWyPif
ivbH0X0qjcqHBnHX/8HNEPEABHpzxH/sH8JHCYe3FiUBmHisNbLs7RBmirWn
ZM8EYn1vvxJl8zBcWNOXPsQG4aarrfA5wV8wP2PjOCodDINPNddUy0cQxtFM
eVcRjMUsRmuJ/G/UPRLpD7ANwcnyp3XHQn5jf129lWTSA0TMJx5oMBqFgoaG
hbFCGA4cjko4XM6ETaNA5LraMBR+Sd7nIMrCC+cRyk/HcHTEbFIddmWBh/Ij
tdw8Au6rDALU17LhszxQ1jL6ER7+bnjtpjwGO3e2eLB4JN68LisN0hvHjsWP
vQouR6KDN3ton8s4uB+rd3XVRqJvXY6uTvg4XuV6xm69HgUFL7Ua86ZxdI4s
lm6mRsOefleh02wC6Z6pfvObnuKzoYTkzasTuMGjT1fwf4rT2fGr/SMmsEYh
LMFT9RnsNDx0aPUTMLEVk5MOfQ6jkiIf0T2TkBorCdDrf46yO2X1lmaTGL11
dvCKZgwyf1r/EHedREhsYmr1cAwYgyob5V5NorpNZdPFw7GwmDs+FT0/CU3j
A1vf/IvDlSfZ/YUpU+Dp6Q/rPfEKMyL65sPvptDmHMRenv0K9wYUbnz4OoWS
anvL7C3xaPUVlNMZm4JlX4Y4V3c8/Huo7is0plG+6e+XyOUJ+MVVJ2R1eBoK
V4y8Nu1IQMhrhy1nT0xjeoHdaRqSgNOH5nfauE/jsaRGbMruRNwL4rrxMmca
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
qdX6HyyJY+k=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"\\nl=2 plot for F with increasing \[CapitalDelta] \"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {1.530609300615915*^-7, 1.4630306811133795`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "5.5`", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "6", ",", "2", ",", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6654638502715034`*^9, 3.6654638899544015`*^9}, 
   3.6654639263740964`*^9, 3.665463959777681*^9, 3.665464050934166*^9, {
   3.6654643248598623`*^9, 3.66546439665487*^9}, 3.6654645793732243`*^9, 
   3.665465584178523*^9, 3.671067465021645*^9, 3.6710834286490517`*^9, 
   3.6710846290389733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "10", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "12", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "15", ",", "2", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\nl=2 plot for F as in (4.5) with increasing \[CapitalDelta] \>\""}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654644136691246`*^9, 3.665464423822593*^9}, {
   3.665464581078465*^9, 3.6654645812815824`*^9}, 3.67106691631789*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
dy5xC6C3PDTbx8eE+ySulJRBTgP+B9MTgS0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
EggdoeSh5AmG/wHxJhk5
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVl3c8lu8Xx2WUkTJKRDbJ/haS5FwRIsqIkpEtimRmJDKSFZLsPTLK3nvv
vefzPPZ+KjMjP7+/7tf79bnPucbnXPd1HzbD12omhAQEBOVEBAT/fyqaLPXV
LmtIZVv4Pjn0m4fFn5qGGAYRMHLnLuRZrEJ0FENBBQz3IIndcxW+tqGyardX
jtwP4dSIL3HFei8SvHUhNZbhMZy3FNSqujuICGiXvxyzaIFpTqpF1sEw6lur
+mDArQcHywWUWXfGkKpRW6lBuAEo7Dg3ebFMIIneG7mhDMawR9vOmZ4/iTju
xKU3xJjC1scXdarE0+hsJmn8Fos5BOsMPJ5ixqAtOttwruSX8CYy75UsCRZN
eU4FanJbwb5OvcNpMywy2kuub3hsDT7qy0q2JVg0IqglpRP+BrQK35uO7GGR
ksm58q0RG3iwxD7KKoBDtdENooEMdrCNsaj/o4FDIv1v87i07aGEw067wA6H
MkgFBapjHGCPz78z3A+HmGH2u+a0I7AJKJanR+BQqH0EJ57FCQKKhSm743Ho
dLZywkcDZ5jnnTEZTMAh5xlCJtZkF/AcP/J7FYNDG/Sl30rnXOFuFx/5jS84
ZPTIklaV2w1uCwXdzPfGoVFv9s/LZu+h+ZpxtvHJ+NzTL0nqHrsD1NHolTzH
IX0nOZnAbXe4+POqAcV9HIq6wOahFe4BmZ55ZiUn6xnMOajmuvkBzpVfOENG
jUPnHgwf/h75ALObVD2yf7DI08P/rR+DFxhu/XW2y8GiaibTYs1yL8gL2bvR
549FeyVoi13bGxzubZ3/ZYpFrza2X1fE+EBEgvb1i5ex6LG2vtkayyfYe14h
JY6fRtyiopoPuYPAtdw2jPH+JDK2wzN8YgiDwGG+UTPBEXSDKNQ53zoM3N1/
ZRNODiPCUJGJiZYw0JxQeejrN4zic5xiBB2+wtnMpu/PV4bQ+AoRy2B/OCia
4cdtiwbRIwN6TpaASEhcylUKd+pHzL/Kve7PRsL1R7PVumL9aM1Nd/6NRBSY
mYcz0271Ib+YpLTGpSio9Zg0QTZ9qHGE/5qFbAz8Ywy1e+XUiyQe3hUs+hcH
mPGBCmrDLkQ6NRs0rREPUy+j9DR2O9HISx/8mR/xYLeXV8wb1InKG02e/hBI
gCJf2ib72g70dCaTgWAyAbaNzjMfirWjmmuHbWFnEmHbdkRRcrQNcb9Rdr52
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"\\nl=2 plot for F as in (4.5) with increasing \[CapitalDelta] \
\"", TraditionalForm], 
     PlotRange -> {{0, 1}, {0.0006646679198438853, 36102.63743694666}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "10", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "12", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "15", ",", "2", ",", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6654644355902233`*^9, 3.665464593160851*^9, 
  3.6654656062622585`*^9, 3.671067495741581*^9, 3.6710834943808107`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "6", ",", "4", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "6.5", ",", "4", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "7", ",", "4", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\nl=4 plot for F with increasing \[CapitalDelta] \>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654641139009004`*^9, 3.6654641429357443`*^9}, 
   3.6654645853942127`*^9, 3.6710669096197357`*^9, {3.6710846706908593`*^9, 
   3.671084672172185*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
sVCozplw5XC59v8Ang36Pg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
UpLakKPFRPySsErAlVlkCaTGql9iwiN+w4KX0Cwy/G7e3H6FCfUr7qlpbLNI
nheSnLjGREyudkw7jdwnHTHv/W8ycdtUxlkrfgbPz+i7XDNl4omuzbUA1xmE
fNqEPeZMvKKLPC69NAOf8OC6+jtMsPvtHhldOwNHzaf0NS5MdF4t0HxoMQ3b
0hPpna5M7LPNWxF5bBpWMsvuZLoz4WU0LGqyfho317rNqXoyUcFlTCXeTuG6
6+ESPm8mSnNHNmc+msLlMdaTUV/S/uz7/hH1KWjW2PH4BjERfeW5U2//b5w/
JNumH8rE9Tv3NzzI+o0zaeMxkhFM5PlLdjo7/IaS5y2JmhgmCJ9LimoLk9it
bHCMI40J1YnNEU+ZpC5y+Ze3ZzARmj+gedyYCRHBjpq010zElRyT+tDCwNYF
7Yun3zJhWO4ztillAhtvr+ff/IGJsPtv47NXToCns4E6+ImJ1i67F+dujmMV
5extryImls8qmFRx/QL7zlV7dUvJ32e9eyKnP4bFiEqWWAUTLh1ru0rjRzHj
oPS46gsTteK15gp8I6DLykcv/87Eya98H4cKBtAd//v69zYyH5XlYT+b+tHB
nSuW3MGEzEcuZ7HuPjT+2vXmeC8T3G9sXdM7aKi7MuzIS2eSe0V1RDeIis+1
KUf6+pmwknBLkr7Ug6J0oS8eo0w8Tu8ueBLXAcrmHn+tcSa6w47o/tryA++9
YrSFybzkNV68U+/wHTkzl7b+/s0k77nZipnsb8g03tRbNsOEt9mrju+e9Uht
aUkOJph4f3MX//Clz0hQCbYwnGei+dcBRfGAYsS+UZeVW2RCQbdl4MdwDiKF
uGaXlphY2mfz1Xpvs9L/AHcWqVU=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"\\nl=4 plot for F with increasing \[CapitalDelta] \"", 
       TraditionalForm], 
     PlotRange -> {{0, 1}, {8.035666592004417*^-7, 1.5005744479153764`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "6", ",", "4", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "6.5`", ",", "4", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "7", ",", "4", ",", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.665464146861828*^9, 3.6654645960267735`*^9, 
  3.6654656114857435`*^9, 3.671067502821271*^9, 3.671083514113962*^9, 
  3.6710846761524496`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.03", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.06", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.09", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.12", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.15", ",", "4", ",", "2", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<l=2,\[CapitalDelta]=4 for various d \>\""}], 
   ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665464630331095*^9, 3.665464752672619*^9}, {
  3.6654648044944057`*^9, 3.6654648071986837`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
6+0GEm8aaXbDL4SHYDseuvcBiVetUjvLtMWGwPs14I8scff1n1HcEkNItl/a
1U7i2+gGTz2njUNgXE0Z20DM4/qk8PDOIYyk8C2NIfFzWZVh+LTsEApO/r2x
n3i1mIRbyu4hRP13bJpG4u2GsqStgvuGsNkkmYeD+KBA4dORI0PIN3NWV2qh
cNTWxyn66BB+XeVtqSTxXDPv2Am940NYWXFMT4vY2JLOWaA5BA/T/xTPkfjv
8WH4YvDZIcRdDj9kQPJHup6Ayl6nISjqmm4fJ/kneNktVsHlIajqVh82JXau
Yj1UdRtCQPOESzPJV/8dyG3TuUbe/7ahcGolyScbzB0cfIZwYR0NWuUUUibS
Ql+FDqH/fJDkHpL/At4KQzpiCM7SMx2+hWR+rL370iKHcKw36mFnAQWZjjM7
8l8NofzvVKN7PoXk4rnStrdDOKUuFB5O8mtS0ImvfMVDEF+ipenxgcTv45lP
QkqH0PUz4m5yBgW7BRL7RCqG8MmqOKjzPYUt7hM+UrVD+Hn4hph8OoUEkzAR
FYo8r7lHdX0Kmd8dLNWrw0O4zb3WOYTUD6/qvF708g+jVCBY1eQZyRf/zZyL
EhhGpVwr13+kPnF74ix6TnAYfC9j2+ZIPXPUyDScLjaMquKBkqBgCuOjSqGV
UsMYSb19IOQhiX+8v0NSlIbBLZtM8XiR+OPopHvh4DC6jeqiEm+T/U9jrZQ6
PAx7obUaaqTe6gpvDX6pPow71H1V9xsU7mz9EBiiO4xVtut1sq5QqDvm6O9h
NwwnU7285xcoZKYMHt9jP4y7kxYbFtqRfMp/fsmPS8NoM+mSd7Qh89Wu4Wvv
OoyVoWdOKVpSELTbet/Ec5jMa8VArDHJPw8GvFSfDkOwNcWyldSHvyrOXeMv
HsaiwC7v+7IkPuqouhaXDiOUO8bi4U6SH7p3XHKuGIb6GomnAdtJvv3BZd5c
O4y/5S7dPtIU5NYlHgtuHYaeX3WImiS5v8dPIf6xYahYR/KuWkHW/7aA7BWC
IyhLPjz4foSOVdlX0ouER3AzRoFr3xDpj1VMk53ERtD05dtg3gCphw3kopsk
R5BiGsWZ1UP607vt94JkRnD+otK4aysdVoxNZ1aojGDrzrxIyWI6mEEFP5c7
jOD0tssdAqR+Zt7RyAl2HIGF6uj1g0F09FzuuLnq8ghW+JaM2wT8O5/4xS14
dQTrrVNl39yn44vQDuG1d0ZwaNq59M910u+9jFSSeTqCiJoDRxtJPzPy7sY9
9fwRJHBnhAn9R8dozJITNYUj6DjAX5opQ/w4dLlGyQgmzGpkTkkTu34I1awc
wYGX0ylO6+kY3zv25kzzCDS8ihnXBej4WnSu0XJgBCEqSa/jp2iYbNondGfp
KPS5Qj5Lf6KBw771194VoxhVENFqyKRhMc9l6tvKUcwWr3C0T6dBXCnpsanQ
KBoym+89TaThSJLg0oMbRvFVWV0v/BkNIXd+cnEojkKrRWXOxpmGXbtSR29Y
juL+y2E5hiQN++uP1ey2GcVC6VbBJDEaVG0HEsfsRiHtFf7WXpAGwygxayPH
UTgUL6vs5qPhzhL/nv3XRrH7aFuz9VQLmr/YUDOBo4g2M0/iq22BY4hkoXvu
KLYqLdtoa98C7SdmtvMKRpH5MM0uxroFu5/G8D8sGkVSzBdtmmkLfj+TtIwu
H4VHluHwutMt8AmXXFzROErie/BJc6UWhMVI6q7qH4XYq10BV/haUJomyUrh
G8NLiRvuCbHNiHtnFqSwfAxTNjtN+iOb8SA9RrGYfwyVCXx1Qs+bcTJD8iF9
zRiKVJX4bX2b8TlLUvbPujGYXuOVj3Zoxni+5HV1+TFEtgYttdndjDV1ksv7
jMdgZL5feFVuExR+0iZMTMeg7x7xWC+jCfpi91q7zMegfOJ15MPkJoTZj0S2
2oxhVwf3gZ6IJogvzZCpcR7DoGyOscCNJmw6deR4+t0xJDvMCsTva8LuJuu7
nilj8Ew+qSnyrhGnp4XsZtPGMCLxZ3JNQiPc1tVqeLwfg1BI2+tFUY3Idtop
4JI9BvZ/Eowa/0bs559+ZV08hpB7kWrV1o04rONbdJIaw1PVdeYxIo3QoSf/
EZ0bg6Om58bkH/W4GX/xdwPHOJKqi2z7uuqR4L5t6s68cTwV2K01V16PP2LJ
EyyecfT7GulTz+sRZ/VmOGPlOGhXrQz499Xj96/EthNbxuGVoXIhyL0OMcLx
Gdd1x1HjLJBwqqsGtaNW6TvOjGP1vG3pxsU1+JW/Ka3XYBxUgdoC9fganDCP
e3P0/DjYStphKY41mHwTG7PKbhw5p9yGMjlrcOzA68DkW+MYi+mz8RGtxvfz
Ly92Jo3jZ8bzUeVdlfj5bMFu07fj2LdBV9JEoBJTDbaz/anj5P152878qsBf
yAawM8aRucYzsyGnArwSJalcBePoU+b69BkV2Mjs+y7VMg6bKAUpwUPl0DeR
cnedGceBQ8uPC28sxdnn/gd/z47jhhq3ThZnKYwbvy66xcEG47/gIsnuElgq
fwwjJQEo4UWq5k9L4CxxLDd8GRvpfScqb80vgT/zwt+i9Wxw7E1MqqSKUGCS
6rP0BBsSbxVLI6LzkdNw8Xj3STbKvg4eqT6Yj0wl6RUpWmyYKtmX6vbmIVk0
NkLjDBvFt7Pvua/LQ1hb2Ht/MzYMGy5F1T37BFfNuz2L3dlodSuyp8yy4Vig
Et9+jY2TsRbL+qeycHE7p33STTaOT0U93R6QBTPe61Pq3mxkRhU1WmdmkrrU
admDR2wIlhYt2zibga3KRge449hInN90ebnpO2xKFZ7XmsBGZ9HCAfOhNEiK
t1XGvWHjMn+xcp5jGgT/aOuqvmMj6BrXT8ZUChZmH73gk8tGT9JnvxdL36Bn
h1zovBY2zE7M/WmuiUFn5DfjFjob2yPOD67Ifok2vtQNr9rYWMPl+zDgZTTq
R7akHepm47OW8uu21gjkxq+tuD1ExtNY/8Zw5mNkr+7y1xplY26NZ1qZURDe
+4Rpr2OzcU7tXpvn74dIMhfoLvzBRvNJjjPdR70R29z8KvAXG3pWkuank28i
+mCgrclvNvYUyn18Eu2CiDSNHTtn2RiKNRRfSrPAs7VLfv79ywb315Vizwd9
lP4HtlHPvg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
UoW8/UUrMPfii6pHLA3px6ZnrSsr8FUg6JZ6Ng1iL/9m7qFVwEaoLjjmMw2+
g38cNzAqECm2RJArhwbjW+MdLeMVuHct5nlxHg0/EofzjcQrEbluOWVjCQ1b
Zxg3cbUSnQ9Pc7vU0pDwqnR2rXQVWE5JH/YzaXD2O9oJxSpwhMmsPtxJw84L
PSXn1KtQoDoZcLSLBorcwvvJBlUwT1r20byHhr8f967SvlKFpqfNAgZsGvQL
izddLK+Cmc+bsu+jNAjFGS8JoVbBrX5gWckPGjp9u4bSWqvgyfXmTtJPGq7s
50z7N1qFhPCXc25jZL3r9miGClcjOnLi3M8JGsbaCo9kXawG69V5tyczNOTn
H9ne5laN42bS58/N0uAfyxRccLMaC2PWxyrOkfU5x9F6MKwaD557TxZy0KE7
iPMdX6ohGzt7pp6Ljmd/8z24l9bg64LvgVGL6dgtlBdnklwDs87Ip1yr6Vj4
SNBJJ7sGxWf1GZHEFascd6oW10DpwI+PCoJ0HF65gbb2Ww1EF3/jOCpEh+VS
H+6umRpsO3zWIViYjhucOrbOBrUkLhkV5orRoeUTrXzWrBajRqEumuvo4OSY
4Dh6phaGGx2/fiEOmEmIVL1ci5EtwSc+rafj6SRv9WxULbiUGq0ixOnIHKnZ
GjxExtPmX7ZGio7rDtJTNydqsWoJR7APsdaQV5kzRx30tXaWDhB/7Vc4fXR1
Hbb+12j1WZoOWk9oqKhmHXbkGVzdv4mOXy1HxxID6xDVf01TVo6Mb/6h4Pmj
OojpXm67SXy9mTsoOKYOyiMOejTiBd8ypVw+ke9zrB7c2ELHCqrwMbXWOtDb
XEZy5OnYWt6WXSZXD5cH3su5FekQGrk0HKpSDw+p5npDYg7BaYmTu+uRWq2g
9YSYdlYkcNS0HlJOHFuklOjwnDU9JexTD9cjIs4K/9FhI937sCuwHn83Ha52
ID6i7172/nE9dAOyme+IpZ6FKe55X492G7ndUtvoqFGpX2DXVI/KNRenubeT
+VhY7lDuqkcKr6TxTuJY32G72aF60AP+OjoRf2Fz2+ktoODK+h4OGnHIDqnG
diEKpp/fSw5RpoOr6tKwthgFkFh3+gvxtVOfeN5KUKDV5NbZQ3z2jramqzwF
r1ZLnNmhQodKg1X8Im0KPh+3dq8mTjr/tuDSfgpm4n61DBOv/zv6naJPwR2D
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
PcQdenfDVggwcViPMbuXOEPBQT5kNRONSx7l6BIHrTpaxreGiXstCQ16xOcm
NazuizBRPSWwz4B4Z7vE1CIxJl5eb1puNP/8inkj7qxnQkntl4op8UDC6FZO
CSYobVaZ5sRPnfPOzEgz8eSuYpk1sZPp6+nrskxMMO+bXiTW1Qh8NCnHBG+d
PJyIf3OZV44pMpHXpiXhSVzDhrXLNiYCcxNEfIlf18rMjCgzYfj+gH0AsfGT
caUBdSbSeOXEnxFv9mytuqDJRHCUlU8cMceZ4nO9Wkz4hBRoviNOkQt9ytzL
RNW7rqI84qX5WziaDJjIvbaJmzX//PTF0wOOMOH9/pTCGHFd62pbLRMmZrM8
iuaIH/ydqY8/zoRu0h7ptWQ/CqhQYtytmYihCXbN79+xklITWRsm+oJ8zK2J
acafedpsmch84q/hRvzIOc5pryMTXZJa6hHEwu/dIeDBRBH3MtlW4r8aF8e+
3mAiXnXd4DBxS+WpNx43mVC+d2nNAhJ/nrN0l3f6MjEnGfZOlnj9RhFGSghZ
372hhZ7EUs/ybhq8ZqJ9KDlUjcRD7s1p2xa8YcJCXbjTiLgvK6EvPZEJlUWN
kZeI39AfGIqlMLFsweTeWGK5lWfXD35mYjvHUo9lJP4q+S/K968nz1/2m+ks
8co10y6aDUxY/kuUXE/i+6/4UekfNCZOXHl2TIv4U0lzsFkLE+dPXx/zJt4x
l3RKppeJKMuvszwkP+y6cnimZIoJedE1+7fYkPxpx76hN8OEdpXjgCFx6mmf
qbo5JvxxoM+VWFLv05/vCzuhrbOFlUPMK7bm1+iyTkzuMuIzvkDWt6ijT3Rj
J6TizlWGkPxlz+9IcTvUiVC7SDc9kg9lOHkO/zXoRMXLxr9XiRkTMbU3j3Ti
0DdPegKxMZNadd+0E/In3gVxk/yq9knla8zpTjwIPPanjHih+cznardO1JeK
vjYn+TnqddCrjVGd2Ho3wCeP5PvTe7drMl50YuTe7L5pYsmu77RnLzux78Im
W3VSL7zdsGmRwJtO6Ix112QSpz8rsuVI68Smi0v5Mt3I+x06sbW9vBPZe9X+
K7tM8r2nVfbjsU4UJoXVbiH1jaWpcu3iQ13wjgi4zXGH5B9Rg9hsgy64r90o
aEJ8pvO824UjXfC7UzERT3zO4YnIV9MuLO7RTtD3o+Gi39T5W1ZduFkomRJ9
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV2Hc41V8cB3CpEKVIosgIScRPSJK3lhASiYYyMouECmmgKSukSCUjFVkR
IXvve79Wwr3EtamUhtTv+Ifn9Tzfe+8553s+4xwJm7MmduxsbGzT5M/8f327
YVrJiJmWbKyfwPVnplpDaYdtGMIq4DYRWjO+3QCCPG0hb4T34NodzbYipxPY
vE0g6bHwIXDWpwg76LhBo2VLRrjwKeT2i2U6bvdDyaNy1WBhT4Qw1vIaTNxD
gN9dr0Dh6+Bz/psZJxGPIhH7t4fzr6PQs1a0NyMeP3O1v0keu4HvQa0qiUjA
mcnvZwtib2LRkRVqlccSceiYlcO42B3c7BHfrxXyHDKqqoeNZELQ3B/++PrH
VzjlOSV8RzgSXx4aR2vdzcSWheE+WW6R8JKzHDRvyQR7uMrHj9WR0L0UJCy7
KgtP071jN1+4D6eNRXKTj7PQNbpQrJUehZ0Dbh9Xp77BAWshKbGgaNx87Jos
UpADDaOdm3P+PsGZ8L8LhpLegavnU0iv2VOwtWa62/a/Q8fpm1Ocr58i0FCy
4Om6fORX2Fm8VojDyzXnZy2i8mHR/0qYrTsOeg2iuu3+BQgXVY1NUo9HseTK
d9uN34MrUu/Z5y+J6GHL+H3gZAlm1ftmn61Jwu5gaYUVXiWY7PE6bLo7CXwR
4VvywkpAbXjB8zYyCd2PuaVLSkvwpIDjwqWtz5EdvMgtS7IUKp/K9TkuJ8Pn
u/knNWYprJS1vq3leoUrwjlGzvrlyG1R3rdvXTq+cbw4f5pZiZCRcV15nXS0
mPKOe01Xwp49WZ/PNR1SrXV+nhxVEFRZa/TxfTq2vQk5qCZfhYJ6v1e5mzNg
sx1OrAtVWKvonLm/KQMebZMOnEuq0fVdo9hjWRYu5sRmFYvXQIddSNteIgvP
5kr9Mv+rQRbv9xIL1Sw8NgzyjthVg8AN6WU7LLNgFP5nneypGmgcWV/F+ToL
+0Pzmfef1yC6kKfxkcEbJN/q/RcqWwuLgO6u8rvZkGS/K2YtUYcVTBl5h2fZ
cKDvlsj/rw61mucuc+dmYzDjbDD7rjpozCwWP9ifjX353SxrmzqsdVK061XP
Qeb3F3bH4+vQa+Q/9XMwB7dWewYbidXj1BrZRZu1cyFVx2EZsawBIhfdzWhm
uZj2vbXs59oGtFGFzz1P54LNbRufkVwDdIIP6hVE5eKrcKB+k04DNrBdCtGd
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
ctovQjSITdtvqB8fpUHGVuugC3Fc5PMHLt9o2Pl2JqqFeBvfsFkYFx0CXnqa
IXTy/dyn6W1KdOw4pPGKRZH4fy/4Vl+NDi1liuJrpcBwK4su3k5H6gdfOU1i
kw5h65c6JO/JbbINIVZPrJnyPU6Hvd3Quo1tFNzNPakv1iTP6P5rNCRO4RbP
tXegY0zfPusc8bpzF68YkzyaL7BFLJd4kZbMMqnbdKwLFE5Sbyfx84X2+WEw
yYPbF6w1J76YeLl1WQQdQwd1mzyJR7nbHv14TMfDw1OfXxNLFV27eiaBjsYu
fZtaYstz8rZ9L+jonvwjMEDc0hEgV/+GDuM9h3at7qDAfVeRV/sdHQ63p4oU
iXdrffySTfJshE3jtX3EbxOV3z2ppePWXtVOT+LYc3373Bl0KB9v+lxF3C4V
vGlogI4tBY+yPhAv71RffnyUjkMVNqVjxP5aYe17v5Pf806tXdZJofDL9vx8
kmc7awQqRYm/Jw49VmSjcI9nF58CsSMP7IR5yLoeTn+qRxxfNKobsoLCyVfN
nw4TfzwXJb9QkMKhu+d9bYkFpHet8FpLoeJiqPNZYqPOielxcfL8Hp50H+Lb
d6M7rGUoGIu1698gLtXaW9C+icR1cLdWKLFKUqx/iRqFgRn9Lc+IXS107VU1
SR7Ku636kjiZ55veq50Uyp+8jsggZhY9VRDbR2F2PN4ol3iN+36+SJKnP+46
6PCe+JD0j29cJhScH8X1lhEHd8Z3XjYn62LglVNNXHXXqPDrcZJ3OYvH64nZ
SEQ72JC47z56o5lY42tSQLcDhRHV/67RiT2SDjocdCF5plumt5U41WJOv4rk
ZekZsbh2YhbPy83bvUhe4WKr7iAWKz7En0Hy8r5vL007iS3c2WakAijozf3T
mXe4dOqH6NsUnpR/ejb/fH2n+XveEApd+9Ts5r/Pv2tolXMEhc2ZhY/mf0+9
+6Jr5UMS990fd86PZ7KHs1r8CYnLcXuL+fEmMh6I+SaQuuaqxJyfz9G+DV4d
Lyj8d4K7a36+Kz6REwjJm5+lqnTK5+c/sG9jyBtSFx+obCgi9mV1+I3kUbD9
I+2bR6w87NC1p4iC9SJnnSzi4ZEfynEk762nN99MIX4yduvuLMlbAd+ltRLn
13ti9cBhkkcWndVwiSXmnkrWzCJxezOtSyCSuOTz1vvLPlB4GkGp3iVW+Gau
U/GJwgd2tqGLxAPfh56IjZDnrtV5uRDH/Lj4w2eSrFPw2ls2xByzD17894vC
DxFvkf3z+/fPhgXBf8k6rxdK0iJ2/5t7ZHhhK8yLbF7/R9y7oJP7KW8rbqUJ
awsSRy50tP29shV3xAUaOIn1F/8sMBNuRbJNe9fP+fjiEnJZKtUK0ciagPn4
CV1u0ey9rRVFY0yh+8Q6fMMb2rRa4TAT0+JP/Iff65rSnlYIaWzncyN2FHz4
35BRK7ad3qKkR6wt2hlx6FQrOlM4f38n8T6zznE83akVU+5/ljGJU8V/7uE5
2wqTF1TGfH4QkhKaKfVuhdp50eePiL/IWVgohrYi5t9rWw3iF/LDGYGRrXA+
oLdQgvjEZq8lrOhWVGc928pJXPffw/zYxFZMq7hY00n+ilfvFOHOb0X/UGCj
LbGpjkXfwEAr/g2tTPYg+TF/5X/Nn0ZacYGLxnuYWLJvyfv+yVbsfsy/Xp34
66WCh8yfrXj728p0lrzHsMx1xt1L2/Dcuqr/MnGDyGARpdKGyJqj6p4kX++Z
Phdbdr0N9JNPb28k9SC1RD+w9E4bvusNhrITrwxZ71US0gZb5bFDH0n96Jdt
My162IbmkzprgoivnVDnyU9tI+fw8LhRso/e1/71zmxtQ1HF2mWxpF6pxd01
j5NqR+L2KiZF6l9G6VVvHrl2HJXelfqMeNMnj0cXFNsR6uOleZZYXOY4w0Cj
HavOXn69hJgnVd7h14F26Mmn9W8n9ZSZ23jB5FI7Dm84vi6qmsLd5uVRi+jt
2LL5z7A0qd/MvxGtjlc7YOLl3kgj9X9QrzlBsLwT1lsMg/RIHGVEM7xpEl14
Edng/4bE4ZmNIl3KG7owV2aX5kUs+85CI1K+C4UuvdM7iJ920n4f3tqFhQ2p
jTWPSf+yuuJSt0EXMp9YVzJiSVzff3F56GIX+Nl2LFn5iILcvXN+c41duD4e
8DXsAYWk2wvvbPT5iOvLPUp/kf6Mf+D2lc1XP0JPzoetnvgaeD23XP8I2xv/
2cUSH50ROrkj5CN+LPaIA/HyU5tVD8Z/BN75f7oVSsEbR/q86j4iNUWyUozk
HcOZtG01a7rxfMUfFVfSL+YfVFFsFOsG3MsC9hDLvn4nRZfqhqvRx7k1xOyn
KpZ3b+7GosqXnjWk38ylfRic2tUNyTPK56SJJV4vCl99uhv3j/6rGSJ57rvt
0VH7gm7wRdmzhd6kcGHl7MrOkm7IDEz/cyCeKXu0Q6+qG7uEOdR3zluiJ2wT
rRsdyx1Nvt2g8JNxcutnVjdEj39QsST+fczuujd/D3Y3KrVtu076XR6OtNHV
PbAYGXMTJJ7Nf95xTLQHopUV+6ZJ3v0jPCynJduD7/dOJ78mnutwprFr9cCv
tVhZmpjtkNu6IKce+OxeFyPmT9ZzIZ/unGsP9Pcf//XPj8KCN5nnXD17sEhn
cRSTmJ1/usL4ag+kRSRuxxMvbDl/etX9HnzZqGi6kZjD4FLek5IebK2Uebbr
Gtl/e26aZK7uxfamg18Sr1DQLD7LVyXSC6eWS/UhxK4aR1q6JHpx+bJrrxcx
XUneaJF8L4z0/qUZEseI0vXMtXvBuv7nzy9SV2R/iO6cc+zFXgVRS0vio+6c
bPyuvVh/YaRBnzho4nORjEcvNvW9uqBOPPWpXNP4ci/CYo29BObPCy1O6gn3
eiE4O63a7Evi91WOol5+L2qe6rw4QHxB+umkZXEvjk91FWkTv4i7/dq9ohf7
VI6sUCbmeXBsU2xTL2Shd2oVMT1gwYap/l6wPbOh9V4ideDf6ODC4V7ccnxT
QiNW82lNFJroxYIa07EK4mi3ZMldP3qRypH1NYXYytJw3X0eBnpcxOp9icM7
1XpermCgwG5j1DniClPx2KJVDGjXdMXaE2/QnxYeFmPA/skxy4PEk2rRq7ar
MDClykzZSCye5d96YBsDGan/mYkTmyiciTilxUB1lKfGauKc9eAL0WXA6c1U
3mJi3xWDS/uOM9B+7f7NQR8Sf11Z2t3WDIQ+2qHaS/wh4Zpnhz0DrxULRTuI
1baKdDe6McBz2Cy2lniAbXR57Xny/VmXlMuJI+pyd1f4MLBJNIz9PfFnS9OU
/OsMLPV/aJxJ/GSDBCPnDgOyGVFNKcSGXyb5M0MYeHDowc3nxK+uB/okP2RA
UD0rMZbYwsgiLf4xGe+qNu6HPvP9tkz/43gGZJJ4UiKIbVNK9SJTGfAcKou+
S8x/PvRyaCYDlvH6w7eIS7QsMwPfMrBP7JvbdWJXrk2DNwoY6Lcp2+JHLEL/
KeRXwsAi7TylK8R1j6oMfCsZYDfvdLhE7G0Xee1iHQMNK6U/eBHLKtpkuzcz
IJAZd/0CcftPxWGXVgagZujsSXy9bG6t0wcGRr3kA92JtwTVHzjVywDXGu0B
N+J+s+iAk58YULp7x+sscZiYQ+7RYQY6OLj3uRJrjaiMmU0w8P1B2QEX4oks
drGDXxnYIpgdfoY41rfFxOAHA+kSjOXz1td5cnPfHwayt+6pPk38h1PN8hkb
E1vuf8qbd+u4yI91C5loUHo/MO8U2sJ7sYuZMJ5t0Z//vP/bUbk1XEywHqwb
m/eRR7SKB9xM5PgkVc7/vtK1vBOrljGhzDzVNT8+TrunP8OXMyHYfWzj/Hx6
9W6Gr+BnIkbvTtY54pzNLvIhAkxE08bOexAHrTxUxbOaiZYxP4/zxKd+aljd
EWbCtFsv5SLx9h6J3xwiTNx4s1PUZ/79lXFFXl/HxO2DDrW+xKPPpxTYJZjw
tM5Lv0r80O299Zw0Ezfv0uVuEp81S5z1kWVC+9/94jvEOhp37/+UY8Ikxjsk
mPj7wiO104pMWDVGdN0nbhiG7TllMr6N5eYxxImNMnOTKkzYqi1a/pTY5ME3
pdFtTAQVvtr0knij78c6B00m3pzivJdGzGZddmpQiwm9NaeUsonT5cIeMncz
odu7RLSEeGnRJrYOQ7I+391ed82/PwPx7EBjJkRenvbrJ276KOCoZcrEs/ce
0aPEob/mmpMsmHD3Drw/Oz9/1ZannrZMUBMdhfPxO11eYSprz4Tznr0ZcsSt
Ju84ux2ZWJ57fkiF+L5b/NndrkwIRX4X1ycWSvUEvzcTqurbii8S/9Jwmq68
xMR2xzvNAcRdtZbJ3leYuEvTXh9G/GhIZ3lfABP/SWZFviRet16YkR7ChAbn
xicMYqmY91cME5mwMaFrWZB8t3hjlvKCZCaaHRdddSRm5T5nZb8k++VnxgJv
4uS2UCORdCYiklWaYojl+GzWjb0j83v9za+PWOk2R9HtZibKK/p2XyL5mG/1
7DlNOhNG1wUTQom/Jk1Jf25lIl4ofHci8ZvyzmDzLibOiHDqNhGr/XtlKTPI
xPnLPselSX3YceHAXPlvJlLebXrKIJ5xHr6kN8eEI2f8qRnijJN+v5v+kf0f
9sJ62VXS7+m9+fFhUR/yr/GxaxJziaz+OsXbB9OV3z88Im4t7WWtXd8HlX/W
dDtSv84sc23x2N+HH9oROyRJfZRh5zzwy7AP5559qQYxY+Zp4xXjPnQZ0G5a
EpswaXV3zPqguSvxWTSx+hvVyqcn+6Bb5KMrQOrtoiNz7+o9+nC2fM/OlaRe
xyYGJayP7cOa1HccW0n9P7l7iybjSR8o/uJRS2LJ/g+tMc/6kGND57xB/EJs
Awd/ch8yRN3GKeLsmFJHtqw+5IZGHvW8RfZ32IxCT3UfnK4PPism/cecr1Ve
1HQfGDlpt66Q/uWEmUrjkv39OHSheGH4PVJ/1hrG5Rn2w/lt6IsKYus+Ow8H
437k79938QfxKZcHwpVm/RgouXjPMpyC043fdtes+hG+WiRrEzmneeaU/J05
3w+XUQeX5kgKgasMlQbi+vF7kL5wCzm35bTZRRTN9EO74MCZY08pbGvIYGdF
fUL9ntvd0a9Jvdpr/z1izwD4pvMP/feeQve1tosi+wbgLX08z4n4YeGe34l6
A3B/cGxxPDGfyvp/OUYDOMnRcoSfnNPY1zO5Oi0GsFjxF/ML8SDbURERlwFM
bIjiTi0h9aTQcHfi/QH45D1tWEL6W/ufhZXyDwewdDlvoBbxehV53ZyYASw5
KLjegzg2hduw6ukADjvIsD4SB8dUHx5+OYD4JaEJKZUU3Lx2OssXDSC0ujBy
N+mfVVVU72WzBvCUu5DLhPTbSg8EjZRGBuA8pm93jVju9w/u1LEBPMyzCUub
789L8q8nfB7AqUZjY+56cl400PYK/00+n8/rXEzMtN1/0o13ED+qtR6Jkf4/
MMJaQV5tEJfWBkVmk/PC9Zldo8nqgyivNm2bP09cPSKVvH77INz2S7TNnzc8
xYbE12oPQn+iarkx8cmUMwLc+oMIH/lpM0SsUn5xdshyEGtW5S5bQs4vijJH
8mytBpF60GyBPLHcHY3zDJtBaPjkpBgRix2Ym2x3GASP8RPJCGLuj/79lecG
EXf0v0Ahch5ifA2uTbgxiHev5WoEyPlp4J9vnNntQZTkbPNUJR5eeuYi591B
7DftKDYj/iyjL306bBDKiyeU7xOzHePwU340CPbkVM/l8/dPjt/NBx4PQtro
xBIFYq7zA5uj4gbBljK5VZ+YL7Ss+1cSGW9z7ckAYsnyK+qlGYOIeS9e9ZlY
psVluccb4kT/VTzkfCjXc5wl9XYQMPr6U4p4yw+NyNsFg2jz5vKev8/as+nH
1IGqQRx9clAvl1hXnVW1oHYQein2Uk3EBnvbHr+pH8Tz9qjg+fsrs5Nv9q+m
DcJVYC/nCnLetY84m9z7cRDvm+P9rYmd405cCesdxLItJ97N31e5vjY029U3
iEfFYl63iC9Wb1r4nDVI+tm4wBRi39Y1XeYjgxiboboLia/1LclcMj4I7sUz
bxqJb88OnXD5Qt6f+fDEBHEQV4eq2LdBaJ6RPTBHHLaqailtZhB/89WUl5Lz
/UPFxHyVP4MIvvPAR5Y4VjPiHusvWf9TZr2qxHF6/o4PF7AwtDmvZBfxS1sr
wT8cLIyK7Ph7lDjN7cDE6yUshK6tMrcnzrqsVXFyKQtuJaXy54jzH4i4l/Ox
sOlC5975+6yiRB698wIsUB1mt0OIyzJ/i21YzcLrq9y7HxDX1Xc2Boqw8Hum
QzSZuKmzOlFTjIWSa0aaacT0wbeXJiVY4KvMbc4mbv+aZBInxcLpzTs78ufv
2/5FbjTZwMJUxGqTkvn7r6XX2RbJsSCw1QGV8/cnwh4dOfIsPKk49qR2/r5G
xibNQZGFPhNx10bi8S0Hbwgrs9Bsw3jdQlz7fEDmsQoL8ti/hSJ+LuxVI76V
Bbv2yW1txAFBPM6J21gwt1xbOn8fZfXvCY+sJguBURI18/dVO9yVX6dosfCB
dtBo/j5rzWClkeJOFlaNzZrMe8b8yOes3Sxo7D/bNv88VTd+T02HhTDW79b5
78vYcW1Lvi4LC7QmjOd/LyhjZduO/Sz8OR6pOz8ep/XJF0oNWZD+uKNgfrw6
URpCe41Z0P+o9mJ+PuuXNL2rMSHzW9LAWzd/f+drfczAjIXGJ3qT8+vRM/nt
T7M5C+nHZveWzr8v69tPTI+yMBAkv6qQ+EHrWu2O4yxMcMgee0vsuS+97+hJ
sn6y6qvn7xcP5u8K6LUm4/3wXHf+/nGzQruUzSkWHO++n5y/n+SJc6oatCfv
X62SK2Z+vfnnHJycWNh5jCPq3vx96c/1KW6u5PnSQ5xXia+ezjX45sZCacrn
EU/i4736kxc9yOdtPmk6EwtWnPvvqhcL7CaDSqbE02qLKfZLLPx0vtqiQ9zy
8qHnzcssuPLe7NlGfCe0ODfYn4Uv7iOa64jt2U2P8N1gQUW7MXg58a7zrN+R
t1jQzdikx0b85+gyrdgg8vwu6z8MEi8fGuMYYqEs3Lhf8LVp/v5LW8Uv4R5Z
35Eo4/fEbjLHKl5FsfA+hoaHxIbRk3abo1ko2pnRfJ1Ybqk/Z9YjFgp9eSvm
778GvrzQfxfHQtaHXR06xBbvZ1qqX7HgkYbwMZIvVJUC3fe/ZuFbH12JIuZP
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
gAdiPN///ZvChPiDmY0LzbT+B+dQQus=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
5/PdH79bkamTnMZ+v1lnStzZOfL+uZO57O93zsZWVnHSEfLK8ja7fSfXPhve
xkOHnY/xrAMxBUG8r5bRsfx19g52/46YeyksWUHHCq/Fyuz+V3g7H3MWocPi
eFk/e3z2xlpdZ66hQ4zuaHKVOK/8bNgRKTo2uD8JYI+v6qB+RqYsHevVEm9d
IE7h0aKvU6RDNWungjmxvJzadOA2OtwVc16cJZa0Wa9uqUHHw2URRUbEkcHC
5xs0yfcX/nLUJxZOWeK1S5uOKf4Dw7rEvJM/yvhP0HFHL1VMk71eVw4OuJvQ
ofevpl2dvV5VO3kGztHBKK0/s5O9Xl1LdT9b0ZF6xitxM3s9/gtrvnKHjlYd
pceCxEvHKAE37tERSkn6y0u8s32Zpq8fHb0WckqLiEM+3U+NCaMj4fXrxb/J
ftl75WZwTzwdUsdOuLcRXzPKPvg1gfR3gbsFhb1/9/+anUmlw0cnQbyK+Ju4
nbXoZzqMA3J4sohfUy0On6DQcc1lpjqUuKHg1bxFCx1K95fqsff7349dmdc7
6HiVKxt3h9jA9+SGhyw6nnvNtlgTc+7W4az5Q8ci+qkD+9nnSeyWz1jXBnce
2Tj2+RT8yNbxqEwbXKdjYjuJcz0+yp2Vb8Pc9x8ejcSCJhueuW9vA83CoTyT
uHSZqEuGdhvi6kti7rLPtxscyvIObTC+IDUpTNyv3RgjXNqG6rpoNRlyvkoH
bHz4qKoNARfyB1YSX6i74760oQ1iHp2OXOzz96iyPmd7G15tz9vKJOd5j+Gj
f1/H2yAbpXc0grjtrKFJ+ep2jAfmGHER11yn8zk5tON+/7fTlST+pDxjuFHX
dWDVCeUyMRLf4h5w+W1y70Te+Meu1yQeC7IeeCje6URT55rBIGJP8Dltu9eJ
mkuV027Ep6dEzqsHd4Ll5LHTgJj/guJ2/Ted2MwVJclF7AaTXteaTtzOay+9
ROK93lTSrqrVXYirFglS/UDGS19FqV6iC89N/v6SIpZNzJGmSXdhG0KvCRBz
Xijj71LsQpSV790xkl9kUdv7J/Z3Ibqx2zSGeF3iwtBV1l2w+8+bsYL4l+Xp
kUt5XQg/oS6/gOQnLitmVrQVdcF+Rl95guQvUyWR6toVXZipmdHpZntdd4g8
tQvtNTnFOcR/GOd3fBvoQqP5zRxH4r9nLt5zE+xG73XOqdG3ZL2fsF8baNWN
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
z0/gtPlWsbzV6hr/AxgYQvo=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
KQs4z4ZnSa8I5R3vthZH6rNhE/ngKBXf4/E1+9cZsDF9WraNWh+vw64WJBqx
MeUyZEhZzDUkL8OEWGivMbW+Wu5uVt15g42BkogOav09vVWZnW/GhnLsCw3K
s8/9/lhpReb3jMxKql7J1Xi245QNG8ksCztqfdvuU3jfdIeN4tkjtVQ+GNpw
OZ19j40i9T9XqfrkpcT05qtObIQ8Pp9A5RPdpf6pI85scLubd1P1Cu1P0dvv
j8n8NZ3YS+Uf92+68vfc2ZgIbDei8tX+ganX3F5s0HnjnKj6JJMunSDgx4ZF
hl0Ulf/CXnrGrA0j82kbc4/aD/T3b9nFjGDj1r2Th/2o9dPV2vA8msSrf+oc
6vz0Snz9HMF4NiZ7+429idOff77GlUbGf/m9aOo8Zqt8bVZ2OllfLpJLqPOa
SsuC57bv2VgSJG3vQu3/Sy9WjmWT+HQPXOdMxYvvlDyjlHy/+Ip+6nzooxBe
ElzBBk2g4Psdaj5r9utrVbPhNO/iLxtqvPmf+lbWsTEz+bbNkrjHdcO3jwxy
PyRMUOfV+HV1HrdZZH0qFQZdJb5edEdyUzeJTyMtOWPiL7NKtF8NsGG1TESG
Ou/+drj04dk3Noa1iky1qf6tmHtKc4qNORGbAzWJH2W9GRT4yUbOzydvTxDz
/ZgWdfnDhof++hQ1YmGrwHtW87rQzHV7cBdx6+JdwgrzuyD+x8VTmRrflK63
Qwu6IOvAXLWNGs8xBdblJV3YvPUZnwLxRpOKfSfFu/Dil8wcCeKvcy3a+dd0
4e6V4KUrqfGNW2ZdKtmFr7vDFlPvC1R6jGJVZbtgLelSs5Daf/X/zpXf2oVK
sTTtPw106GkrVc871gWZ9duuNlPvQ1ZoRH3Q6MIG+dmqdcSX2cZWV0924eNY
5J8qYqObQSLF2l04039hVwGxicu0sdMlcj/FwJjXxNePCSkrGJLPOzoXUO9P
biyWm99p3IXXnBvlkcRm4bppO01Jfz4c86bev1hn5P+Zut2F1JEXo3bENvat
9Ng7XdA9NHqQen9ju3f8pZZ9FwIDNR/dIL5bvfZYmlMXxvNs06j3P/d7XYNu
enRhpeWl6r3E7ks1FHuiunAp3rCEm9iz3ZjHP6YLzmYjBtP1dHhFOzbtjevC
k5hn7K/EvvIpDpGvu2C+5fAjFnHgQaHy85ldiN9JO5tNHHW79TK9sgve50/O
3CSO3jmu5FTTBbf+K6GGxC9m8fMq0LvASNNdfo441mvXW8+mLpBclrifODE2
cvowuwtTywRklxFnNBr75051Qc0/TvN9Hfn+WWs34WcX7DUWPHlNfF2eVZP3
qwu7G5vDI4nFXM7zfebqxvWgsMuPiV2VTjwo5OtGWvq2Y9rEZ/x33CoT68Yx
3gPmQ3Syf+dNzldb3Y2E68W3Ooj5htMSy9d246devloNce4++b4K6W647lrt
mUosNb5at3pzN5jiNvttiL+f5D9Wd6gbFtUj+6j3nXUOZQOaat1w3KBb2U+c
9MrFtf5YN1zOSMk2E1/i4ipoONkNSaF3JhnEZckTO5rPd8PPT3nwFnHwgk6p
DrNuXGnTedNRS4dyVQp337NurBEa1fGvIfX7C/ussJBuKIUv2mdPzHXnkOXp
sG6sPpbMMSAuW9vBzo8m/acxnm0iPmM/93NoUjfiikz5qqrpsJTVu3+qoBv8
vJGKk1WknUtmO29xN5o/FWxpJVZu+jaWW9qNuUo7J7OJuZyf6MlVdyP6XmDq
Q2Kf1vTdc1u6MS+1YvYC4iQ3/pns0W4Il/3OWlpJ5kev6Z3VF/J98upWkxV0
WClFm8p+I+Phc7u7gViFta096Ec3ZqklD/oRl283yLLk6YHkj/+c+Yn7+j7c
kRbpAXe0wcOxMnK+O3hl0v9AD7T7VfPvlJD6wqnRduXhHhiIH7h1ijg4+8D0
S7UelFup1csQL1Za+zfjeA/25Dd9aC2mg3sti7dFpwdqWvc4W4l7uc6vXHmz
B51/1mcyC0m8ZWvsfxnYA+tlVyYm8+m48iO7WC64B8Ku7i5FxGuV5I5kPO+B
YALy/IjDXvNplET2gM2fLbuR2Ot56ZmBhB4c7/VqupRHh/mdvdflcnuwa2zL
uowcOrYqbX2a3teDnpf9ScJZJN6ChI8rDvZAxqIss+0jqT+nv/MlDfeA9e6l
fgT1e01+1qOYLz34zRvnKUnMp77njt90D2ZJiB6R+0AHy/CYvvmCXtDOnO+T
ziTr1/+yvNy2Xuj15ubWp5J8OrVvKH5HLz5ashvcie+fk4xfu7MX/dsVHajf
n6zF+yVW7OlF2DFXhzcpZD96fWMJ39FemJ4y3+6UTOqrQttf/bq9eKusqLjo
DakHxr3KY1x6sTXg6FhTPNkP/jpEabv14mLbiQpb4oH5N2znevRC3XSn4HLi
L1JH15n69qJc4lj3mTgSPxfmPNgc2oumjZ13ql+S/FzouONzSi8i2ub1hkeT
8fa/Fd/Z3ouWoqyDpc/Jeo7Sc/Tt7AVmhxtqEZu90dDex+7FWE5lCyuE5LfS
DTxxfb0Qd9Ev+R5Mh9uvfr2bX3uxguEYuiqIjgTDS8Izc/pgGyATeMSf1O9b
TrmIbO7D+zX9w8IeJN7ieqTClfpwdryx6Zk7HXEid8oktvch38ZjhTDxpb8R
/NK7+vDuHCdZ8Akd9RUjT7cd6sOzCN4Jnsek3rvsFnH6fB++faYbljjT8cQn
772Xcx80HBe9KLEjz8N9+txilz7sq14Vqki873bfdMDjPhhGmbWF3KFj5ryA
aphnH1YUaspctyXxInWhKPFZH+7p60zNuk3O/zlTtNLEPsRsKcwRMCf5Zlh+
aFZ9HwberbV8akzqLd7a2E+NfSi2sVdtMKLjm6T55dstffAa7VgmTJyvl9Yy
wOiDUcShsWcGpJ6s21ZaO0Ce99f5xV76pL79iJfhf/qwgfXd9Og5cp58fEpP
WbYfMXVbNvOok/X1clzkm1w/PG4fH1h3jNTjn/0bkxT6UT/4wfvwUXL9r0Z1
ia39kFnx+dXjI3RI3zq/c+6efpzPPfd9+gAdF88YLm/U7semmDjZN7vpKJK8
XWf+oB+ly7ZtUN5Ix8P4LJ2Zh/1wGfdcrSZPxkeWi/nYtR+TfnyLdOTo+Kzg
MRzh0Y/Gv5vrLGVJ/lWJnl0d2I/OJLmGUCk63p+s3iaT2I9r0Z1LPomR9euw
LpRd149+3mvR0gvI/vr3+uqbjf34c1rj91IB0j/nlPgfzf1IblTZxj2fzPfj
nekLGcTWiTub59ER43eqend/Pxj7JR2s/iPr+9W9vyG/+rG9dfV86xkafBoa
DTUlB7C8jyboM0iDp6OXJF1qAP593TYXB2hwlz7Ye0JmAAk25+Ol+2lwcUi/
orFxAMofekxyemiwl/Q3ObJjAHJ3rS62MGm4an3ylqr6AIZ/zNtY30gDllTe
lbUewLjP5VVN+TTsynXemWAzAL6JyWP2eTSoXFOZWW83gDU0LxnxXBq2Zifc
W+c4APXEn6MGn2jYYOTmJOE2gK2eXA/aMmhYln7QVThsAFH3eX64JdLAOZ3/
lLtoAL5rzE90+NEwFe9y433JAFw4mqeUntLw59fRwzfKBxA5GRTt7kPD/JeN
M401A/DgXiK92ZMG6YmhqwmtAzDw2/7qhgsNlwKWqp7kDODnihQNb1saaA3X
h8JFB9Ffdbb07nka0rSX7le2GMT98rmeiaI0+C28P5BnNYjWyvg3yctpsCwf
8DpkMwhNpsPcd8I0bNqd3XLafhB3JNv00gVpSJE0NDNzGcQD6WK7aD4a3n5L
CYkJGcTezlN+RyZqkfhU/YtAAbl+gzbDNbkWMdUPw7sEh2DRcbZml2gtPDf9
uhi5dAiTXWtEe5fUwibQcuXF5UOAvb+528JaHNG9HNq4agih3cMb82fXYmxE
NaRMeghrn8d5fBurwY750wFvVYfQLCPoc6WgBtVHzT3vXh9Cooqxr6FxDb6X
XrQXLBiCa1gaP+t5NcROH7pdUEQ+r6l5Uj2gGoc6FW5ZlpL+nJhqT/OqxrMJ
bsO6qiGUjGz/YOZUDaXVCUf9modww8lDKNq4GpZ3J0UER4eg8lm1aGRjNUbk
vD8sXj6Mtpd2P7lzqsB6mje5yGwYEkItQsollWA5a2T5mQ/DhmM7EJ1bCbZV
u+MSq2Hktu6izX5fiS7t73OX3xnGeYmu8g/xlegWURAVdx6Gfmz1zxa3SvRF
R6jKPxtGlPncvim1Sgyn3nusljuM/mvn9nqVVmCKvlPEecEI+A8ctVZNLgfX
zebvyotHcE3/1fODseXg47Vq+io0glSBU34HQsshpprof1lkBEE1uZ0yj8tx
MHH5gr2SI+j+wj72VK8cAc6T3FwqI9CvfGJSw1+OLVuSR+4ZjyBCdZF9i34Z
zAPW5Ntlj2BvQuvFxpESaAYamPDkjUBYJ1TTgl2Crc9eCHp9HsEf7l81s5tK
MB20xjiqZASN400HBfNK4BK6hq+UNoJhPSn/Et8SPH+xRmtJ7wiydKXbfTaX
oChlzcBbgVHsHLT7fu9WMZZVr1nUozeK+lNcqi7Vhdgx2fDt0uVRsEM3rFqR
XwidVY+bGYajuO9VZRmfVojnN4cjmq+N4qzj3usxQYUQW5AuX2k5iuDTe/rX
Xy6E1ImDx9JcR7Gmc99v3fECbKVfdXV6O4rA1pvntAUKcLoxaWbln1F8fGr/
Z41kPhzjb0zXco1hR/tDdqVgPl7Zyf1w5hmDkcnniquz8jGzKunbAO8Yit8G
rf2anYe4K6+H0oXG8IG2eu+0Qh6mvye0qMuMYarJ9Mmyxbl4IRqf7qA1Bgbv
XD2RvE8Y14++0ZE4hqrd1iMGpZnIu5TsskCdg2Mmn7OcIl8hq/bGsc7jHHyu
T3c7sfMVMlVlF789xcFI4PG1w03xSFoZG6ZxlkPONUnNHgLxeN7y/J2nAQen
Z8uf87gTi9snXdl8dhwENvNJ3zr0Ahv26O6eG8eBlELObMfnQZBKFuVpfsXB
EkOxDEbFM6wRaymLe83BodRirgu/ArF8RlPrUCoH4Srv2pouBmDOhyOmLtkc
pF3aLyG29inYCkohPPUcDL8d4Qt/5oKOiK969Y0cXPRoKrw27xFaBJIlY1o4
2O7GfPHffWfUDMuk7Osk7fKz2y8NOKLifP9tQTYHH8UOzj84aI/i8pc7u7o5
+BogoGL67Q6y48VLHwxyYC/G9hKVscIHYYbnqREORLR/ye3SMcc7l+eaqzkc
DD4sixJTNMXbibPLv37lIGPgzP3UZmMkGi7tzJ/goPLOtyKRlEuIrauL8f3O
Qa/BWhdPz7OI2utrcmmaA0mPpocVn9TJ+VRDQfE3B66CPZs/+O5AkDj/5N+/
HNh6FfyYJy2p+j/WyoRu
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV13c81V8YB3CjUFqUSomKJMkoSSqfJikro0gkKyRkRURlpMyMIipFKfyK
SiRZmTfje+1977VXrpYk6Xf8dV/ve+/3e85zznPGs8HCSc+ai4ODY4aTg2Pu
85j1EL1o2FB1U9hKvd7xBaqDL09aMIQVoSugMVVpII2V/E3hb4QP44kK5y8J
gf14X+DrcFlSGxYZJZqbOI9DdveKpw+EDfCDf6nqC299cCwfjv4nZgxhcR9u
305j0Mc+3jgnaYapsI/0bUfNoULtyIwStoK41YOX883PQ3zfw9RPiTa4b29y
dJ/QBSxK43v0Q8wOehdED6SzHNHl3xV2UtIRjcfe/zxi4oqihE87w4TdkPrf
SatnEd5QrPfM2mTijhiV+IKqjKt4wSe7rSDRA9Lh+w7r1fkhyj1Ogi3mhZYz
vlGeAjdgqXNx+QlJX4yY2bd5Xw2C//UQz9vCAbATD1xnnhCBAhGbdyfzAiD7
0l3hy7lITOXs/7HRJBB7ekMMoiYj4TD+0+lDYhBUl4WLTq6PgoGJ+fkxsVu4
+WqdrbVXDCR37jypLRmO2u/L/DkV42Hlxha+JRwDEV2PAoPTj8EXo/F44msK
9rpESyuHvkYOtV1dXfQVGq6IRxq9zoORf2f7p5C32JEfwzhbVwSnLNdtcT/e
40FJq/w/7lJ8i2yu5OQsxHKOiDLP0HLkO2Shb2Uh5Ddz+0bcLcfNo6HvymUK
IcO8+v1hUjlEOA6mhBgVotfwvOTzt+U44vSfn1BmIXZkUxusOstRLXkwIUau
CAM3C1cFSVdg/XxhvefdRTBacOpLeHEFKovLC+v2liCxQudnbEclnlXP9IWp
l4DzyOvxxt5KBLZsX6ipVwJ1Q3/G4rFKHPzy0KDyfAlelRZnX5ypRP7qy8NF
USV4fD8orl+kCplOm5e/HipBR6Sj7vszVYhbF2wTE/MJ/TcvzPC1VsHOS2Ox
8VgpDizsvcRbQEPaWgFTs8lSnA5/3GRXSsPYx9YMS44yXFp8KruCRoMjl62m
44oyiMV8++beQoNbSFCI/94y2AjmvUycoMHvwacFL0PLML5+laXQxs+ILd7H
w72tHNwFoYZl1z+jeMH2fxkXKzDcm370uWI1pAzkc257ViDX4ckWZ5VqRD6U
dbL1rwDHm9suO/ZXw3zHVoZ4fAVMZDrUM45XY/aMROH90groVtefOG9RDZXM
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
lf8+R12SxT0x/p///rEx/4rVPOVRftX/AZWC3nU=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"l=2,\[CapitalDelta]=4 for various d \"", TraditionalForm], 
     PlotRange -> {{0, 1}, {7.547541794468621*^-10, 0.3575269678664158}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.03`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.06`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.09`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.12`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.15`", ",", "4", ",", "2", ",", "x"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665464716880123*^9, 3.6654647568480005`*^9}, 
   3.665464812093711*^9, 3.6654656197752695`*^9, 3.6710675117602367`*^9, 
   3.6710835543180676`*^9}]
}, Open  ]],

Cell["\<\
Plot for various d shows that at d=1.12 the usual behaviour of the sum rule \
function remains the same.\
\>", "Text",
 CellChangeTimes->{{3.6654653538001785`*^9, 3.665465384259808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.03", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.06", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.09", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.12", ",", "4", ",", "2", ",", "x"}], "]"}], ",", 
     RowBox[{"SpinLPlot", "[", 
      RowBox[{"1.15", ",", "4", ",", "2", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.45", ",", "0.55"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<l=2,\[CapitalDelta]=4 for various d (zoomed) \>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654647622748036`*^9, 3.6654648001505013`*^9}, {
   3.665464830515236*^9, 3.6654649146032753`*^9}, {3.6654649471822577`*^9, 
   3.6654649505394945`*^9}, {3.6654649994645767`*^9, 
   3.6654651838738813`*^9}, {3.6654652233638105`*^9, 3.6654652311611896`*^9}, 
   3.665465279720372*^9, {3.6654653367373004`*^9, 3.665465337800912*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PxnUihM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwt2Hk4lVsXAHAkQxGhRCLzmNwUCi3JVMiQEJEMGSoapJJLpJKLiChTSKjI
kBRFhi6SDkmDwn5PGiXcQgr51u75/jrP73mfc87e69177bW2rGeQvQ8XBwcH
HycHB/0Ma55htbf3wpzId1MthV3gftjzoPWTXljG7+ncjN6g0LKIhQ6JFLr9
EM0Tlbijg9ULn7x/BTagEw3lB5929oLue+H3NeirlRZzX3b3gqiexesSNCsv
WZ/d2wsuJks/J6NlI1SLxod6IcNNOd0DXSjNzfVMqA96glkLxgq6YA6/+DsP
rT5wuHNM9Tx6QIpYWtr2wZjEzrg16Hxxx9WDB/vA3TvlV/fVLtB3m3t1bXIf
OJ1SywlHV5z1SjWs6gP9eGNzRXQJCRHMftUHNnFTE0/zuyD8RKNA6WQfNPHn
WcSgtfhq44KX9oNw9bYBA/Td1yMpg/r98KBz3tNfV7rg4YuXcrWu/fDcyFet
Dl1eHfiXSXg/jE7nCkaigz8ath7P7oeodNtIK7T49D3i29APqry14UvQ69eN
hJUN9EO7WW7UYB6Ot8kl79ocAqZreNY8REtoH7ZwUiLwl3RZ1WU0d7hmwyv0
TdYhPerh1o9rXZQJ3PGNrMlGP3R3UXdTIVDnFvogC70/FhZ4qRHoSR1oz0A3
s/m7AzUJnF51YTwNfSgxe+dpHQJJ+6PDE9FPvraE3DYjsP8Cf1AU2mHsZMMG
cwJaLNdfkejXv0CAhS7aO/c09Qfeu7kfLAgovXPPPoHmkCtqF7ck4Mep/iwc
vcoxRi7UBr8vomZ9HJ1WZ8Fa70yA4emOCkZL/8st8RjteU5cgjr/cb2X03YC
qq0VpYfQZa/0fga5EDB0GO07iG77pqKQu4OAg2jM+gPoaSX+0Dm7CKwU0xAO
RO8690ix1Z/A5mmHcV90QkDmW7sAArdzLC9S15gGXX6DfiuQpk8tMi0mMbKH
AP9GjZO7afz8PAQWBxJwdrFd7INWMf7xzesggcmnJ6w8abzHFOpnQ/H/As5N
7kBLdv4IO3ucgHmEXAG1+Y22taJhBGRT5jlQ5+zaf0vpbwK5//aUuaLtWPcK
rCMIzB4KDnRBVxbax2ecJLDGP/OnEzrU5YSLbhwBoTsNNlvRXYuDe+6g6xya
BajVnvk668UTGBZf1GaP7rG0cVybQCBLNMmUWs9Q2l4/kUDCby4jO/SEzP1N
kELgXUGHsQ36wPsfeuaZBD7PiJ6wRLfmfrnTgq4M2WlGvdyd6FhkEejTHReg
7nzRvHpTNoGOtNn0zWjN1gtaljkE4j+fq9mEHrqurWKTT8C77DKvBdpvf5C4
UzEB8IzqMUG7fvLxe4seOMN3lXqLx47qfSUYH/kP+6nX2G5yjb5JIK62kJ+a
S0v+cnkZgZksE9iIzhx5oSRwG9f75PuaDehzvk+OpKGrvg78Qx1FmlrlqgiU
+K11o/bvKAtYe4eA/fdBDmqd0tibu6sJpB7yszKi8wlcr9NQS+DX9yff16Ob
Pqw+Y1VH4GS5SRt1lbv6q5dowTmiudRZW5aEDj/A8e6usqEO0PxWu7SRgILx
knJDuh+Hr5qGNON8+TZFG6B19wluU+8g8Ejce+86tGOzgl8JWiHymQ11sIzB
8ZWdBAKdzmlTVzwNyNV+SuC75dDUWrSGTutX/WcErHz1E6mXz0adtnpJoLRN
s0UPvd45/RILfcbAp5Tarby82PYVgcXyn9Ko072YLoceAjbWz/ypF7Uayri9
wf2mDgup5yVN3tlHCDxz3heoS9f3oNDjEbSx0R5XavONyv0HGAK9ubctqKPH
t3GHsAncerlSgfr39lu24QMEpoVr+nXQUrfavDjeERB5vpRFrS/wNiQKnbq4
rZb6aJ1w1un3BMLFBLKpv8sFfk74SKBxXNGTWiTs1LTwJ3xfJV+2Ums9zxRK
RtezZ0ypA888XpP2mUBoG6869acvKlGXvxDYk1U+uQbNY2p0QXYIn299M0St
mO1UdAVtH2fHpva0Pc0q/Epgw9/yj6l7Kwcky0Zw/x93y6POebswZ+UoAeVZ
iUvUPsJGiqXoEuHlidTDezJX3vyPQPFDvgjqW5faKld8IzAW9CWE+mjL5NoS
9Lp88SBqTvltJsXfCYRcs/KgbrY9+Uh9DNdT6Lbt1LHh5VtuoEe6Cu2pxV4L
br8+TiBNSdWM+hWvQb/qBAFeWWcj6qw1AV7X0NOFneuolZKa9xX9IPCvZbYW
9WDd2DflSQIf9n9Xpy4dkjtaiFaXOq9MHSxpN6P0E8frFCpPrWcREVWA7l1e
LEM9c7iEV+kXgYWBylLUjVfexF1FN5kNLaE+/ZRfRHGKwKnSX4uoLWd10/LR
lmn2otTdLim5V6YJ3JUnC6jdq0Zv5M3gfLuS5lN/XGhdlfubwPyyAH7q/fuu
1efMErhe6s9HvUGkPKCDg4H7u17/ed62T/Awi5OBnRUDQtTF0fm6C7gYqP6w
TIT6XIb+L2u0fkGuGPXBiq778Wju74Hi1A6P/COeoCcaTklS6zAcxoJzGFCR
/bCMesmPNG5r9AR/oix1n0Lz2XZ0XkS9KnW9vpuVADcDknzmmtR59mMLrNBH
l4trU+8+IZfyGJ00mGxIbZFW7Th/LgOXLhttpFa/aSthidYiOpuoR9+EZ7eh
D8/MbqPu+rZo1zweBix7u3ZQV/KXyG9Gv9s44kV9TPdN0SN0bAX3IWquZN1b
rbwM8M7mplBX8Hb2C/Ix0F0am/1nfYf5zduK5ht+VPTn/flc2tWHHphrVUcd
pTcl9I0fx1Ph/pV6VUmyvu48BlpuT/2kfiur4RuG7t8wwkP3l/F8tzqe+Qws
GOuRpZ7TX7d3qQADHvdrXakr7Z0ueqDtOYX2UHu3jDRdRZ9srwqlfli2fKmW
IAMXJ/gzqKNPRj0yWcBAT0IdoeZWNVMKFGZgXrjHMZpPKrP67W6hK+dKJlB7
ixz5exKtIaR2hfrhVGF31EIGonOtWX/yEYv/ZJoIAwce5KnQfDY3+AmpF2Ng
OCj6K3XVJ5/5PIsY2NZxlZfmz91uv3Us0TGFy+Som81WJjxHBzYKO1Oflkgy
GFxMx8fdSs3zwOGSqAQDFrOyd2l+tsqfUXRA76mIe059/mxBRQpaptj4O/Uy
h8nHiyQZkA1KXKmPXv0547f4Ugb6lG/doPYUHfCSWsZA8oBYBT0fiib/Gd2B
hirtburhvtV/Z6Hzm7MmqI8VnU6VlmbgbsZWA3q+JBqqPVouw8BBXrPH1HW+
BzQVZRmocDD9Qc8jbmvJez5oi2JxaUBvXtVkXoA2011jSv18WmyXshwDPxm7
FOqhpLvJqvIMbAhZqEPPQ8n7s5MrFBmw47p2hp6Xh4UTmnRUGRgxWe1Fz+OY
rXrVYejNh46lUWemvr3ZiBbtWdxO3SSlm75FjYEV5i46puiFqsz+3eoY74Q5
Qmbokg2rpFNXMHCltb/THP3+4Iuj438xcCS+NJXWF5O3TwTqr2Lg3J6fz6kF
fqp5R6JjXDIWWaG1IyJsBLUZ2LH74wXqyH9UlBRXY3wEc9KtafzzQ5856DCg
HXC+ktY3255La1auY0DI/YCaA/p+VHfvJLq+2P0QtZxW7D+G+gwsKsu5Tz0a
O/6pGT3aIWe7jeZno/YrPQYMEAuZ44403jeOScyuZ4Dd/oNxpvk3qpt780YG
alSkhtzQPzRj3xBLBsqZ7lk/9JiV7RcZKwbEFeKc/OnvByye2olm18SVUn8q
yJNk0EW9/h4BNN9L39vOWDMw8zD53z3omgVDLxkbBuRa87NoPRs+bN3N3srA
8S1l0bQ+5r658MmAKwMuTQs0af3NUu0xVd3BgEk/dy71xas5dYHo/EpbMVq/
a2StLPuJdon9PPWnno+zThZyx3x4QaYjGn0l4Ox2fQ+c77yMUzF0/ytzfjjv
zWA/VbeK9gOROaO/N+zD/MGpEJ+D9r/7Jfjo3wxEJjzKa0SL+jSscIvH+euf
ifqEXnFqWCkzm4HbApPxi7G/qWjT9b51kwFp9fNLzdBFJ1+xFeoZ6LKB9HA0
v+eFK4GdDPw3HDpyB63xXKNoN4Pxitq4cwz94N7Sr3f/Y6BAMjVlHfZftS1K
IQOcbHjJ99r7BFrd/Cz4ibLhSQNPTifa1bXZMkOBDZySqV/ksb+bSJHJLFjN
BpmAyMTDaC7jTg0BMzYYvNAz70IfE8vi3OzIhg8DLws1sH+sOG4iobObDay3
ejUxaFfHjQfCjrBhffgbj1F0kKO7YMYZNtin34hwwP40hh3LO4DOTZgxdUTn
7b3DqR7Dhg6PBAFndHeU8EQNWvvA3nRX9LrSxv7XZ9lwj1Oi2hPNzadcJhnH
BrlXqlwH0JeqR+zTE9nwLrOnMR5dYSJl/RZ9Yc5/iefQ7R0W5mpJbAh9Yboz
Cf37fa5+Ddr5fOF0SiHNnw4Kr8+zYaXk5nWZaM09d8clLrDBV4Gz4TrafOLd
yC50Rsfn88Voj8iFg9fQ02pCPjfRyWkB/WtT2cDTJDSvAj3ZJNWyPY0N8Rof
HavRIjabGnLR9wQr1e6h1V8fvvcZrWVU+/s+vR8YZZUeu8iG2/7RhfXoI8en
rjWgey2MwxrpfQCPSj7/JTY83GRgR+8Lric5ZNuhwzwOKtH7hCapyIuX0Fz/
v2/4H27MUvg=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.46, 0.264}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> 500, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"l=2,\[CapitalDelta]=4 for various d (zoomed) \"", 
       TraditionalForm], 
     PlotRange -> {{0.45, 0.55}, {0.26651157433622, 0.3346736639398952}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.03`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.06`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.09`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.12`", ",", "4", ",", "2", ",", "x"}], ")"}], 
       RowBox[{"SpinLPlot", "(", 
         RowBox[{"1.15`", ",", "4", ",", "2", ",", "x"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.66546476727905*^9, 3.6654647799745455`*^9}, {
   3.6654648150303407`*^9, 3.6654648460028553`*^9}, {3.6654649047522583`*^9, 
   3.665464916083973*^9}, {3.665465167464314*^9, 3.665465185461476*^9}, {
   3.6654653252124777`*^9, 3.6654653394917293`*^9}, 3.665465623645854*^9, 
   3.6710675151564326`*^9, 3.6710835620128365`*^9}]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]We have to determine if, for a given \[Laplacian]min, \
the above system has a solution or not. It turns out that in the range d \
\[GreaterEqual] 1 and \[Laplacian]min \[GreaterEqual] 2 which is of interest \
for us, all Fd,(0\[Laplacian],0),l > 0 in the RHS of the inhomogeneous \
equation (5.4). In such a situation, if a nontrivial solution of the \
homogeneous system (5.5) is found, a solution of the full system (5.4), (5.5) \
can be obtained by a simple rescaling.Thus for our purposes it is enough to \
focus on the existence of nontrivial solutions of the homogeneous system \
(5.5)\[CloseCurlyDoubleQuote]
\
\>", "Text",
 CellChangeTimes->{{3.6654690850709515`*^9, 3.6654691046391373`*^9}, {
  3.66547555480785*^9, 3.6654755583064833`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.665468948994957*^9, 3.665468990110566*^9}, {
   3.6654702908587403`*^9, 3.665470429115833*^9}, 3.6654746598482466`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6654704626667843`*^9, 3.665470474978094*^9}, 
   3.665474258070857*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6654704472231903`*^9, 3.665470459400478*^9}, 
   3.665470532725431*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"func", "[", 
    RowBox[{"a_", ",", "b_", ",", "\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"1", ",", "\[CapitalDelta]", ",", "l", ",", "z", ",", "zb"}], 
     "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "\[Rule]", 
       RowBox[{"0.5", "+", "a", "+", "b"}]}], ",", 
      RowBox[{"zb", "\[Rule]", 
       RowBox[{"0.5", "+", "a", "-", "b"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6654742094027004`*^9, 3.6654742116528177`*^9}, {
  3.6654745658297744`*^9, 3.665474574209854*^9}, {3.665474624136097*^9, 
  3.665474642244497*^9}, {3.665474726665935*^9, 3.665474737745327*^9}, {
  3.665477067579792*^9, 3.6654771078777146`*^9}, {3.665478172455076*^9, 
  3.6654781767718353`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2a", "[", 
   RowBox[{"\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"func", "[", 
        RowBox[{
         RowBox[{"a", "+", "h"}], ",", "b", ",", "\[CapitalDelta]", ",", 
         "l"}], "]"}], "+", 
       RowBox[{"func", "[", 
        RowBox[{
         RowBox[{"a", "-", "h"}], ",", "b", ",", "\[CapitalDelta]", ",", 
         "l"}], "]"}], "-", 
       RowBox[{"2", "*", 
        RowBox[{"func", "[", 
         RowBox[{"a", ",", "b", ",", "\[CapitalDelta]", ",", "l"}], "]"}]}]}],
       ")"}], "/", 
     RowBox[{"h", "^", "2"}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0.0001"}], ",", 
     RowBox[{"b", "\[Rule]", "0.0001"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2b", "[", 
   RowBox[{"\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"func", "[", 
        RowBox[{"a", ",", 
         RowBox[{"b", "+", "h"}], ",", "\[CapitalDelta]", ",", "l"}], "]"}], 
       "+", 
       RowBox[{"func", "[", 
        RowBox[{"a", ",", 
         RowBox[{"b", "-", "h"}], ",", "\[CapitalDelta]", ",", "l"}], "]"}], 
       "-", 
       RowBox[{"2", "*", 
        RowBox[{"func", "[", 
         RowBox[{"a", ",", "b", ",", "\[CapitalDelta]", ",", "l"}], "]"}]}]}],
       ")"}], "/", 
     RowBox[{"h", "^", "2"}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0.0001"}], ",", 
     RowBox[{"b", "\[Rule]", "0.0001"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6654747090081863`*^9, 3.665474967118916*^9}, {
  3.6654750506406164`*^9, 3.6654751292633877`*^9}, {3.6654751621178083`*^9, 
  3.665475192773922*^9}, {3.665475261015448*^9, 3.6654752811704683`*^9}, {
  3.6654753374931345`*^9, 3.6654753628723464`*^9}, {3.665475804659932*^9, 
  3.6654758482827744`*^9}, {3.665477080010996*^9, 3.6654770841201077`*^9}, {
  3.665477159704093*^9, 3.6654771673179893`*^9}, {3.6654781805214605`*^9, 
  3.665478204008894*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a", "[", 
         RowBox[{"\[CapitalDelta]", ",", "0"}], "]"}], ",", 
        RowBox[{"f2b", "[", 
         RowBox[{"\[CapitalDelta]", ",", "0"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "1.01", ",", "5", ",", "0.01"}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6654752209353285`*^9, 3.665475238349575*^9}, {
   3.6654754146355176`*^9, 3.665475483670307*^9}, {3.6654755670787964`*^9, 
   3.6654755687265596`*^9}, {3.665475626074589*^9, 3.665475657320541*^9}, {
   3.6654758956917086`*^9, 3.6654759368331175`*^9}, {3.665475972452972*^9, 
   3.6654759848905373`*^9}, 3.665477031853962*^9, {3.6654777637706842`*^9, 
   3.6654778269307313`*^9}, {3.6654780021148844`*^9, 3.665478012333392*^9}, {
   3.665478054932893*^9, 3.6654780554641495`*^9}, 3.6654780888380113`*^9, {
   3.66547815360614*^9, 3.6654781545280848`*^9}, {3.665478211450899*^9, 
   3.665478213797795*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
KTMgCzdrP/TS0oX/Ad62Tk0=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{-4.888351173848449, 
    7.704644868655741}, {-12.459557551913747`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.665477808826453*^9, 3.6654778555178084`*^9, 
  3.665478039594088*^9, 3.66547808169258*^9, 3.6654781477705708`*^9, 
  3.665478215567586*^9, 3.665478288356619*^9, 3.6710675229227853`*^9, 
  3.6710835841228704`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6654770360202417`*^9, 3.6654770360827465`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a", "[", 
         RowBox[{"\[CapitalDelta]", ",", "2"}], "]"}], ",", 
        RowBox[{"f2b", "[", 
         RowBox[{"\[CapitalDelta]", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "4", ",", "7", ",", "0.01"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6654783000046625`*^9, 3.6654783563570676`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
rVDOtZX4HxUq2Cc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{0, 14.383078748431144`}, {-0.3811706852652197, 
    1.2636401995336222`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.665478390052022*^9, 3.671067528746725*^9, 
  3.671083606938298*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a", "[", 
         RowBox[{"\[CapitalDelta]", ",", "4"}], "]"}], ",", 
        RowBox[{"f2b", "[", 
         RowBox[{"\[CapitalDelta]", ",", "4"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "6", ",", "9", ",", "0.01"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6654759302853627`*^9, {3.6654760276859627`*^9, 3.665476198865013*^9}, {
   3.665476230774824*^9, 3.665476230962353*^9}, {3.665476670751664*^9, 
   3.6654766728495927`*^9}, {3.6654767140783606`*^9, 3.665476718110264*^9}, {
   3.665476763181532*^9, 3.6654767885021725`*^9}, {3.665476818596837*^9, 
   3.6654768194260683`*^9}, {3.665476871236725*^9, 3.6654770238063745`*^9}, {
   3.6654770887122602`*^9, 3.6654770912520237`*^9}, {3.6654771215073185`*^9, 
   3.665477134114791*^9}, {3.665477470046753*^9, 3.6654774766010065`*^9}, {
   3.6654775748544207`*^9, 3.6654775755419664`*^9}, {3.665477871495825*^9, 
   3.665477888588981*^9}, 3.6654781143939247`*^9, {3.6654783966836157`*^9, 
   3.665478420802229*^9}},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{4.179465406638997, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{4.235345631362075, 7.811680013639077}, {0, 4.235345650596689}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6654784566659107`*^9, 3.671067536394987*^9, 
  3.671083625813114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p4", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{"x", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
    RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
    RowBox[{"PlotStyle", "->", "Dashed"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.665478462152154*^9, 3.6654784636053495`*^9}, {
  3.665478494937565*^9, 3.665478511183566*^9}, {3.665478543411518*^9, 
  3.665478580584235*^9}, {3.665478616900008*^9, 3.665478692152686*^9}, {
  3.665478746978539*^9, 3.6654787736559534`*^9}, {3.66547889881137*^9, 
  3.665478902081289*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxd0/sv1XEcx3HMyJGKNZe2Zie3H2Iz7EwH53zliNMhl4PzJbkkzuwwpDma
SxQyrJgSK06aKYmTyspG5+v8QJs4qDg4tkN1HNpOSJz41qm2Pu/v1g+vPf6A
15708znR6SZGRkZn/uyvialLOoMBJ5BTE34ThCll7SS7LHkrDmyz2E+z3I4F
cR0me07GgAKhYwhTxweldiOd4xvRYFii7RxLHQU2hCkYPe8iwXPa+8rIZxHg
sZRtrUljONhySvVo4g4PTK5olN3q5ILStdYi29oQsE/mu9LXGAwGDLnq910M
Au1tNMkJCYEgt1ukqxlngQXX+oTKBiZodsIei29jgI/ZLmlRcV6gcrVLWMxx
B50O8kYHs5xBj568wtlZO/D6yMkiS5VBhpQH2FqTwl9spE+dfNCpxB5D9lsk
FQ85OoNuxw9U7na5g1Kxv4NblRcoJCfrj+YwQEtP2dC9J0wwrKquVtvOAnea
Fj5IAgNBlryVuJkYBL4vVeyl84NBtU1vQ9mlEJDpS4rL87hgsNll8+oLPHCk
+8HGdHk4eHvZz920KALM1hNqf0UkqOXvXdldiAJphdkh3TPR4Io5w79UwwdF
KYx4zqcYMNRq4rTVYiyodhnM1K/FgY7my09nNALwXwegbfONpJSrOIFkvViK
EOXjGHKAfOnqOYwTyN7FVCO6B44hx2tSJf0DlDTpW1qzGieQGZvtyj0LHENW
SdrF9U2Uhwvoo/MqSu99syRvHSeQcnKYk6kXYMjlruGPPytwMLcs0Dt0jPKV
yPhsto7yjY/qu4seJ5DrxtO7kq8CDHlIOtXiU4yDbZVRq6VySk2utXXHZ8qa
jI0Oxg6lzVjSpg2JE8hq0/lYvy8CDPmwb25LIcZBRnU858hrypJ8hyz2EiU9
84dhapPyW9oq9+4e5X//Eb8Bnudy+g==
     "], {{{}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{1, 78, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 55, 
           58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 44, 43,
            42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 
           26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10,
            9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
           71}}]}]}, {}, {}}, {{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
         63, 59, 75, 69, 64, 76, 70, 77, 50}]}}}], {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "AxesInFront" -> True}, 
     PlotRange -> {{-100, 100}, {-99.99999591836735, 99.99999591836735}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"x"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665478552913171*^9, 3.665478581554059*^9}, 
   3.6654786250012293`*^9, {3.6654786607084103`*^9, 3.6654786925901875`*^9}, 
   3.6654787746716084`*^9, 3.66547890336205*^9, 3.671067536994088*^9, 
   3.6710836262586985`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4", ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a", "[", 
         RowBox[{"2", ",", "0"}], "]"}], ",", 
        RowBox[{"f2b", "[", 
         RowBox[{"2", ",", "0"}], "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}]}], "]"}],
    ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a", "[", 
         RowBox[{"4", ",", "2"}], "]"}], ",", 
        RowBox[{"f2b", "[", 
         RowBox[{"4", ",", "2"}], "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}]}], "]"}],
    ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a", "[", 
         RowBox[{"6.0", ",", "4"}], "]"}], ",", 
        RowBox[{"f2b", "[", 
         RowBox[{"6.0", ",", "4"}], "]"}]}], "}"}], "}"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}]}], "]"}],
    ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "8"}], ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "15"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654781174460077`*^9, 3.6654781174928846`*^9}, {
  3.665478557916477*^9, 3.665478600720398*^9}, {3.66547863461568*^9, 
  3.665478644084043*^9}, {3.665478712320449*^9, 3.6654787383188157`*^9}, {
  3.665478795751444*^9, 3.66547882520009*^9}, {3.665478873486477*^9, 
  3.665478881966508*^9}, {3.665490030112546*^9, 3.665490080408449*^9}, {
  3.665490156874035*^9, 3.665490221803079*^9}, {3.665490276515955*^9, 
  3.6654902962905626`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KTMgCzdrP/TS0oX/Ad62Tk0=
          "]]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rVDOtZX4HxUq2Cc=
          "]]}}}, {}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {}}, 
     GraphicsComplexBox[CompressedData["
1:eJxd0/sv1XEcx3HMyJGKNZe2Zie3H2Iz7EwH53zliNMhl4PzJbkkzuwwpDma
SxQyrJgSK06aKYmTyspG5+v8QJs4qDg4tkN1HNpOSJz41qm2Pu/v1g+vPf6A
15708znR6SZGRkZn/uyvialLOoMBJ5BTE34ThCll7SS7LHkrDmyz2E+z3I4F
cR0me07GgAKhYwhTxweldiOd4xvRYFii7RxLHQU2hCkYPe8iwXPa+8rIZxHg
sZRtrUljONhySvVo4g4PTK5olN3q5ILStdYi29oQsE/mu9LXGAwGDLnq910M
Au1tNMkJCYEgt1ukqxlngQXX+oTKBiZodsIei29jgI/ZLmlRcV6gcrVLWMxx
B50O8kYHs5xBj568wtlZO/D6yMkiS5VBhpQH2FqTwl9spE+dfNCpxB5D9lsk
FQ85OoNuxw9U7na5g1Kxv4NblRcoJCfrj+YwQEtP2dC9J0wwrKquVtvOAnea
Fj5IAgNBlryVuJkYBL4vVeyl84NBtU1vQ9mlEJDpS4rL87hgsNll8+oLPHCk
+8HGdHk4eHvZz920KALM1hNqf0UkqOXvXdldiAJphdkh3TPR4Io5w79UwwdF
KYx4zqcYMNRq4rTVYiyodhnM1K/FgY7my09nNALwXwegbfONpJSrOIFkvViK
EOXjGHKAfOnqOYwTyN7FVCO6B44hx2tSJf0DlDTpW1qzGieQGZvtyj0LHENW
SdrF9U2Uhwvoo/MqSu99syRvHSeQcnKYk6kXYMjlruGPPytwMLcs0Dt0jPKV
yPhsto7yjY/qu4seJ5DrxtO7kq8CDHlIOtXiU4yDbZVRq6VySk2utXXHZ8qa
jI0Oxg6lzVjSpg2JE8hq0/lYvy8CDPmwb25LIcZBRnU858hrypJ8hyz2EiU9
84dhapPyW9oq9+4e5X//Eb8Bnudy+g==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1, 78, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 55,
             58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 44, 
            43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 
            27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
            11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 
            71}}]}]}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
          63, 59, 75, 69, 64, 76, 70, 77, 50}]}}}], {{}, {{{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledDiamond]\"", FontSize -> 18, StripOnInput -> False], 
             TraditionalForm]], {0., 
           0.}], {{{-2.000340806940226, -2.0003058236739424`}}, \
{{-2.000340806940226, -2.0003058236739424`}}}]}, {}}}, {}}, {{}, {{{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledDiamond]\"", FontSize -> 18, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], {{{1.3277980679959889`, 
          1.3067888439133313`}}, {{1.3277980679959889`, 
          1.3067888439133313`}}}]}, {}}}, {}}, {{}, {{{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.019444444444444445`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         GeometricTransformationBox[
          InsetBox[
           BoxData[
            FormBox[
             StyleBox[
             "\"\[FilledDiamond]\"", FontSize -> 18, StripOnInput -> False], 
             TraditionalForm]], {0., 0.}], {{{4.235345631362075, 
          4.235345650596689}}, {{4.235345631362075, 
          4.235345650596689}}}]}, {}}}, {}}}, {
    GridLines -> {{0}, {0}}, PlotRange -> {{-8, 15}, {-15, 6}}, ImageSize -> 
     500, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-4.888351173848449, 
       7.704644868655741}, {-12.459557551913747`, 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], Method -> {}, 
     PlotRange -> {{-4.888351173848449, 
       7.704644868655741}, {-12.459557551913747`, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"x"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665478564781643*^9, 3.665478601069172*^9}, {
   3.6654786361324615`*^9, 3.665478696771375*^9}, 3.6654787392219343`*^9, 
   3.6654787787353277`*^9, 3.665478825715743*^9, {3.6654788823102536`*^9, 
   3.6654789052714834`*^9}, {3.6654900450072813`*^9, 3.665490081409537*^9}, {
   3.6654901584230475`*^9, 3.665490177582296*^9}, 3.665490232593402*^9, {
   3.6654902793250847`*^9, 3.6654902975250006`*^9}, 3.6710675380125785`*^9, 
   3.6710836279103494`*^9}]
}, Open  ]],

Cell[BoxData[""], "Text", "Input",
 CellChangeTimes->{{3.665475928018588*^9, 3.6654759281289797`*^9}, {
  3.6654953061257563`*^9, 3.665495328268528*^9}}],

Cell["We plot the same graph but for d=1.05.", "Text",
 CellChangeTimes->{{3.6654953319619927`*^9, 3.665495345914301*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"func2", "[", 
    RowBox[{"a_", ",", "b_", ",", "\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"1.05", ",", "\[CapitalDelta]", ",", "l", ",", "z", ",", "zb"}], 
     "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z", "\[Rule]", 
       RowBox[{"0.5", "+", "a", "+", "b"}]}], ",", 
      RowBox[{"zb", "\[Rule]", 
       RowBox[{"0.5", "+", "a", "-", "b"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6654756910176954`*^9, 3.66547569763365*^9}, {
  3.6654757547049894`*^9, 3.665475793695286*^9}, {3.66547585473678*^9, 
  3.665475855393064*^9}, {3.6654929864538374`*^9, 3.6654929934865246`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6654901660496693`*^9, 3.665490180926959*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f2a2", "[", 
   RowBox[{"\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"func2", "[", 
        RowBox[{
         RowBox[{"a", "+", "h"}], ",", "b", ",", "\[CapitalDelta]", ",", 
         "l"}], "]"}], "+", 
       RowBox[{"func2", "[", 
        RowBox[{
         RowBox[{"a", "-", "h"}], ",", "b", ",", "\[CapitalDelta]", ",", 
         "l"}], "]"}], "-", 
       RowBox[{"2", "*", 
        RowBox[{"func2", "[", 
         RowBox[{"a", ",", "b", ",", "\[CapitalDelta]", ",", "l"}], "]"}]}]}],
       ")"}], "/", 
     RowBox[{"h", "^", "2"}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0.0001"}], ",", 
     RowBox[{"b", "\[Rule]", "0.0001"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2b2", "[", 
   RowBox[{"\[CapitalDelta]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"func2", "[", 
        RowBox[{"a", ",", 
         RowBox[{"b", "+", "h"}], ",", "\[CapitalDelta]", ",", "l"}], "]"}], 
       "+", 
       RowBox[{"func2", "[", 
        RowBox[{"a", ",", 
         RowBox[{"b", "-", "h"}], ",", "\[CapitalDelta]", ",", "l"}], "]"}], 
       "-", 
       RowBox[{"2", "*", 
        RowBox[{"func2", "[", 
         RowBox[{"a", ",", "b", ",", "\[CapitalDelta]", ",", "l"}], "]"}]}]}],
       ")"}], "/", 
     RowBox[{"h", "^", "2"}]}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0.0001"}], ",", 
     RowBox[{"b", "\[Rule]", "0.0001"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6654930542610703`*^9, 3.665493081959549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a2", "[", 
         RowBox[{"\[CapitalDelta]", ",", "0"}], "]"}], ",", 
        RowBox[{"f2b2", "[", 
         RowBox[{"\[CapitalDelta]", ",", "0"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "2", ",", "5", ",", "0.01"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6654931027834406`*^9, 3.6654931257777815`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{-2.5770337025998735`, 
    6.4364758247670295`}, {-5.8658872433281495`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.665493120672378*^9, 3.6654931880683413`*^9, 
  3.671067544871125*^9, 3.6710836425588846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q2", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a2", "[", 
         RowBox[{"\[CapitalDelta]", ",", "2"}], "]"}], ",", 
        RowBox[{"f2b2", "[", 
         RowBox[{"\[CapitalDelta]", ",", "2"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "4", ",", "7", ",", "0.01"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66549327811141*^9, 3.665493291296204*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
tm8I76c0KHThUTvxP94DyvU=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{0, 12.948984466298885`}, {-0.3687728601098339, 
    1.1145114457433714`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.665493441316288*^9, 3.6710675524097433`*^9, 
  3.6710836614466476`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q3", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f2a2", "[", 
         RowBox[{"\[CapitalDelta]", ",", "4"}], "]"}], ",", 
        RowBox[{"f2b2", "[", 
         RowBox[{"\[CapitalDelta]", ",", "4"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]", ",", "6", ",", "9", ",", "0.01"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6654950556196356`*^9, 3.6654950742090364`*^9}, {
  3.665495136148362*^9, 3.665495136237418*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.673316092792502, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->{{3.7271743062172735`, 7.174099965402691}, {
    0, 3.9552873857817694`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6654950707297163`*^9, 3.6654951160929804`*^9, 
  3.665495177738106*^9, 3.6710675599862175`*^9, 3.671083673369872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"q1", ",", "q2", ",", "q3", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6654951188988543`*^9, 3.665495124831813*^9}, {
  3.6654951699659204`*^9, 3.665495263888582*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011111111111111112`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011111111111111112`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
tm8I76c0KHThUTvxP94DyvU=
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011111111111111112`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6654951256813774`*^9, {3.6654951780563183`*^9, 3.6654952644719667`*^9}, 
   3.67106756046807*^9, 3.6710836736113205`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6710672675152097`*^9, 3.6710672694866686`*^9}}]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{1358, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.1999999999999, 841.8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (32-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 106, 1, 151, "Title"],
Cell[689, 25, 160, 3, 50, "Text"],
Cell[852, 30, 473, 14, 50, "Input"],
Cell[1328, 46, 1589, 41, 83, "Input"],
Cell[2920, 89, 96, 1, 50, "Input"],
Cell[3019, 92, 474, 15, 50, "Input"],
Cell[3496, 109, 410, 12, 83, "Input"],
Cell[3909, 123, 1896, 52, 50, "Input"],
Cell[5808, 177, 132, 1, 50, "Text"],
Cell[CellGroupData[{
Cell[5965, 182, 1486, 24, 50, "Input"],
Cell[7454, 208, 3113, 79, 152, "Output"]
}, Open  ]],
Cell[10582, 290, 3152, 80, 229, "Input"],
Cell[13737, 372, 168, 3, 50, "Text"],
Cell[CellGroupData[{
Cell[13930, 379, 936, 24, 83, "Input"],
Cell[14869, 405, 64257, 1144, 436, "Output"]
}, Open  ]],
Cell[79141, 1552, 774, 18, 50, "Input"],
Cell[79918, 1572, 387, 11, 50, "Input"],
Cell[80308, 1585, 202, 4, 50, "Text"],
Cell[CellGroupData[{
Cell[80535, 1593, 750, 14, 50, "Input"],
Cell[81288, 1609, 111316, 2134, 583, "Output"]
}, Open  ]],
Cell[192619, 3746, 225, 5, 50, "Text"],
Cell[192847, 3753, 12369, 287, 607, "Input"],
Cell[205219, 4042, 166, 3, 50, "Text"],
Cell[205388, 4047, 386, 10, 50, "Input"],
Cell[CellGroupData[{
Cell[205799, 4061, 711, 13, 83, "Input"],
Cell[206513, 4076, 76208, 1457, 613, "Output"]
}, Open  ]],
Cell[282736, 5536, 245, 5, 50, "Text"],
Cell[CellGroupData[{
Cell[283006, 5545, 1026, 23, 115, "Input"],
Cell[284035, 5570, 38142, 695, 596, "Output"]
}, Open  ]],
Cell[322192, 6268, 220, 3, 50, "Input"],
Cell[322415, 6273, 162, 3, 50, "Text"],
Cell[322580, 6278, 467, 12, 50, "Input"],
Cell[323050, 6292, 94, 1, 50, "Input"],
Cell[323147, 6295, 13755, 330, 815, "Input"],
Cell[336905, 6627, 696, 11, 115, "Text"],
Cell[CellGroupData[{
Cell[337626, 6642, 1084, 23, 147, "Input"],
Cell[338713, 6667, 52861, 939, 613, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391611, 7611, 893, 21, 115, "Input"],
Cell[392507, 7634, 67806, 1183, 598, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460350, 8822, 909, 21, 115, "Input"],
Cell[461262, 8845, 50243, 896, 613, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511542, 9746, 1141, 26, 115, "Input"],
Cell[512686, 9774, 107861, 1893, 577, "Output"]
}, Open  ]],
Cell[620562, 11670, 196, 4, 50, "Text"],
Cell[CellGroupData[{
Cell[620783, 11678, 1392, 29, 115, "Input"],
Cell[622178, 11709, 58445, 1083, 577, "Output"]
}, Open  ]],
Cell[680638, 12795, 784, 13, 179, "Text"],
Cell[681425, 12810, 168, 2, 50, "Input"],
Cell[681596, 12814, 120, 2, 50, "Input"],
Cell[681719, 12818, 120, 2, 50, "Input"],
Cell[681842, 12822, 811, 19, 50, "Input"],
Cell[682656, 12843, 2183, 59, 115, "Input"],
Cell[CellGroupData[{
Cell[684864, 12906, 1172, 24, 50, "Input"],
Cell[686039, 12932, 9453, 168, 408, "Output"]
}, Open  ]],
Cell[695507, 13103, 96, 1, 50, "Input"],
Cell[CellGroupData[{
Cell[695628, 13108, 610, 16, 50, "Input"],
Cell[696241, 13126, 7167, 131, 411, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703445, 13262, 1292, 27, 50, "Input"],
Cell[704740, 13291, 7263, 131, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712040, 13427, 668, 14, 50, "Input"],
Cell[712711, 13443, 9374, 192, 403, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722122, 13640, 2270, 63, 115, "Input"],
Cell[724395, 13705, 32929, 602, 556, "Output"]
}, Open  ]],
Cell[757339, 14310, 153, 2, 50, "Text"],
Cell[757495, 14314, 122, 1, 50, "Text"],
Cell[757620, 14317, 713, 17, 50, "Input"],
Cell[758336, 14336, 94, 1, 50, "Input"],
Cell[758433, 14339, 1713, 51, 83, "Input"],
Cell[CellGroupData[{
Cell[760171, 14394, 612, 16, 50, "Input"],
Cell[760786, 14412, 7284, 132, 414, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768107, 14549, 607, 16, 50, "Input"],
Cell[768717, 14567, 7179, 131, 411, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775933, 14703, 661, 17, 50, "Input"],
Cell[776597, 14722, 7316, 132, 419, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[783950, 14859, 410, 10, 50, "Input"],
Cell[784363, 14871, 19905, 341, 415, "Output"]
}, Open  ]],
Cell[804283, 15215, 96, 1, 50, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
